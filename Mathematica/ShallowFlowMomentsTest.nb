(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    467801,       9329]
NotebookOptionsPosition[    460369,       9190]
NotebookOutlinePosition[    460735,       9206]
CellTagsIndexPosition[    460692,       9203]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Shallow Flow Moment Equations (periodic in x) ", "Chapter",ExpressionUUID->"59327d0c-b1ed-4a16-9269-e4443a1cc6cf"],

Cell[CellGroupData[{

Cell["Function Definitions", "Section",ExpressionUUID->"c3466952-05b4-4b4b-9329-2564e1bcbcbd"],

Cell[CellGroupData[{

Cell["Tools", "Subsection",ExpressionUUID->"a53052cf-1a4e-4d1b-ad3c-fd0162ec9e68"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "\"\<Global`*\>\"", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"SetAttributes", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"P", ",", "A0"}], "}"}], ",", "Listable"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ZeroMatrix", "[", "n_", "]"}], ":=", 
  RowBox[{"0", 
   RowBox[{"IdentityMatrix", "[", "n", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Diag", "[", "list_", "]"}], ":=", 
   RowBox[{"DiagonalMatrix", "[", "list", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"interpolate", "[", 
   RowBox[{"pts_", ",", "val_", ",", "dim_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"len", "=", 
      RowBox[{"Length", "[", 
       RowBox[{"Flatten", "[", "val", "]"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Interpolation", "[", 
     RowBox[{
      RowBox[{"ArrayReshape", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"Thread", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ArrayReshape", "[", 
             RowBox[{
              RowBox[{"Flatten", "[", "pts", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"len", ",", "dim"}], "}"}]}], "]"}], ",", 
            RowBox[{"Flatten", "[", "val", "]"}]}], "}"}], "]"}], "]"}], ",", 
        
        RowBox[{"{", 
         RowBox[{"len", ",", 
          RowBox[{"dim", "+", "1"}]}], "}"}]}], "]"}], ",", 
      RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"iSize", "=", "400"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"color", "=", 
   RowBox[{"{", 
    RowBox[{"Red", ",", "Green", ",", "Blue", ",", "Purple"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"markers", "=", 
   RowBox[{"{", 
    RowBox[{
    "\[FilledUpTriangle]", ",", "\[FilledSquare]", ",", "\[FilledDiamond]", 
     ",", "\[FilledCircle]", ",", "\[FivePointedStar]"}], "}"}]}], 
  ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->"In[85]:=",ExpressionUUID->"3fe79328-6e2b-4802-add5-91024bd8b154"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cell Interface Reconstruction", "Subsection",ExpressionUUID->"e57827b6-85e5-4ade-9b1f-512c18bd6c96"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gam", "=", "1.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Rlimit", "[", 
     RowBox[{"dm_", ",", "dp_"}], "]"}], "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"dp", " ", "dm"}], "\[LessEqual]", "0"}], ",", "0", ",", 
      RowBox[{
       RowBox[{"Sign", "[", "dp", "]"}], 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"gam", " ", "dm"}], "]"}], ",", 
         RowBox[{"Abs", "[", 
          FractionBox[
           RowBox[{
            RowBox[{"2", "dp"}], "+", "dm"}], "3"], "]"}], ",", 
         RowBox[{"Abs", "[", 
          RowBox[{
           FractionBox[
            RowBox[{"1", "+", "gam"}], "2"], "dp"}], "]"}]}], "]"}]}]}], 
     "]"}]}], ";"}], " ", 
  RowBox[{"(*", "Limiter", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Rfull", "[", 
     RowBox[{"dm_", ",", "dp_"}], "]"}], "=", 
    RowBox[{
     RowBox[{"Sign", "[", "dp", "]"}], 
     RowBox[{"Max", "[", 
      RowBox[{"0", ",", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Sign", "[", "dp", "]"}], 
          FractionBox[
           RowBox[{
            RowBox[{"2", "dp"}], "+", "dm"}], "3"]}], ",", 
         RowBox[{"Max", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"Sign", "[", "dp", "]"}]}], "dm"}], ",", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"gam", " ", 
              RowBox[{"Sign", "[", "dp", "]"}], "dm"}], ",", 
             RowBox[{
              RowBox[{"Sign", "[", "dp", "]"}], 
              FractionBox[
               RowBox[{
                RowBox[{"2", "dp"}], "+", "dm"}], "3"]}], ",", 
             RowBox[{
              FractionBox[
               RowBox[{"1", "+", "gam"}], "2"], 
              RowBox[{"Abs", "[", "dp", "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
      "]"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Recon", "[", 
   RowBox[{"list_", ",", "opt_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Function", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"um", ",", "u", ",", "up"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"u", ",", "u"}], "}"}]}], "]"}], "@@", "#"}], "&"}], ",", 
       
       RowBox[{"Partition", "[", 
        RowBox[{
         RowBox[{"ArrayPad", "[", 
          RowBox[{"#", ",", "2", ",", "opt", ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], ",", "3", 
         ",", "1"}], "]"}]}], "]"}], "&"}], ",", "list"}], "]"}]}]}], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.79190411463304*^9, 3.791904116150283*^9}, {
  3.791904148470656*^9, 3.791904150148246*^9}, {3.792154622026225*^9, 
  3.792154625775021*^9}},
 CellLabel->"In[93]:=",ExpressionUUID->"f2bb8d8b-6b90-403d-ab47-9980b70df463"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full Grid Flux Calculation", "Subsection",ExpressionUUID->"d3ac6bee-608a-4501-8d0c-79f8e656022d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Residuum", "[", "U_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"Urecons", ",", "Uright", ",", "Uleft", ",", "CMax", ",", 
      RowBox[{"delta", "=", "0.95"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Urecons", "=", 
      RowBox[{"Recon", "[", 
       RowBox[{"U", ",", "\"\<Periodic\>\""}], "]"}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"Uright", "=", 
      RowBox[{"Urecons", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{";;", 
         RowBox[{"-", "2"}]}], ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Uleft", "=", 
      RowBox[{"Urecons", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"2", ";;"}], ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"dU", "=", 
      RowBox[{
       RowBox[{"Uright", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "-", 
       RowBox[{"Uleft", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", 
         RowBox[{";;", 
          RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"CMax", "=", 
      RowBox[{"ConstantArray", "[", 
       RowBox[{
        RowBox[{"ListConvolve", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1", "/", "2"}], ",", 
            RowBox[{"1", "/", "2"}]}], "}"}], ",", 
          RowBox[{"MaxSpeed", "@@", "U"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", 
            RowBox[{"-", "1"}]}], "}"}], ",", "\"\<Periodic\>\""}], "]"}], 
        ",", 
        RowBox[{"Length", "[", "U", "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cMax", "=", 
      RowBox[{"Max", "[", "CMax", "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "dx"]}], 
       RowBox[{"Differences", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox["1", "2"], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Flux", "@@", "Uright"}], "+", 
             RowBox[{"Flux", "@@", "Uleft"}]}], ")"}]}], "+", 
          RowBox[{
           FractionBox["delta", "2"], "CMax", 
           RowBox[{"(", 
            RowBox[{"Uright", "-", "Uleft"}], ")"}]}]}], ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "1"}], "}"}]}], "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "dx"], 
       RowBox[{"Transpose", "[", 
        RowBox[{"MapThread", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"#1", ".", "#2"}], "&"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"A0", "@@", "U"}], ",", 
            RowBox[{"Transpose", "[", "dU", "]"}]}], "}"}]}], "]"}], "]"}]}], 
      "-", 
      RowBox[{"Transpose", "[", 
       RowBox[{"P", "@@", "U"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7919041733732567`*^9, 3.79190417655541*^9}},
 CellLabel->"In[97]:=",ExpressionUUID->"4b299195-8fc6-4c09-9eeb-5b6988468bf2"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Simulation Setup and Time Integration", "Subsection",ExpressionUUID->"f25edc49-a3d9-487b-99ca-9d80abeaa315"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"FiniteVolumeRun", "[", 
     RowBox[{"nx_", ",", "tend_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dx", "=", 
        FractionBox[
         RowBox[{"x2", "-", "x1"}], "nx"]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"xs", "[", "i_", "]"}], "=", 
        RowBox[{"x1", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"i", "-", "0.5"}], ")"}], "dx"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"pts", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"xs", "[", "i", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", "nx"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Uraw", "=", 
        RowBox[{"Transpose", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"init", "[", 
            RowBox[{"xs", "[", "i", "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", "nx"}], "}"}]}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"cMax", "=", "0.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"dt", "=", 
        RowBox[{"0.1", "dx"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"time", "=", "0.0"}], ";", "\[IndentingNewLine]", 
       RowBox[{"step", "=", "0"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{"time", "<", "tend"}], ",", "\[IndentingNewLine]", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Uraw", "=", 
           RowBox[{"Uraw", "+", 
            RowBox[{"dt", " ", 
             RowBox[{"Residuum", "[", "Uraw", "]"}]}]}]}], ";", 
          "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"time", "+=", "dt"}], ";", "\[IndentingNewLine]", 
          RowBox[{"step", "++"}], ";", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"dt", "=", 
           RowBox[{"0.5", 
            RowBox[{"dx", "/", "cMax"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"CFL", "=", 
           RowBox[{"cMax", " ", 
            RowBox[{"dt", "/", "dx"}]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"time", "+", "dt"}], "\[GreaterEqual]", "tend"}], "&&", 
             
             RowBox[{"time", "<", "tend"}]}], ",", 
            RowBox[{"dt", "=", 
             RowBox[{"tend", "-", "time", "+", 
              SuperscriptBox["10", 
               RowBox[{"-", "8"}]]}]}]}], "]"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"time", ",", "step"}], "}"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.7919042541375637`*^9, 3.791904286941422*^9}, {
   3.792154725357242*^9, 3.792154732800103*^9}, 3.792155226464931*^9, {
   3.7921555516891317`*^9, 3.7921555518240747`*^9}, {3.792155688065967*^9, 
   3.792155723433673*^9}, {3.792157951017268*^9, 3.792157951264179*^9}},
 CellLabel->
  "In[409]:=",ExpressionUUID->"ee8db1e9-c8e5-44fe-8811-1077118d360f"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Visualization for Dynamic Output", "Subsection",ExpressionUUID->"1e28f0b0-67d3-438f-bae3-b234d623815d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Visual", "[", 
   RowBox[{"U_", ",", "iSize_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"nx", ",", "ny"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", 
     RowBox[{"{", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{"0", ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
            RowBox[{"GridLines", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.5"}], ",", "0", ",", "0.5"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", 
             RowBox[{"\"\<h(x,t) at time: \>\"", "<>", 
              RowBox[{"ToString", "[", "time", "]"}], "<>", 
              "\"\< (step: \>\"", "<>", 
              RowBox[{"ToString", "[", "step", "]"}], "<>", 
              "\"\<, \[CapitalDelta]t = \>\"", "<>", 
              RowBox[{"ToString", "[", "dt", "]"}], "<>", "\"\<, CFL = \>\"", 
              "<>", 
              RowBox[{"ToString", "[", "CFL", "]"}], "<>", "\"\<)\>\""}]}], 
            ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0.8", ",", "1.5"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "iSize"}], ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"Panel", "[", "modeltag", "]"}], ",", 
                RowBox[{"Scaled", "[", 
                 RowBox[{"{", 
                  RowBox[{".9", ",", ".9"}], "}"}], "]"}]}], "]"}], "}"}]}]}],
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{"pts", ",", 
               RowBox[{
               "U", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
              "}"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "iSize"}]}], "]"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
            RowBox[{"GridLines", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.5"}], ",", "0", ",", "0.5"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Blue", ",", "Green"}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<u_Ave(x,t)\>\""}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "iSize"}], ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"Panel", "[", "modeltag", "]"}], ",", 
                RowBox[{"Scaled", "[", 
                 RowBox[{"{", 
                  RowBox[{".9", ",", ".9"}], "}"}], "]"}]}], "]"}], "}"}]}]}],
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{"pts", ",", 
               RowBox[{
               "U", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], 
              "}"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "iSize"}]}], "]"}]}], "]"}], ",", 
        
        RowBox[{"Show", "[", 
         RowBox[{
          RowBox[{"Plot", "[", 
           RowBox[{
            RowBox[{"{", "0", "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
            RowBox[{"GridLines", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.5"}], ",", "0", ",", "0.5"}], "}"}], ",", 
               RowBox[{"{", "}"}]}], "}"}]}], ",", 
            RowBox[{"PlotStyle", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Blue", ",", "Green"}], "}"}]}], ",", 
            RowBox[{"PlotLabel", "\[Rule]", "\"\<s_Ave(x,t)\>\""}], ",", 
            RowBox[{"PlotRange", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"x1", ",", "x2"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", "0.4"}], ",", "0.6"}], "}"}]}], "}"}]}], ",", 
            RowBox[{"Frame", "\[Rule]", "True"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "iSize"}], ",", 
            RowBox[{"Epilog", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{"Inset", "[", 
               RowBox[{
                RowBox[{"Panel", "[", "modeltag", "]"}], ",", 
                RowBox[{"Scaled", "[", 
                 RowBox[{"{", 
                  RowBox[{".9", ",", ".9"}], "}"}], "]"}]}], "]"}], "}"}]}]}],
            "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ListPlot", "[", 
           RowBox[{
            RowBox[{"Transpose", "[", 
             RowBox[{"{", 
              RowBox[{"pts", ",", 
               RowBox[{
               "U", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}]}], 
              "}"}], "]"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "iSize"}]}], "]"}]}], "]"}]}], 
       "}"}], "}"}], "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.792157763291422*^9, 3.792157788888968*^9}, {
  3.792176228637526*^9, 3.7921762422029533`*^9}, {3.7921765769307413`*^9, 
  3.792176587569408*^9}, {3.792176623577302*^9, 3.792176626600966*^9}},
 CellLabel->
  "In[613]:=",ExpressionUUID->"f1588e6f-408e-4c75-8dfa-9b39f62c6a25"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Reference Data from Depth-Projected Model", "Section",ExpressionUUID->"b4b134eb-d5df-4059-ad9e-8160a284a3b6"],

Cell[CellGroupData[{

Cell["tend = 2.0", "Subsubsection",ExpressionUUID->"01499126-11fe-48a5-9c50-aeb7de367670"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Kinematic\[Dagger]C", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.975"}], ",", "1.000853", ",", "0.250037", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.925"}], ",", "1.000929", ",", "0.250109", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.875"}], ",", "1.001096", ",", "0.250193", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.825"}], ",", "1.001377", ",", "0.250323", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.775"}], ",", "1.001855", ",", "0.250508", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.725"}], ",", "1.002618", ",", "0.250796", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.675"}], ",", "1.003865", ",", "0.251212", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.625"}], ",", "1.005833", ",", "0.25181", ",", "0", ",",
        "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.575"}], ",", "1.009016", ",", "0.25246", ",", "0", ",",
        "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.525"}], ",", "1.013448", ",", "0.253517", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.475"}], ",", "1.034466", ",", "0.23995", ",", "0", ",",
        "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.425"}], ",", "1.1902", ",", "0.101373", ",", "0", ",", 
       "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.375"}], ",", "1.192672", ",", "0.111574", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.325"}], ",", "1.191692", ",", "0.126386", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.275"}], ",", "1.190442", ",", "0.143318", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.225"}], ",", "1.189408", ",", "0.161197", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.175"}], ",", "1.188645", ",", "0.180051", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.125"}], ",", "1.18797", ",", "0.199639", ",", "0", ",",
        "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.075"}], ",", "1.187465", ",", "0.219638", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.025"}], ",", "1.187242", ",", "0.239942", ",", "0", 
       ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "1.187257", ",", "0.260183", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.075", ",", "1.187601", ",", "0.280341", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.125", ",", "1.187985", ",", "0.30032", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.175", ",", "1.188602", ",", "0.319902", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.225", ",", "1.189381", ",", "0.338897", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.275", ",", "1.190534", ",", "0.356805", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.325", ",", "1.191669", ",", "0.373468", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.375", ",", "1.193444", ",", "0.389081", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.425", ",", "1.189239", ",", "0.39772", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.475", ",", "1.034302", ",", "0.260061", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.525", ",", "1.013718", ",", "0.246737", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.575", ",", "1.008959", ",", "0.247474", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.625", ",", "1.005824", ",", "0.248177", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.675", ",", "1.003849", ",", "0.24879", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.725", ",", "1.002598", ",", "0.24921", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.775", ",", "1.001829", ",", "0.249482", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.825", ",", "1.001359", ",", "0.249665", ",", "0", ",", "0"}],
       "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.875", ",", "1.00108", ",", "0.249799", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.925", ",", "1.000926", ",", "0.2499", ",", "0", ",", "0"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.975", ",", "1.000855", ",", "0.249974", ",", "0", ",", "0"}],
       "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Kinematic\[Dagger]L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.975"}], ",", "1.000965", ",", "0.249991", ",", 
       RowBox[{"-", "0.083078"}], ",", "0.000032"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.925"}], ",", "1.001047", ",", "0.249972", ",", 
       RowBox[{"-", "0.083044"}], ",", "0.000125"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.875"}], ",", "1.001248", ",", "0.249937", ",", 
       RowBox[{"-", "0.082955"}], ",", "0.000226"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.825"}], ",", "1.001596", ",", "0.249873", ",", 
       RowBox[{"-", "0.082811"}], ",", "0.000355"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.775"}], ",", "1.002148", ",", "0.249776", ",", 
       RowBox[{"-", "0.08261"}], ",", "0.000525"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.725"}], ",", "1.003028", ",", "0.249606", ",", 
       RowBox[{"-", "0.082349"}], ",", "0.00073"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.675"}], ",", "1.004416", ",", "0.249305", ",", 
       RowBox[{"-", "0.082023"}], ",", "0.000978"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.625"}], ",", "1.006849", ",", "0.248524", ",", 
       RowBox[{"-", "0.081669"}], ",", "0.001272"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.575"}], ",", "1.009483", ",", "0.248466", ",", 
       RowBox[{"-", "0.081202"}], ",", "0.001598"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.525"}], ",", "1.063129", ",", "0.198193", ",", 
       RowBox[{"-", "0.084438"}], ",", "0.00206"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.475"}], ",", "1.176315", ",", "0.091857", ",", 
       RowBox[{"-", "0.092018"}], ",", "0.002894"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.425"}], ",", "1.17438", ",", "0.102789", ",", 
       RowBox[{"-", "0.090372"}], ",", "0.003337"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.375"}], ",", "1.172107", ",", "0.115719", ",", 
       RowBox[{"-", "0.088532"}], ",", "0.003726"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.325"}], ",", "1.169679", ",", "0.13044", ",", 
       RowBox[{"-", "0.086604"}], ",", "0.004006"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.275"}], ",", "1.167704", ",", "0.146589", ",", 
       RowBox[{"-", "0.08465"}], ",", "0.004117"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.225"}], ",", "1.166274", ",", "0.163888", ",", 
       RowBox[{"-", "0.082762"}], ",", "0.004016"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.175"}], ",", "1.165348", ",", "0.182124", ",", 
       RowBox[{"-", "0.081022"}], ",", "0.003663"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.125"}], ",", "1.164753", ",", "0.201079", ",", 
       RowBox[{"-", "0.079567"}], ",", "0.002951"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.075"}], ",", "1.164436", ",", "0.22047", ",", 
       RowBox[{"-", "0.078451"}], ",", "0.001952"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.025"}], ",", "1.164352", ",", "0.240107", ",", 
       RowBox[{"-", "0.077816"}], ",", "0.0007"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "1.164344", ",", "0.259912", ",", 
       RowBox[{"-", "0.07779"}], ",", 
       RowBox[{"-", "0.000729"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.075", ",", "1.164484", ",", "0.279564", ",", 
       RowBox[{"-", "0.078372"}], ",", 
       RowBox[{"-", "0.002004"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.125", ",", "1.164762", ",", "0.298948", ",", 
       RowBox[{"-", "0.079555"}], ",", 
       RowBox[{"-", "0.002969"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.175", ",", "1.165321", ",", "0.317883", ",", 
       RowBox[{"-", "0.081063"}], ",", 
       RowBox[{"-", "0.003639"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.225", ",", "1.166285", ",", "0.336109", ",", 
       RowBox[{"-", "0.082804"}], ",", 
       RowBox[{"-", "0.004008"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.275", ",", "1.167687", ",", "0.353435", ",", 
       RowBox[{"-", "0.084694"}], ",", 
       RowBox[{"-", "0.004123"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.325", ",", "1.169581", ",", "0.369623", ",", 
       RowBox[{"-", "0.086642"}], ",", 
       RowBox[{"-", "0.004007"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.375", ",", "1.172035", ",", "0.384371", ",", 
       RowBox[{"-", "0.088578"}], ",", 
       RowBox[{"-", "0.003728"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.425", ",", "1.174551", ",", "0.397045", ",", 
       RowBox[{"-", "0.090465"}], ",", 
       RowBox[{"-", "0.003338"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.475", ",", "1.176503", ",", "0.406938", ",", 
       RowBox[{"-", "0.092143"}], ",", 
       RowBox[{"-", "0.0029"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.525", ",", "1.064763", ",", "0.30375", ",", 
       RowBox[{"-", "0.084962"}], ",", 
       RowBox[{"-", "0.002067"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.575", ",", "1.010174", ",", "0.252279", ",", 
       RowBox[{"-", "0.081266"}], ",", 
       RowBox[{"-", "0.001588"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.625", ",", "1.006757", ",", "0.251408", ",", 
       RowBox[{"-", "0.081663"}], ",", 
       RowBox[{"-", "0.001267"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.675", ",", "1.004407", ",", "0.250698", ",", 
       RowBox[{"-", "0.082026"}], ",", 
       RowBox[{"-", "0.000975"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.725", ",", "1.003017", ",", "0.250389", ",", 
       RowBox[{"-", "0.08235"}], ",", 
       RowBox[{"-", "0.000725"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.775", ",", "1.002135", ",", "0.250218", ",", 
       RowBox[{"-", "0.082612"}], ",", 
       RowBox[{"-", "0.000519"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.825", ",", "1.001588", ",", "0.250131", ",", 
       RowBox[{"-", "0.082811"}], ",", 
       RowBox[{"-", "0.000353"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.875", ",", "1.00124", ",", "0.250067", ",", 
       RowBox[{"-", "0.082955"}], ",", 
       RowBox[{"-", "0.000223"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.925", ",", "1.001047", ",", "0.250032", ",", 
       RowBox[{"-", "0.083039"}], ",", 
       RowBox[{"-", "0.000122"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.975", ",", "1.000968", ",", "0.250012", ",", 
       RowBox[{"-", "0.083073"}], ",", 
       RowBox[{"-", "0.000046"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Kinematic\[Dagger]Q", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.975"}], ",", "1.000948", ",", "0.250015", ",", "0", 
       ",", 
       RowBox[{"-", "0.049753"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.925"}], ",", "1.001079", ",", "0.250022", ",", "0", 
       ",", 
       RowBox[{"-", "0.049629"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.875"}], ",", "1.001328", ",", "0.250025", ",", "0", 
       ",", 
       RowBox[{"-", "0.049448"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.825"}], ",", "1.001718", ",", "0.250023", ",", "0", 
       ",", 
       RowBox[{"-", "0.049211"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.775"}], ",", "1.002344", ",", "0.250022", ",", "0", 
       ",", 
       RowBox[{"-", "0.048869"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.725"}], ",", "1.003304", ",", "0.250016", ",", "0", 
       ",", 
       RowBox[{"-", "0.048433"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.675"}], ",", "1.004787", ",", "0.249973", ",", "0", 
       ",", 
       RowBox[{"-", "0.047906"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.625"}], ",", "1.007095", ",", "0.24985", ",", "0", ",", 
       RowBox[{"-", "0.047281"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.575"}], ",", "1.010899", ",", "0.249314", ",", "0", 
       ",", 
       RowBox[{"-", "0.04659"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.525"}], ",", "1.017739", ",", "0.246905", ",", "0", 
       ",", 
       RowBox[{"-", "0.045922"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.475"}], ",", "1.173341", ",", "0.101805", ",", "0", 
       ",", 
       RowBox[{"-", "0.052492"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.425"}], ",", "1.183498", ",", "0.10182", ",", "0", ",", 
       RowBox[{"-", "0.051121"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.375"}], ",", "1.181747", ",", "0.114826", ",", "0", 
       ",", 
       RowBox[{"-", "0.049278"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.325"}], ",", "1.18001", ",", "0.129923", ",", "0", ",", 
       RowBox[{"-", "0.047572"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.275"}], ",", "1.178472", ",", "0.146461", ",", "0", 
       ",", 
       RowBox[{"-", "0.046129"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.225"}], ",", "1.177149", ",", "0.164153", ",", "0", 
       ",", 
       RowBox[{"-", "0.045111"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.175"}], ",", "1.175974", ",", "0.18274", ",", "0", ",", 
       RowBox[{"-", "0.04462"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.125"}], ",", "1.174845", ",", "0.202012", ",", "0", 
       ",", 
       RowBox[{"-", "0.044946"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.075"}], ",", "1.17383", ",", "0.221705", ",", "0", ",", 
       RowBox[{"-", "0.04583"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.025"}], ",", "1.172854", ",", "0.241662", ",", "0", 
       ",", 
       RowBox[{"-", "0.047306"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "1.172028", ",", "0.26167", ",", "0", ",", 
       RowBox[{"-", "0.049193"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.075", ",", "1.171554", ",", "0.281569", ",", "0", ",", 
       RowBox[{"-", "0.050888"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.125", ",", "1.171517", ",", "0.30115", ",", "0", ",", 
       RowBox[{"-", "0.052416"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.175", ",", "1.171949", ",", "0.320267", ",", "0", ",", 
       RowBox[{"-", "0.053725"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.225", ",", "1.172901", ",", "0.338713", ",", "0", ",", 
       RowBox[{"-", "0.054782"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.275", ",", "1.174338", ",", "0.356265", ",", "0", ",", 
       RowBox[{"-", "0.055618"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.325", ",", "1.176273", ",", "0.372672", ",", "0", ",", 
       RowBox[{"-", "0.056288"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.375", ",", "1.178481", ",", "0.387248", ",", "0", ",", 
       RowBox[{"-", "0.056818"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.425", ",", "1.182098", ",", "0.401213", ",", "0", ",", 
       RowBox[{"-", "0.057281"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.475", ",", "1.152991", ",", "0.382371", ",", "0", ",", 
       RowBox[{"-", "0.056372"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.525", ",", "1.013658", ",", "0.251533", ",", "0", ",", 
       RowBox[{"-", "0.050418"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.575", ",", "1.008708", ",", "0.250517", ",", "0", ",", 
       RowBox[{"-", "0.05023"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.625", ",", "1.005388", ",", "0.249968", ",", "0", ",", 
       RowBox[{"-", "0.050117"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.675", ",", "1.003553", ",", "0.249885", ",", "0", ",", 
       RowBox[{"-", "0.050051"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.725", ",", "1.002419", ",", "0.249888", ",", "0", ",", 
       RowBox[{"-", "0.050006"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.775", ",", "1.001733", ",", "0.249917", ",", "0", ",", 
       RowBox[{"-", "0.04997"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.825", ",", "1.001302", ",", "0.249939", ",", "0", ",", 
       RowBox[{"-", "0.049937"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.875", ",", "1.001059", ",", "0.249962", ",", "0", ",", 
       RowBox[{"-", "0.049917"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.925", ",", "1.000942", ",", "0.249985", ",", "0", ",", 
       RowBox[{"-", "0.049877"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.975", ",", "1.00091", ",", "0.249999", ",", "0", ",", 
       RowBox[{"-", "0.049815"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Friction\[Dagger]R0p01\[Dagger]\[Chi]INF\[Dagger]L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.975"}], ",", "1.001013", ",", "0.250012", ",", 
       RowBox[{"-", "0.069503"}], ",", 
       RowBox[{"-", "9.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.925"}], ",", "1.001073", ",", "0.250023", ",", 
       RowBox[{"-", "0.069508"}], ",", 
       RowBox[{"-", "0.000021"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.875"}], ",", "1.001229", ",", "0.25002", ",", 
       RowBox[{"-", "0.069501"}], ",", 
       RowBox[{"-", "0.000027"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.825"}], ",", "1.001504", ",", "0.250008", ",", 
       RowBox[{"-", "0.069492"}], ",", 
       RowBox[{"-", "0.000022"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.775"}], ",", "1.001956", ",", "0.249981", ",", 
       RowBox[{"-", "0.069464"}], ",", "4.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.725"}], ",", "1.002717", ",", "0.249907", ",", 
       RowBox[{"-", "0.069395"}], ",", "0.000052"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.675"}], ",", "1.003964", ",", "0.249743", ",", 
       RowBox[{"-", "0.069275"}], ",", "0.000128"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.625"}], ",", "1.006099", ",", "0.249312", ",", 
       RowBox[{"-", "0.069102"}], ",", "0.000235"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.575"}], ",", "1.0092", ",", "0.248895", ",", 
       RowBox[{"-", "0.068846"}], ",", "0.000365"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.525"}], ",", "1.030087", ",", "0.231577", ",", 
       RowBox[{"-", "0.069569"}], ",", "0.000595"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.475"}], ",", "1.177082", ",", "0.093953", ",", 
       RowBox[{"-", "0.078441"}], ",", "0.00143"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.425"}], ",", "1.177344", ",", "0.102033", ",", 
       RowBox[{"-", "0.077156"}], ",", "0.001633"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.375"}], ",", "1.175115", ",", "0.114755", ",", 
       RowBox[{"-", "0.075444"}], ",", "0.001791"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.325"}], ",", "1.172917", ",", "0.129684", ",", 
       RowBox[{"-", "0.073483"}], ",", "0.001887"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.275"}], ",", "1.171253", ",", "0.145994", ",", 
       RowBox[{"-", "0.071313"}], ",", "0.001895"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.225"}], ",", "1.170065", ",", "0.163441", ",", 
       RowBox[{"-", "0.069015"}], ",", "0.001789"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.175"}], ",", "1.169346", ",", "0.181795", ",", 
       RowBox[{"-", "0.066682"}], ",", "0.00156"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.125"}], ",", "1.169052", ",", "0.200881", ",", 
       RowBox[{"-", "0.064519"}], ",", "0.001216"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.075"}], ",", "1.168891", ",", "0.220321", ",", 
       RowBox[{"-", "0.062799"}], ",", "0.000742"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.025"}], ",", "1.168933", ",", "0.240119", ",", 
       RowBox[{"-", "0.061808"}], ",", "0.00024"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "1.168917", ",", "0.259918", ",", 
       RowBox[{"-", "0.061762"}], ",", 
       RowBox[{"-", "0.000251"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.075", ",", "1.168929", ",", "0.279699", ",", 
       RowBox[{"-", "0.062827"}], ",", 
       RowBox[{"-", "0.000783"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.125", ",", "1.169", ",", "0.299149", ",", 
       RowBox[{"-", "0.064547"}], ",", 
       RowBox[{"-", "0.001213"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.175", ",", "1.169368", ",", "0.318227", ",", 
       RowBox[{"-", "0.066685"}], ",", 
       RowBox[{"-", "0.00156"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.225", ",", "1.170054", ",", "0.336551", ",", 
       RowBox[{"-", "0.06901"}], ",", 
       RowBox[{"-", "0.001792"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.275", ",", "1.171248", ",", "0.354034", ",", 
       RowBox[{"-", "0.071336"}], ",", 
       RowBox[{"-", "0.001894"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.325", ",", "1.172895", ",", "0.370334", ",", 
       RowBox[{"-", "0.073532"}], ",", 
       RowBox[{"-", "0.001884"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.375", ",", "1.175167", ",", "0.385179", ",", 
       RowBox[{"-", "0.075503"}], ",", 
       RowBox[{"-", "0.001782"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.425", ",", "1.177695", ",", "0.398134", ",", 
       RowBox[{"-", "0.077251"}], ",", 
       RowBox[{"-", "0.001625"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.475", ",", "1.175885", ",", "0.404946", ",", 
       RowBox[{"-", "0.07858"}], ",", 
       RowBox[{"-", "0.001406"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.525", ",", "1.032337", ",", "0.270723", ",", 
       RowBox[{"-", "0.06991"}], ",", 
       RowBox[{"-", "0.000609"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.575", ",", "1.009485", ",", "0.25143", ",", 
       RowBox[{"-", "0.068874"}], ",", 
       RowBox[{"-", "0.00037"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.625", ",", "1.006064", ",", "0.250677", ",", 
       RowBox[{"-", "0.069106"}], ",", 
       RowBox[{"-", "0.000233"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.675", ",", "1.003957", ",", "0.250263", ",", 
       RowBox[{"-", "0.069281"}], ",", 
       RowBox[{"-", "0.000124"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.725", ",", "1.002709", ",", "0.25009", ",", 
       RowBox[{"-", "0.069398"}], ",", 
       RowBox[{"-", "0.000048"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.775", ",", "1.001948", ",", "0.250014", ",", 
       RowBox[{"-", "0.069462"}], ",", 
       RowBox[{"-", "1.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.825", ",", "1.001493", ",", "0.249989", ",", 
       RowBox[{"-", "0.06949"}], ",", "0.000023"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.875", ",", "1.001221", ",", "0.249979", ",", 
       RowBox[{"-", "0.069501"}], ",", "0.000027"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.925", ",", "1.001072", ",", "0.24998", ",", 
       RowBox[{"-", "0.069502"}], ",", "0.000019"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.975", ",", "1.001014", ",", "0.249995", ",", 
       RowBox[{"-", "0.069496"}], ",", "6.*^-6"}], "}"}]}], "}"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Friction\[Dagger]R0p1\[Dagger]\[Chi]INF\[Dagger]L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.975"}], ",", "1.000745", ",", "0.250081", ",", 
       RowBox[{"-", "0.014672"}], ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.925"}], ",", "1.000815", ",", "0.250238", ",", 
       RowBox[{"-", "0.014725"}], ",", "1.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.875"}], ",", "1.000989", ",", "0.250402", ",", 
       RowBox[{"-", "0.014823"}], ",", "1.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.825"}], ",", "1.001278", ",", "0.250594", ",", 
       RowBox[{"-", "0.014936"}], ",", "2.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.775"}], ",", "1.001757", ",", "0.25081", ",", 
       RowBox[{"-", "0.015051"}], ",", "3.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.725"}], ",", "1.002519", ",", "0.251077", ",", 
       RowBox[{"-", "0.015158"}], ",", "3.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.675"}], ",", "1.003745", ",", "0.251402", ",", 
       RowBox[{"-", "0.015248"}], ",", "4.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.625"}], ",", "1.005694", ",", "0.251792", ",", 
       RowBox[{"-", "0.015319"}], ",", "5.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.575"}], ",", "1.009131", ",", "0.251817", ",", 
       RowBox[{"-", "0.015369"}], ",", "6.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.525"}], ",", "1.012134", ",", "0.253823", ",", 
       RowBox[{"-", "0.015361"}], ",", "6.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.475"}], ",", "1.091582", ",", "0.182809", ",", 
       RowBox[{"-", "0.016435"}], ",", "0.000024"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.425"}], ",", "1.190141", ",", "0.09929", ",", 
       RowBox[{"-", "0.017888"}], ",", "0.000045"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.375"}], ",", "1.187681", ",", "0.112785", ",", 
       RowBox[{"-", "0.017579"}], ",", "0.00004"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.325"}], ",", "1.186094", ",", "0.127659", ",", 
       RowBox[{"-", "0.017074"}], ",", "0.000033"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.275"}], ",", "1.184429", ",", "0.144201", ",", 
       RowBox[{"-", "0.016405"}], ",", "0.000027"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.225"}], ",", "1.182938", ",", "0.162079", ",", 
       RowBox[{"-", "0.015649"}], ",", "0.000021"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.175"}], ",", "1.181889", ",", "0.180762", ",", 
       RowBox[{"-", "0.014879"}], ",", "0.000015"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.125"}], ",", "1.181099", ",", "0.200118", ",", 
       RowBox[{"-", "0.014217"}], ",", "1.*^-5"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.075"}], ",", "1.180533", ",", "0.219968", ",", 
       RowBox[{"-", "0.013668"}], ",", "5.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.025"}], ",", "1.180359", ",", "0.239909", ",", 
       RowBox[{"-", "0.013406"}], ",", "2.*^-6"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "1.180248", ",", "0.260121", ",", 
       RowBox[{"-", "0.013433"}], ",", 
       RowBox[{"-", "2.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.075", ",", "1.180622", ",", "0.280039", ",", 
       RowBox[{"-", "0.013681"}], ",", 
       RowBox[{"-", "5.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.125", ",", "1.181047", ",", "0.299928", ",", 
       RowBox[{"-", "0.014232"}], ",", 
       RowBox[{"-", "1.*^-5"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.175", ",", "1.181948", ",", "0.319219", ",", 
       RowBox[{"-", "0.014899"}], ",", 
       RowBox[{"-", "0.000015"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.225", ",", "1.182988", ",", "0.337995", ",", 
       RowBox[{"-", "0.015642"}], ",", 
       RowBox[{"-", "0.000022"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.275", ",", "1.18445", ",", "0.355748", ",", 
       RowBox[{"-", "0.016388"}], ",", 
       RowBox[{"-", "0.000027"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.325", ",", "1.186112", ",", "0.372485", ",", 
       RowBox[{"-", "0.017077"}], ",", 
       RowBox[{"-", "0.000033"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.375", ",", "1.187691", ",", "0.387202", ",", 
       RowBox[{"-", "0.017602"}], ",", 
       RowBox[{"-", "0.00004"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.425", ",", "1.190872", ",", "0.401345", ",", 
       RowBox[{"-", "0.017923"}], ",", 
       RowBox[{"-", "0.000046"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.475", ",", "1.090695", ",", "0.316334", ",", 
       RowBox[{"-", "0.016521"}], ",", 
       RowBox[{"-", "0.000024"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.525", ",", "1.013282", ",", "0.247404", ",", 
       RowBox[{"-", "0.015381"}], ",", 
       RowBox[{"-", "6.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.575", ",", "1.008978", ",", "0.248039", ",", 
       RowBox[{"-", "0.015371"}], ",", 
       RowBox[{"-", "5.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.625", ",", "1.005661", ",", "0.248202", ",", 
       RowBox[{"-", "0.015322"}], ",", 
       RowBox[{"-", "5.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.675", ",", "1.003726", ",", "0.248597", ",", 
       RowBox[{"-", "0.015249"}], ",", 
       RowBox[{"-", "4.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.725", ",", "1.002506", ",", "0.248909", ",", 
       RowBox[{"-", "0.015158"}], ",", 
       RowBox[{"-", "3.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.775", ",", "1.001749", ",", "0.249189", ",", 
       RowBox[{"-", "0.015051"}], ",", 
       RowBox[{"-", "3.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.825", ",", "1.001271", ",", "0.249402", ",", 
       RowBox[{"-", "0.01493"}], ",", 
       RowBox[{"-", "2.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.875", ",", "1.000982", ",", "0.249597", ",", 
       RowBox[{"-", "0.014816"}], ",", 
       RowBox[{"-", "1.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.925", ",", "1.000809", ",", "0.249765", ",", 
       RowBox[{"-", "0.014726"}], ",", 
       RowBox[{"-", "1.*^-6"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.975", ",", "1.000749", ",", "0.24992", ",", 
       RowBox[{"-", "0.014674"}], ",", "0"}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Friction\[Dagger]R0p1\[Dagger]\[Chi]0p1\[Dagger]L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.975"}], ",", "1.021344", ",", "0.17975", ",", 
       RowBox[{"-", "0.039999"}], ",", 
       RowBox[{"-", "0.006141"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.925"}], ",", "1.021193", ",", "0.180371", ",", 
       RowBox[{"-", "0.040507"}], ",", 
       RowBox[{"-", "0.006173"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.875"}], ",", "1.021207", ",", "0.181", ",", 
       RowBox[{"-", "0.04103"}], ",", 
       RowBox[{"-", "0.006213"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.825"}], ",", "1.02143", ",", "0.181658", ",", 
       RowBox[{"-", "0.041566"}], ",", 
       RowBox[{"-", "0.006267"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.775"}], ",", "1.021946", ",", "0.182358", ",", 
       RowBox[{"-", "0.04212"}], ",", 
       RowBox[{"-", "0.006341"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.725"}], ",", "1.022874", ",", "0.183122", ",", 
       RowBox[{"-", "0.042695"}], ",", 
       RowBox[{"-", "0.006438"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.675"}], ",", "1.024407", ",", "0.183951", ",", 
       RowBox[{"-", "0.043297"}], ",", 
       RowBox[{"-", "0.006562"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.625"}], ",", "1.026914", ",", "0.184731", ",", 
       RowBox[{"-", "0.043934"}], ",", 
       RowBox[{"-", "0.006714"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.575"}], ",", "1.030858", ",", "0.185293", ",", 
       RowBox[{"-", "0.044603"}], ",", 
       RowBox[{"-", "0.006885"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.525"}], ",", "1.035274", ",", "0.186667", ",", 
       RowBox[{"-", "0.045315"}], ",", 
       RowBox[{"-", "0.00709"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.475"}], ",", "1.099235", ",", "0.132495", ",", 
       RowBox[{"-", "0.047853"}], ",", 
       RowBox[{"-", "0.006944"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.425"}], ",", "1.141973", ",", "0.102675", ",", 
       RowBox[{"-", "0.048007"}], ",", 
       RowBox[{"-", "0.00573"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.375"}], ",", "1.149156", ",", "0.108299", ",", 
       RowBox[{"-", "0.046992"}], ",", 
       RowBox[{"-", "0.005142"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.325"}], ",", "1.154991", ",", "0.116501", ",", 
       RowBox[{"-", "0.046226"}], ",", 
       RowBox[{"-", "0.004986"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.275"}], ",", "1.159212", ",", "0.127332", ",", 
       RowBox[{"-", "0.045569"}], ",", 
       RowBox[{"-", "0.005093"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.225"}], ",", "1.162769", ",", "0.139724", ",", 
       RowBox[{"-", "0.044978"}], ",", 
       RowBox[{"-", "0.005377"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.175"}], ",", "1.165904", ",", "0.153215", ",", 
       RowBox[{"-", "0.044463"}], ",", 
       RowBox[{"-", "0.005749"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.125"}], ",", "1.168771", ",", "0.167477", ",", 
       RowBox[{"-", "0.043905"}], ",", 
       RowBox[{"-", "0.006162"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.075"}], ",", "1.171374", ",", "0.182228", ",", 
       RowBox[{"-", "0.043693"}], ",", 
       RowBox[{"-", "0.006553"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.025"}], ",", "1.173827", ",", "0.19725", ",", 
       RowBox[{"-", "0.043589"}], ",", 
       RowBox[{"-", "0.006965"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "1.176158", ",", "0.212366", ",", 
       RowBox[{"-", "0.043433"}], ",", 
       RowBox[{"-", "0.007378"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.075", ",", "1.178382", ",", "0.227316", ",", 
       RowBox[{"-", "0.043418"}], ",", 
       RowBox[{"-", "0.00774"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.125", ",", "1.180513", ",", "0.241909", ",", 
       RowBox[{"-", "0.043314"}], ",", 
       RowBox[{"-", "0.008066"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.175", ",", "1.182429", ",", "0.255951", ",", 
       RowBox[{"-", "0.043113"}], ",", 
       RowBox[{"-", "0.008308"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.225", ",", "1.184131", ",", "0.269053", ",", 
       RowBox[{"-", "0.0428"}], ",", 
       RowBox[{"-", "0.008409"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.275", ",", "1.18524", ",", "0.280771", ",", 
       RowBox[{"-", "0.042286"}], ",", 
       RowBox[{"-", "0.008288"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.325", ",", "1.185528", ",", "0.290894", ",", 
       RowBox[{"-", "0.041463"}], ",", 
       RowBox[{"-", "0.00782"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.375", ",", "1.169834", ",", "0.285362", ",", 
       RowBox[{"-", "0.039695"}], ",", 
       RowBox[{"-", "0.006644"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.425", ",", "1.046125", ",", "0.174398", ",", 
       RowBox[{"-", "0.035041"}], ",", 
       RowBox[{"-", "0.005085"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.475", ",", "1.037785", ",", "0.171442", ",", 
       RowBox[{"-", "0.035265"}], ",", 
       RowBox[{"-", "0.005194"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.525", ",", "1.033374", ",", "0.171666", ",", 
       RowBox[{"-", "0.035686"}], ",", 
       RowBox[{"-", "0.005334"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.575", ",", "1.03035", ",", "0.172457", ",", 
       RowBox[{"-", "0.03614"}], ",", 
       RowBox[{"-", "0.005472"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.625", ",", "1.02814", ",", "0.173417", ",", 
       RowBox[{"-", "0.036586"}], ",", 
       RowBox[{"-", "0.005599"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.675", ",", "1.026461", ",", "0.174394", ",", 
       RowBox[{"-", "0.037012"}], ",", 
       RowBox[{"-", "0.005713"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.725", ",", "1.02516", ",", "0.175327", ",", 
       RowBox[{"-", "0.037414"}], ",", 
       RowBox[{"-", "0.005815"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.775", ",", "1.024123", ",", "0.176198", ",", 
       RowBox[{"-", "0.037796"}], ",", 
       RowBox[{"-", "0.005904"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.825", ",", "1.023286", ",", "0.177006", ",", 
       RowBox[{"-", "0.038181"}], ",", 
       RowBox[{"-", "0.005978"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.875", ",", "1.022604", ",", "0.177756", ",", 
       RowBox[{"-", "0.038592"}], ",", 
       RowBox[{"-", "0.006036"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.925", ",", "1.022058", ",", "0.178454", ",", 
       RowBox[{"-", "0.039036"}], ",", 
       RowBox[{"-", "0.006078"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.975", ",", "1.021638", ",", "0.179115", ",", 
       RowBox[{"-", "0.039507"}], ",", 
       RowBox[{"-", "0.006111"}]}], "}"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"Friction\[Dagger]R0p01\[Dagger]\[Chi]0p01\[Dagger]L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.975"}], ",", "1.008663", ",", "0.238434", ",", 
       RowBox[{"-", "0.074928"}], ",", 
       RowBox[{"-", "0.003519"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.925"}], ",", "1.008514", ",", "0.23876", ",", 
       RowBox[{"-", "0.075113"}], ",", 
       RowBox[{"-", "0.003691"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.875"}], ",", "1.008489", ",", "0.239081", ",", 
       RowBox[{"-", "0.075293"}], ",", 
       RowBox[{"-", "0.003858"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.825"}], ",", "1.008617", ",", "0.239396", ",", 
       RowBox[{"-", "0.075469"}], ",", 
       RowBox[{"-", "0.004022"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.775"}], ",", "1.008945", ",", "0.239708", ",", 
       RowBox[{"-", "0.075657"}], ",", 
       RowBox[{"-", "0.004181"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.725"}], ",", "1.009568", ",", "0.240013", ",", 
       RowBox[{"-", "0.075864"}], ",", 
       RowBox[{"-", "0.004339"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.675"}], ",", "1.01065", ",", "0.240296", ",", 
       RowBox[{"-", "0.076083"}], ",", 
       RowBox[{"-", "0.004504"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.625"}], ",", "1.012466", ",", "0.240495", ",", 
       RowBox[{"-", "0.076322"}], ",", 
       RowBox[{"-", "0.00468"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.575"}], ",", "1.015869", ",", "0.240028", ",", 
       RowBox[{"-", "0.076612"}], ",", 
       RowBox[{"-", "0.004861"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.525"}], ",", "1.018219", ",", "0.241884", ",", 
       RowBox[{"-", "0.076784"}], ",", 
       RowBox[{"-", "0.005066"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.475"}], ",", "1.111198", ",", "0.155504", ",", 
       RowBox[{"-", "0.083152"}], ",", 
       RowBox[{"-", "0.00493"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.425"}], ",", "1.156513", ",", "0.121041", ",", 
       RowBox[{"-", "0.084426"}], ",", 
       RowBox[{"-", "0.003601"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.375"}], ",", "1.159454", ",", "0.129098", ",", 
       RowBox[{"-", "0.082836"}], ",", 
       RowBox[{"-", "0.003006"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.325"}], ",", "1.161791", ",", "0.139515", ",", 
       RowBox[{"-", "0.081246"}], ",", 
       RowBox[{"-", "0.002777"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.275"}], ",", "1.163443", ",", "0.152446", ",", 
       RowBox[{"-", "0.079551"}], ",", 
       RowBox[{"-", "0.002815"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.225"}], ",", "1.164868", ",", "0.166914", ",", 
       RowBox[{"-", "0.077815"}], ",", 
       RowBox[{"-", "0.003055"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.175"}], ",", "1.166285", ",", "0.182592", ",", 
       RowBox[{"-", "0.076124"}], ",", 
       RowBox[{"-", "0.003466"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.125"}], ",", "1.167677", ",", "0.199112", ",", 
       RowBox[{"-", "0.074604"}], ",", 
       RowBox[{"-", "0.00402"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.075"}], ",", "1.16889", ",", "0.216258", ",", 
       RowBox[{"-", "0.073748"}], ",", 
       RowBox[{"-", "0.004827"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "0.025"}], ",", "1.170132", ",", "0.233759", ",", 
       RowBox[{"-", "0.073165"}], ",", 
       RowBox[{"-", "0.005581"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.025", ",", "1.171328", ",", "0.251431", ",", 
       RowBox[{"-", "0.073109"}], ",", 
       RowBox[{"-", "0.006113"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.075", ",", "1.172444", ",", "0.269088", ",", 
       RowBox[{"-", "0.073656"}], ",", 
       RowBox[{"-", "0.006521"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.125", ",", "1.173646", ",", "0.286557", ",", 
       RowBox[{"-", "0.074496"}], ",", 
       RowBox[{"-", "0.006782"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.175", ",", "1.174901", ",", "0.303631", ",", 
       RowBox[{"-", "0.075703"}], ",", 
       RowBox[{"-", "0.006842"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.225", ",", "1.176262", ",", "0.320119", ",", 
       RowBox[{"-", "0.077151"}], ",", 
       RowBox[{"-", "0.006747"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.275", ",", "1.177769", ",", "0.335753", ",", 
       RowBox[{"-", "0.078657"}], ",", 
       RowBox[{"-", "0.00653"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.325", ",", "1.179426", ",", "0.350262", ",", 
       RowBox[{"-", "0.080126"}], ",", 
       RowBox[{"-", "0.006189"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.375", ",", "1.180922", ",", "0.3632", ",", 
       RowBox[{"-", "0.081407"}], ",", 
       RowBox[{"-", "0.005714"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.425", ",", "1.182527", ",", "0.374563", ",", 
       RowBox[{"-", "0.082366"}], ",", 
       RowBox[{"-", "0.005067"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.475", ",", "1.15641", ",", "0.358357", ",", 
       RowBox[{"-", "0.081143"}], ",", 
       RowBox[{"-", "0.003833"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.525", ",", "1.026419", ",", "0.236996", ",", 
       RowBox[{"-", "0.072351"}], ",", 
       RowBox[{"-", "0.002459"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.575", ",", "1.020598", ",", "0.235552", ",", 
       RowBox[{"-", "0.072583"}], ",", 
       RowBox[{"-", "0.002395"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.625", ",", "1.016762", ",", "0.235282", ",", 
       RowBox[{"-", "0.072904"}], ",", 
       RowBox[{"-", "0.00238"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.675", ",", "1.01434", ",", "0.235602", ",", 
       RowBox[{"-", "0.07321"}], ",", 
       RowBox[{"-", "0.002422"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.725", ",", "1.01265", ",", "0.236031", ",", 
       RowBox[{"-", "0.073493"}], ",", 
       RowBox[{"-", "0.002514"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.775", ",", "1.01143", ",", "0.236485", ",", 
       RowBox[{"-", "0.073772"}], ",", 
       RowBox[{"-", "0.002646"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.825", ",", "1.010518", ",", "0.236927", ",", 
       RowBox[{"-", "0.07404"}], ",", 
       RowBox[{"-", "0.002806"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.875", ",", "1.009828", ",", "0.237346", ",", 
       RowBox[{"-", "0.074291"}], ",", 
       RowBox[{"-", "0.002983"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.925", ",", "1.009307", ",", "0.237735", ",", 
       RowBox[{"-", "0.074524"}], ",", 
       RowBox[{"-", "0.003164"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0.975", ",", "1.008924", ",", "0.238096", ",", 
       RowBox[{"-", "0.074736"}], ",", 
       RowBox[{"-", "0.003342"}]}], "}"}]}], "}"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellLabel->
  "In[100]:=",ExpressionUUID->"ad7edc7f-fd8b-4ee6-8649-f75432eed46d"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Simulations  ",
 Cell[BoxData[
  ButtonBox["\<\"Run\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]],
  CellChangeTimes->{
   3.7129257812931337`*^9, {3.712925826250455*^9, 3.712925834425797*^9}, 
    3.712926104839491*^9, {3.712926176560173*^9, 3.712926201286714*^9}},
  ExpressionUUID->"ad67652f-b36e-46bb-b1e5-972183662a66"]
}], "Section",ExpressionUUID->"00e923e2-f530-41e5-9549-1ec97ce763e2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"-", "1.0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x2", "=", "1.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xOffset", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h0", "[", "x_", "]"}], "=", 
   RowBox[{"1", "+", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"3", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "xOffset"}], ")"}]}], "]"}]}], "-", "4"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u0", "[", "x_", "]"}], "=", "0.25"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s0", "[", "x_", "]"}], "=", 
   RowBox[{"-", "0.25"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]0", "[", "x_", "]"}], "=", "0.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]0", "[", "x_", "]"}], "=", "0.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nx", "=", "3000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tEnd", "=", "2.0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.7880983256086407`*^9, 3.78809832656273*^9}, {
   3.788099169963171*^9, 3.78809917089473*^9}, {3.7880998164008636`*^9, 
   3.78809981957752*^9}, {3.789151316957546*^9, 3.78915134013054*^9}, {
   3.7921551294255857`*^9, 3.7921551550954247`*^9}, 3.7921577032523193`*^9, {
   3.792163449728745*^9, 3.792163450063401*^9}},
 CellLabel->
  "In[583]:=",ExpressionUUID->"591d189b-daed-420e-93fe-51b59c626878"],

Cell[CellGroupData[{

Cell["Time Evolution Output", "Subsection",ExpressionUUID->"1f6a37de-e6c9-4ea6-88f9-dba954f886b1"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"show", "=", "True"}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{"Button", "[", 
  RowBox[{"\"\< Show/Hide \>\"", ",", 
   RowBox[{"show", "=", 
    RowBox[{"!", "show"}]}], ",", 
   RowBox[{"BaseStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<GenericButton\>\"", ",", "12"}], "}"}]}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{"show", ",", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "Uraw", "]"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Visual", "[", 
        RowBox[{"Uraw", ",", "400"}], "]"}], ",", "\[IndentingNewLine]", 
       "\"\<no data\>\""}], "\[IndentingNewLine]", "]"}], ",", "\"\<\>\""}], 
    "]"}], ",", 
   RowBox[{"SynchronousUpdating", "\[Rule]", "True"}]}], "]"}]}], "Input",
 CellLabel->
  "In[595]:=",ExpressionUUID->"c9302dde-8bc8-47e0-adfa-795b4b26706f"],

Cell[BoxData[
 ButtonBox["\<\" Show/Hide \"\>",
  Appearance->Automatic,
  BaseStyle->{"GenericButton", 12},
  ButtonFunction:>($CellContext`show = Not[$CellContext`show]),
  Evaluator->Automatic,
  Method->"Preemptive"]], "Output",
 CellChangeTimes->{
  3.7880983360009212`*^9, 3.788099172563957*^9, 3.788099827113028*^9, {
   3.792155564951269*^9, 3.7921556083977823`*^9}, {3.792155639162531*^9, 
   3.792155657351413*^9}, {3.792155702689568*^9, 3.7921557320395193`*^9}, 
   3.792157718238776*^9, 3.792157956389475*^9, 3.792163455020862*^9},
 CellLabel->
  "Out[596]=",ExpressionUUID->"04273240-f86e-4fde-ab92-28f5903def57"],

Cell[BoxData[
 DynamicBox[ToBoxes[
   If[$CellContext`show, 
    If[Length[$CellContext`Uraw] > 0, 
     $CellContext`Visual[$CellContext`Uraw, 400], "no data"], ""], 
   StandardForm],
  ImageSizeCache->{2436., {261.26806640625, 272.73193359375}},
  SynchronousUpdating->True]], "Output",
 CellChangeTimes->{
  3.7880983360009212`*^9, 3.788099172563957*^9, 3.788099827113028*^9, {
   3.792155564951269*^9, 3.7921556083977823`*^9}, {3.792155639162531*^9, 
   3.792155657351413*^9}, {3.792155702689568*^9, 3.7921557320395193`*^9}, 
   3.792157718238776*^9, 3.792157956389475*^9, 3.792163455023346*^9},
 CellLabel->
  "Out[597]=",ExpressionUUID->"e113b62c-b5e8-49f8-97e5-67ca5821d38f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Level 1", "Subsection",ExpressionUUID->"0accf16b-6e58-41bc-9f66-dcf526bdd084"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"modeltag", "=", "\"\<N = 1\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxSpeed", "[", 
    RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", 
        RowBox[{
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hu"}]}], ",", 
       RowBox[{"s", "=", 
        RowBox[{"3", 
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Abs", "[", "u", "]"}], "+", 
      SqrtBox[
       RowBox[{"h", "+", 
        SuperscriptBox["s", "2"]}]]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flux", "[", 
    RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", 
        RowBox[{
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hu"}]}], ",", 
       RowBox[{"s", "=", 
        RowBox[{"3", 
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"h", " ", "u"}], ",", 
       RowBox[{
        RowBox[{"h", " ", 
         SuperscriptBox["u", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "3"], "h", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], 
         SuperscriptBox["h", "2"]}]}], ",", 
       RowBox[{
        FractionBox["2", "3"], "h", " ", "s", " ", "u"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", 
        RowBox[{
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hu"}]}], ",", 
       RowBox[{"s", "=", 
        RowBox[{"3", 
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
     RowBox[{
      FractionBox["R", "\[Chi]"], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"u", "+", "s"}], ",", 
        RowBox[{"u", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"4", 
             FractionBox["\[Chi]", "h"]}]}], ")"}], "s"}]}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"A0", "[", 
    RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", 
        RowBox[{
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hu"}]}], ",", 
       RowBox[{"s", "=", 
        RowBox[{"3", 
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", 
          RowBox[{
           FractionBox["1", "3"], "u"}]}], "}"}]}], "}"}], ".", 
      RowBox[{"Diag", "[", 
       RowBox[{"{", 
        RowBox[{"1", ",", "1", ",", "3"}], "}"}], "]"}]}]}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[598]:=",ExpressionUUID->"9d4b3477-654b-4261-b3e7-3efbc206ffb4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"init", "[", "x_", "]"}], "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"h0", "[", "x", "]"}], ",", 
     RowBox[{
      RowBox[{"h0", "[", "x", "]"}], 
      RowBox[{"u0", "[", "x", "]"}]}], ",", 
     RowBox[{
      FractionBox["1", "3"], 
      RowBox[{"h0", "[", "x", "]"}], 
      RowBox[{"s0", "[", "x", "]"}]}]}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FiniteVolumeRun", "[", 
    RowBox[{"nx", ",", "tEnd"}], "]"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hN1", "=", 
   RowBox[{"interpolate", "[", 
    RowBox[{
     RowBox[{"ArrayPad", "[", 
      RowBox[{"pts", ",", "1", ",", "\"\<Extrapolated\>\""}], "]"}], ",", 
     RowBox[{"ArrayPad", "[", 
      RowBox[{
       RowBox[{"Uraw", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
        ",", "1", ",", "\"\<Periodic\>\""}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"umN1", "=", 
   RowBox[{"interpolate", "[", 
    RowBox[{
     RowBox[{"ArrayPad", "[", 
      RowBox[{"pts", ",", "1", ",", "\"\<Extrapolated\>\""}], "]"}], ",", 
     RowBox[{"ArrayPad", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "Uraw", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], "/", 
        RowBox[{
        "Uraw", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ",",
        "1", ",", "\"\<Periodic\>\""}], "]"}], ",", "1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sN1", "=", 
   RowBox[{"interpolate", "[", 
    RowBox[{
     RowBox[{"ArrayPad", "[", 
      RowBox[{"pts", ",", "1", ",", "\"\<Extrapolated\>\""}], "]"}], ",", 
     RowBox[{"ArrayPad", "[", 
      RowBox[{
       RowBox[{"3", 
        RowBox[{
         RowBox[{
         "Uraw", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], "/", 
         
         RowBox[{
         "Uraw", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}]}], 
       ",", "1", ",", "\"\<Periodic\>\""}], "]"}], ",", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellLabel->
  "In[603]:=",ExpressionUUID->"5fbbf178-6658-4c4b-87a4-35d260eac0b3"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.792155248095141*^9},
 CellLabel->
  "In[608]:=",ExpressionUUID->"d2f45f60-b4e5-435e-9307-05f8073e84a2"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Comparison   ",
 Cell[BoxData[
  ButtonBox["\<\"Run\"\>",
   Appearance->Automatic,
   ButtonFunction:>(SelectionMove[
      EvaluationCell[], All, CellGroup]; FrontEndExecute[
      FrontEndToken["SelectionOpenAllGroups"]]; FrontEndExecute[
      FrontEndToken["EvaluateCells"]]),
   Evaluator->Automatic,
   Method->"Preemptive"]],
  CellChangeTimes->{3.712926570626602*^9},ExpressionUUID->
  "141e843d-9520-4692-84cf-3b87558d5367"]
}], "Section",ExpressionUUID->"63f1dedc-7399-4e70-9550-40188429900c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
   "DataSet", "=", "Friction\[Dagger]R0p1\[Dagger]\[Chi]0p1\[Dagger]L"}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"DataSet", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], 
           "}"}], ",", 
          RowBox[{"Joined", "\[Rule]", "False"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "iSize"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Red", ",", "Black"}], "}"}]}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], ",", "Small"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], ",", "Medium"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], ",", "Medium"}], "}"}]}], "}"}]}], 
          ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0.95", ",", "1.25"}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"hN0", "[", "x", "]"}], ",", 
            RowBox[{"hN1", "[", "x", "]"}], ",", 
            RowBox[{"hN2", "[", "x", "]"}], ",", 
            RowBox[{"hN3", "[", "x", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "]"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<h(x,t)   [SW - red, N1 - green, N2 - blue, N3 - \
purple]\>\""}]}], "]"}], ",", "\n", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"DataSet", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}], 
           "}"}], ",", 
          RowBox[{"Joined", "\[Rule]", "False"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "iSize"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Red", ",", "Black"}], "}"}]}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], ",", "Small"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], ",", "Medium"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], ",", "Medium"}], "}"}]}], "}"}]}], 
          ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.05"}], ",", "0.35"}], "}"}]}], "}"}]}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"umN0", "[", "x", "]"}], ",", 
            RowBox[{"umN1", "[", "x", "]"}], ",", 
            RowBox[{"umN2", "[", "x", "]"}], ",", 
            RowBox[{"umN3", "[", "x", "]"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "]"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<\!\(\*SubscriptBox[\(u\), \(m\)]\)(x,t)   [SW - red, N1 - \
green, N2 - blue, N3 - purple]\>\""}]}], "]"}]}], "}"}], ",", 
    RowBox[{"{", "\n", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"DataSet", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}]}], "\[RightDoubleBracket]"}], 
           "}"}], ",", 
          RowBox[{"Joined", "\[Rule]", "False"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "iSize"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Red", ",", "Black"}], "}"}]}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], ",", "Small"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], ",", "Medium"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], ",", "Medium"}], "}"}]}], "}"}]}], 
          ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.06"}], ",", 
               RowBox[{"-", "0.03"}]}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{
             RowBox[{"sN1", "[", "x", "]"}], "/", "3"}], ",", 
            RowBox[{
             RowBox[{"sN2", "[", "x", "]"}], "/", "3"}], ",", 
            RowBox[{
             RowBox[{"sN3", "[", "x", "]"}], "/", "3"}]}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "]"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<s(x,t)   [SW - red, N1 - green, N2 - blue, N3 - \
purple]\>\""}]}], "]"}], ",", "\n", "\[IndentingNewLine]", 
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"DataSet", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "5"}], "}"}]}], "\[RightDoubleBracket]"}], 
           "}"}], ",", 
          RowBox[{"Joined", "\[Rule]", "False"}], ",", 
          RowBox[{"Frame", "\[Rule]", "True"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "iSize"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"Black", ",", "Red", ",", "Black"}], "}"}]}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], ",", "Medium"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], ",", "Medium"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{
               "markers", "\[LeftDoubleBracket]", "3", 
                "\[RightDoubleBracket]"}], ",", "Medium"}], "}"}]}], "}"}]}], 
          ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "0.0"}], ",", 
               RowBox[{"-", "0.015"}]}], "}"}]}], "}"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Plot", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{
             RowBox[{"\[Kappa]N2", "[", "x", "]"}], "/", "5"}], ",", 
            RowBox[{
             RowBox[{"\[Kappa]N3", "[", "x", "]"}], "/", "5"}]}], "}"}], ",", 
          
          RowBox[{"{", 
           RowBox[{"x", ",", 
            RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", "All"}], "}"}]}]}],
          "]"}], ",", 
        RowBox[{
        "PlotLabel", "\[Rule]", 
         "\"\<\[Kappa](x,t)   [SW - red, N1 - green, N2 - blue, N3 - \
purple]\>\""}]}], "]"}]}], "}"}]}], "}"}], "]"}]}], "Input",
 CellLabel->
  "In[101]:=",ExpressionUUID->"6c5dce44-066c-4b82-bd55-a969f1c6c59e"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{{}, {
         {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
          1.6], GeometricTransformationBox[InsetBox[
            StyleBox["\[FilledDiamond]",
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[1.6], 
               GrayLevel[0]]}], {0., 0.}, Automatic, Offset[
            7]], CompressedData["
1:eJxTTMoPSmVmYGDQAGJGIGYCYmMweL+fpST+XE74B/tZM0Hg7X7/8nkV58I+
2DOAwZv975S3q90F8tPA4NX+a8WXfh8Dqj97BgRe7D9Y1MLzJPKDPcS85/t/
3p6nsDEWZt7T/QKbdGb8SIaZ92R/1v078bZ5MPMe7Z8u5/s1pQ5m3oP9u5Pc
KqonwOTv7Z//tLKgfNpHqPm3999f/K+q1fUT1Lwb+19xPEj7mPQJqv/KftFT
h65fr/oEtf/i/n7xSw8Ve2DyZ/b3XN+zavOsT1Dzj+0/nfHkc9dymHkH9iuZ
RVh4bv4EtW/z/v3q11Z+2gszb+b+zdOYLv07Dufb29zh4+2+CFdvzyLfLLr8
Ftw8+1XcFTMTH8Ptsz9ScXa11Wu4e+xjH3yKMP4Ed6/9/Mn3zPd9g/vHPvOB
u+mb73D/2kf+tr69eDvMvtv2G4oyJr7dAw8ve6eKLYVHZsHD0z582gudzR3w
8LZn/yDmEVADjw/7e5G73zoVw+PL3vvlzLikHHh82jetFdLhS4fHt32Rb+OZ
c0nw9GDv6saukhgPTy/2v5V5mKfFwNOT/a7rnrWRUTDz3tsLz00VWxjxwR4A
lwJFJQ==
           "]]}, {
          {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
           1.6]}, {}}, {
          {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
           1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
+8UKh46oD5B8K1l7di5cHx85TvxSGSBaCroSfOjUnIDVHVsHiH7hq3tSaBva
p5D5Ndh+v5TUMXS3csOXXQP95PSMl3Y4+leNfG2Cfz95tUI14Qw3rg8T2507
X/STppW2Gy+iE3oyX+d49hNR3v/eWKOfzR40+enYT2L4N3m4ow9Jnuvus+on
KUJ857+is257Tm/c00+W997QWM+D+Zu3U+QttY/cnnQPZKADTYFzT3sfKXma
3ryEdouLnGpp7CNiYv3iq1ZgPB28VC1a2UfKtXQSZNBS9wc8IjL6SIuVxofz
aIGiY7aaX/uIqs/utFvo5fwJF6gJfSQ4VbHIGU2Lv6W+KaqPnF4uRQ1DR3cw
xj++6CNVERwbOtGBcoYd2l59ZFvp0rYxtNuD9PIBlz7iPTarvsh8/mqHD3L3
+4i2xrCx+Eo6bDy8YJJo0UcKW6uDzNGRXzhL0nf1kXShdyu70P5z11KNlPrI
Go1A0XG0y5HyyBm5PmJr9UJuCW1B8Xm0R7KPKKY6H5VYRQcJQQHlPJ4+Qmf7
d+kqmveinbg5ex85uPpq+SP04n8NK5aWeknQhjolf3Sn9ps+zeleorY7biEL
Hf5ILPRHVy9xuWr4hocX98sy5+eXW3tJnR1ZEEc/Fuq6z/G7l2x2kbPaiTZP
itI/Wt5Lyt6yKJuhN3RLc1am9RL+8i/l/6FDdZRt65/3kkh59kU9PtwfV+iU
13j0kpIjtuxW6IQKS6lfT3rJiEXXygfoHT6PHCsce4nAI11Bb3SOblBd2b1e
ovo6WzQMfXDVf3Ild3rJ+STpTcno8qpit6KbvaQ+4F9LGbrl5MyO/Iu9xE0k
9c08eu3pvMm4Pb0E1F76FvLj+61pPP5RpZcIO1271Yre0jAWE6PYS8bIId1J
tMoZScPwLb0kTHuee8tqXC9n3dNere4l/4yuej5D+5keu/d4sIdk3TvgdEoA
2xezrHrU00P8s8VMr6HD2x23POzqIVcXZva4ohPPf/lt97uHrPVMnElBV17g
2329EO8/e+Lw5jV04LL6/ef0ux6yZVMkRVQQ48X6osPWYz1kKfuw8Iq1OD++
5qE5h3pIk5nIJ3m0+lfTguP7e0jS0sjuk2jG9Bkum509xOJwkFEA+uITnbcp
G3qIos4nVTFhPM8G7szay+gmh1psg9XX4XykKbVXjnSTLcd1Lc3Rs43bWcz7
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
RnjzNTfIbAO+H894rtHGRqgXPvbMDZ0VkbJOXL4ReB//fhSHNtl13753dyMc
67l4+xf6X/memi8HGsFTZ8xyCh1usbDNXrcRCpIdjdaLTwL8KXi692wj/F3L
qaOJprzw6F5u2Qiqzq80rqDdNh6FcutGCHrsUXcbvTlzxfuAB40QvNVu+DK6
WLf6j7FbI7xtuMhmhuZyMErsf9MI7+Vg91G07y+rDexFjRDdOPdOEq1kJfuw
sqoRYl0HUtaia+eGG141N8JH+aaKlWjBLXY+UmON8NktbWEW+xvyyPUviDTB
V4XbF2vR+1YfPsu5uQlSWs47lqI7PnKl/lJogjQP3Vd5aMk6vxvntZogq3Vr
cTz6o2x4i+PtJiBePbLM8Tqaf3HXQccmKFSuP+CAHjy9JYDbswm+txea2KC9
BwdGavya4MfTZDsrtPyTL0ffhjRByY4IHxP0L8E7sRc+NEFZx8sPeujbn3ey
yCQ3AWM0l1cBza85YzqW0wRJsnsLY3D+Un7nZKYXN4H1pWw7EbThzcdrnGua
QC5cVdoP53ua5eBtrbYm6G9Ob2ZDq8n/lK6nN8HFkykadIyvfLem13TRZjiz
J4GzVBjzy7r3E5nSzSBgvzVnH3pZovmJJ8rNUJP4yZoZz1otvWy82s2gszm2
NgzjvVxxym6bbTPs5wt7b79mEqyLM6sZTs3w95joySFcX6tMH23LedoMWR7v
WCzQel7Lu4+GNcPO+deXj+N6bGrnN7hS1gwyvb6KUphfdF5cbravawZN+c9b
ojD/5O7JMXdvbwYTu2JRSbTCAG9vQF8z2OVQVkdgfosMvnQzkt4MPsv+cYqj
BQ5nTSTON8PD7CoLw5WT4DG50iGPrQUsFJ1ZAfPrNb0Mj9Z1LaAo2n5UEPN/
6yLPikGpFlgb8GJ4Efc/3f8uBMzIt8ACx17fQdxflXm4wwUPtEAF4119Pu7v
80WmmSevt8C18rPm1/H8Y22brHHergVOaXIuM8TzYack+4+bzi2gmpERs3+R
Ad+dE2ueBbQAe7TQ4Jp/DHihumzoe3YLRD+st8ufYcBi75k7tUUt8HzcbW38
HzzvBn3+01XVAncu78h+NY314sRp1gVqC4B+wOK1SQaIJXwUU+VphTbZU8/X
jDPA99zf6MOCrVAUvrhtcZQBLFx6Ww3FW+GzYOKvgRGslzJikyxlWyHA+/zd
+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
G/2x/wDuC5Ex
            "]]},
          Annotation[#, "Charting`Private`Tag$22916#1"]& ], 
         TagBox[
          {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwc2nc8l98XAPAGKZWkQpGMEqKsSKXbUDRIdmRkRFkRWlaStOSrkqQokr33
Ovbee+9NxofKSP3O8/ur1/vVx/3c5z7nnnPu83x4DK1VTNasWrUql37VKurf
g4R1/N+/aUjy7d/FtXaGWC/yeS4uTQMZkFSiHJcoxj/3cxrKDz19RFlcQNFw
eGIaekoPjFKW3ureXtkyDRuW7ZL3oO9V/HevuH4a3siXjFLOeBLImls1DVxv
d3Jyo48vZagkFkyDhEiOG2WnpNKZqJxpyLnPnEI5x6rZKzR9GhSKDcco/xMY
FA5KmoYGlmROHvTJgdnyD7HToKvPoEz50ad/Zm8ipmFJlaWMcr7mZoZX36bB
4YK+AS9arlLgjOvHabCUXvTiQ59P1s+88RT/fqvI5D60ytOqSAn9aZAtehsq
hH5zquO8iPY0pGX2yR5ANy6PjvCrT4NkwsEmyhq36fbuujgNwoGla0XQOleP
BaySngbO+38MDqEDtp0/uiQ2DX7W5xcod1dptM4JT8P2G76vRdEGp223j/BO
wyZV0Rwx9Jc/Lgm9u6fh6XkndXF0f8or5Xb2aVh7snySMp/Nx6mGbdPgIsXm
LoE2PhD+soppGpaFjTkk0d+GUoRKNuD6FXdlUh4OLCzNpZsGVpO5lMNoAe36
Gxn/psBq7YYEKfTN7b10SUtTUPSFK1oabbXC6uQ/PAV7Oew/HEPfrXG3NM2Z
gv7NvLZn0C8nHFrm06YgW0fDTQ79leHmKbfEKXgf/tznLLqSKO74FDYFl87O
JcijeeN2ZNf7TEGKY+HcRfSRSob9Bq+mwLt8Ya0iWnF00fvH0ym4xS6yXYmK
F+5u4/VOU7An6Z2kMtrreG31u7tTsLS6XO4KOlgr/wif7RQ0Xv6rpoJOs0v6
GmcxBTGfxE1U0dXeoZtOmE7Bs4kb9mrowSg/h4rrUyC30Fikjl4sfd6rdW0K
eJ+s4dVE711tnXTnyhT0fNZtv4p+YCN9LfzYFGjWb7uoj+ZXKY3czjwFCjKu
wreoeLXK2PGVcQr4i6M9zdFXnke5HKKfAjrVjkELtGO+t+qFpR+QZyH1yRpd
L3512WXwB8gETW62p+J72/iFibQfoPr+lJIrFU+NG8fzrv8AOdf95h+o+DVO
zom89gNWtNX7/dEH5/XevNP8AamHH18NQHtuSzh+U/EHHJjolg9Ey6povWaW
+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
XcT+eg1ncdPPXmD5ZB5r/XeGFOhM9nTO9ELxy21W7PSzJC0pa3Fgohfqzvn8
KN04S77e0BWh9fXCSMbrScGds0ThYO+yUEYvnH7xZDRaaZbIPo3bIZ7cC4pn
6cz01GeJeK/rIZm4XtD65zbCdG2WcPjwGMmH9sLtO67D1jdnydRPw3Ijn174
pPNwUMx9lrzLHvILuNULvw/Y9CanzxK9e/7O0ia9cM5Wi/Y7d5YISFw2rtfv
hXdphO5o6SyZ/bH2gqV2Lwz95Wd1rJklGWFph9ar94LkWSaBnOZZ8tjIckfw
5V6Q6nO4ydk1Sy5x8S7LXuiFtN/bueX6Z0n3mxfFd0gvZO298urN5Cz5rnQy
iuloL5w4Nn0mc3aW3N7w879wyV6AK6+W+n/NkjUuero9gr1Q4FxmKr6aRvbf
Epu/sL0XylpPna7bQSMze4fbhph64eJ0z8LCLhpJ7/EH1w29UEXvHMvNTSPv
I9azWq70QK14BudtIRrpdY05I1ffA80vxX8zERqx/cW25UFJD2gF10ZLydEI
ncWj9tisHmhPtzLWO08jgppqNhzfe6BrOKIuWpVGsiqzj18J6AG9FQXPJi0a
UTq9f/3T/3qgd9vIiRVdHE9k6TPtYQ8MnuSLumSG4wUb3RKw6QETzTxDO0sa
8WWvOqx3owdGLPV3BtjSiICX1Oq3Oj0wqspe8/4ujWSuDaosU+4BqV3bn76+
j+Pf3+D372wPuPduIU8f4vynbI0OH+uB+tCNv52dcPz2s0tB+3rAWmKtqdUj
HP9ybFHzrh7IXvzLdeMxjl/E/t8m5h7YmLvUrPuERhTjJvbfW+qG75do5xSf
4ec9/lO/XNMNPSZ9/ML/4ef/LHE/KewGEeGubr43NJJhYzyZkd4ND2mtvhzv
aKTnmvRj/pBuYHOpXbfxA35eoitu5V43XPaD4bEg/HzYOUcJq274pJf5ue8r
De9/nPxNo26Y2Juq0RZCIzYbHnc3KnbD0/iY4tIwnL/LZDjjmW5ouhvhnBuB
85lXtz95pBv4ToRKpUXh+LfgpININ9jQfZ2KjcHxewQ2RfF2A5R/Cv0eRyOO
x1dH+7N3g6dkTrhTAo3IfmhTfMbUDbXDLHpfEmnk78/4qbt03bCg2qV1PolG
clWev76x1AXced9VZ9FusYai6jNdIH/QVulDMo3IbTpWd2a4C6w/Hj9/KoVG
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
3RfurWZdQJIHvrk4o++tdxascMf/Z9rxgeqvS6v266TFFhApo7kKe/TtuD9z
B4sKSMorwyGqv2Z/U/fyW3sBkU6r+2sdTe3fhzk+9IVEenOc2C30+oFqHkud
QiKTavGe6q/lF+xHeRiKyLGNw4ZUfp9qv/DIj7OIZB5Wd6Tyv2/2nl1bxIvI
cYPCd6eo/O5WdvHPNXTy19JjaC+Tz4O2tkUku2dr/xG0lMIdp7GnRUSW8dHy
YXS3kAKrwSf8f8mZ7VQ98ti8O7Y5oYic0Nc/KErdv5lZecXSIhJOjoyJUPmz
vri3oKuI/NdDp0fZOfnj/aNzReSeS129MFUP/G6zxK8vJvp7PstTrn5wNnI/
VzE5B7eyDlDnE91dcp8liomIvrQY5WLeQvsXesVk+XPtLiG0Ff0HpjV2xaT/
xKfXgmjWUcvv954Vk7Lum3SUb0SztZkkFZP3XGun9qPXHTE/fpKxhEh8PpxH
1deziixrfyaXEPNP/qY81PVf3zC7WFZCPmcUDnFT99t+Vc/frhJS2zJlRJnn
+e/KtbQSsvYne/8e9K3PUxnr15WSwyxnDCgnJgyFbd5VSswOWXZT9fxPcacv
y8FS4n/p/TXKZzsa3NlOl5Kqm3ntu6nvmy635dQoJVJd/tmUW9bmG/DcKiVD
vxI4qfG42dOV+J1LyRvmiofU9yee/C4kGlpKZs4sy/BR8/vvcf+ZX6UkMkIn
RYCaX+iDWgXGMqJdeGcHtT63MmxyFLnKyPruF3bU+v3p1/fXPFdGbmzNEj9I
fV7yuIq5bxnhvscZS93PW83zeT5S5eTd2a7vJ6jvG5+IfX+hnMjp/1xH9RN/
/vZ/CtArJ7R7m29Q8eO1v+5+qEc5UY6S3UvFV8uxUtNI/3Lyt0j98Vlq/sqg
HhdTTqJ7LPup89ot45Qzyfnl5Nrik1MK1Pj3osUymssJ47bPQeep8V+G7IHx
crLMc+X5Reo8+uXj5sK/5USTy4OJOv+1lj0bq+KvIMxsM6yq1Od33fjS51BB
3NYX7tel1veQ7uvh5xWkh24xUp+a3xk1p4nPFeTY6oOiVL/CY3H66s/iCvJz
8f0RU2r8bK6tG9gqiemE+Xkb9Gv9FlfR1EpysXqb+RMqviePk+HKSqL5IG6f
JxW/97+ufOyvJIb8ir3Pqfh7Y/mAgamK3Hf2UPdGK5Wstes2riKhBxfJRzTT
IVHTlyzVxDbe4HsSNZ+/noqjljXkQ5HA8gg1/oupjZ8f15COcyaiVP5zZlcr
V/1QQ3aXfjGZosYX3yMPhTXka/muWip/7k/U5q7YXEt+OB8top43MIzM7Pxq
XEvWRSXJUP3D42i+RUfrWhI+e8aTen75745Gq+aDWnJJuqGZqie/V2X5bvau
JT75s3eo540ju55uu59ZS7jaDsZQ9ceoL52mWlxL8rly/shQzzu+T9YdrKsl
JsaKF6nnLy2SKt6Dw7Ukctp8lHq+X6K0e7MySx2RXhfOSz2f236wj9WWs47c
thk7Qj1PMtj8jfstfx0J7xS8TD3vip40E0oRrSP98rdMtNFLFcKSrUfrCEdi
xENd9LnIGdkluTqixjXxnwH6zfMkec7LdWQr19MnJujem/eunLhaRyyZ8/ip
9yXC54/rGBjVkbI1yyXU+5V7AqtM3CzryL6fkjep9zNFDIVWIXfryKMRK0ZH
qp8pvug2+qKOyFT2X3pK9V9ndMJvJ9WRsHfldZ/Qnbx7En1y6gidJ92dYLTg
moGspNI6YvDgxHbqfVR+7q3ahc46wq6foJGE/in74LcrfT3xFPDvKKf6n90n
VgdvqSeDuxoda6nneX9WbyzaWU9ObmbiaqaeZ2Y+49pwsJ4szD4y6KPq/ZEP
Z//TqCdmmTeHfqND2XQvJxrUk8LoYI8V9Nwv7qtNt+rJnqCu/WtjaeRk86Dh
b7t68tCHrWw9+mVymMVOl3rS4n7lFhP1/vSthcOxZ/VE4u6LjdvR/Hairrpv
6knNAt8sB9pWdf6Zy6d6EtwSprQfDeJpb758ryd3U0SixNGbWBw/FcTXk4vv
EjacQGvNku9Dmfj9dtKm59G02JIMwdp6UiJ2itcAvVekpS9+oZ6wRav5vULf
3vRxomFNA5l40fbTD509offz56YGArf0VEPQGhHD64/yNBBTATMm6n2v5/5f
h/LPN5DU4Ifuo+gfPDuc6/0biKb/19tn4rA+P/xikxfSQOpT2t8qod0aRUzi
YhrIpQaW9KvU+3WRDK3AtAZSMn2hyxjN+vTcJa/8BnJq0+PVt9EGvfXEqbKB
ZAlk7nuIjpDRl7BobiBSZ+fOe6DnfSb4dXobSOD6Z6bU+/kTk3d3XRhvICv9
xpuiqff5Z+mYZOYbiE72yfhcdP1n79UCfxtI+ntOjUb0jSvho/QsjcT+UmPg
Mvp1SntKnkwjmUo+I3EhHs8TW0wj4s40kkvee1p10Xtvzn0KVGwkEbeWHW3Q
aRybnjhdbyQ39iQWU79X6HWVVZV51ki6PXm1R9BiF4Om41obSY3O6kfuCdg/
hwgPBPY3EhGprn1+6OKVtGavyUbygjm9PBKtHVeXbbGqiSgU3d7egA7ZoBev
w9hEQgMvpQ+jpwzHQy5sbyJ0DwT0ltBHshz8ZLiaiKEa3VqmRFzfHWtfCgg0
keNa8m1C6Eqr1y5s4k3k8eUFIQU0aynHnXXHm0j5uXBHE3TEA0ntwctNROvw
Ru4gdEOPiUDQ3SZyh6Xmxg7q9zAyNI7Xj5pIxgbXNHG0mY/zFucXTWTVajFG
ZfQfufe/dAKbsA76RD9H740oLWQraSLhlRrz/9D2dgeuv2ZtJr0e3Y/Gk/H7
GaezNHiaSd7MJRXGFFy/wAR2LuFmEqydySuE/lMuUxt1qpncOOhXcBP92WDl
gN2lZiLvt+7tMzT5lfv0mGYz7mt743B07wv3gTWGzYTRYkCyDO3Go0DKLZoJ
Q2huPw29N3Xjx//uNpMra3Zp8qViPrlU80vLrZl81LtToYpef08jZuR9MznE
xp+UhPaqNt5NX9BMtDxfPHFIw/0s8LntgXULWbzEU+FE/f4q5/rh0w9ayJnw
ByQGPaa6778NT1rIK/rGxG60sEuUgp9/C+HN8QggWTSS0JSRmlzUQkLzHx3Y
ko3nDbeWdzMcrSTBPJxWmIP5uJNZ5UZpKynPXnAVzcfzzwuTVrv6VtJi5vTa
CJ0lk6H3uLOVDG5b89kXHeRrZB4000pWbm7M/IM2U05xb2dvI/TG3lXtBZiP
C3RSlW62kS/Suw8EFOH50TZOVvdOG9lRX63RiO7mpi80d2ojnhaubpuKMR86
xdR6/tdGrL8MtDmiX0ivHs9PbyMnNkZ46pbgeWtI/XZdQRuJ/6aT9A59+23E
r56qNrLv5ObeKrTarOralb42ssn+tvSJUhrhjAzllGZsJ+3dUsNcZbieV5e/
nt3eThTvj27VpH4vuF5ZUI2rneRt85d9jbZNCYk1FGgnkjEXb5agB40XD9uI
t5MwhZW3/9Aa25SyXI63E46BmFzpcuy3876e9jrXTlyO3RmRQx+9/bs0QLmd
fLun9kkRHc116XKkdjupSD6sqoHmrgpqSjduJ7M01g36aJ+HP3VKrdoJu+hC
jinaofWz2ZBbOzGOyBC6jz7hM/toT2Q7+fOZrAlAx508t/5gcjvh7eROC0Hz
Tvt7HYd2orBzjVU0et0luY9XG9rJ2zeFbTnoGvr3SW+W24mI5/n4PvTppImj
X+k7iGqRkOk4OsnwZF7clg5yf82m3XNoPxirquLrIEWO1Z50FZjv7h8fYbjU
QXRtVA32o4WMS5umNDqIz6eQOlH0nJJaYdP1DlJc9vP00QoqPnoTsiw6yPLP
c0ln0B57Lb4E3+0gh3j99imilbcsvH7u1kGMlcZ8NdA7lx4727zqIHHzX6W2
ovsHt1hq+XWQrwM/biXifKJqPuqQ4A7ytv5IoDq1Phn7L/DHdBCPvMcNv/F+
kG+JRzand5B7cdUM/uj6BxU7Oqpxvl7Gt7vx/i/uW65xWOog+y54nzLF+Mhn
fpqjS99J2GQ67DegXy6zRMsxd5INAvwRkRhv3HVCz1n4O8kP+iyWGYzPc47a
cjFXOkly3sjAvUIaYTYdFn93rZN8jxNn50C3XbHlcTTtJP6BTpeyMd4t9j//
e96pkzg7bUtejZZiYf0h6tlJblvojQXj/vj350sH25tOYqgTvvsc2qc+PW0o
rJOckyEez/No5Fr22e+ViZ3kiMDzDGH0vrC6d4k5nUSIrWmqOhfzrY+uu39Z
J+Fcx81ng05zGrN91NhJnJjbwjIB842Z/XWznk7S/P1mTR/u54uqq5Uvj3eS
Q2TpJwO6W2CnyO5VXaTXkuOMGuaDsG3fOOg2dhEZ+qib1O81bf6KMk7s6CI+
Ace9gzJohK5RYSTtQBeRq9DtmsT8I+Ry74uaZhf5jln5CebP+Zt03scMu8g/
EP0cifk1W83bmdeyi2hp5hXWYf5WFgrTmXHrIowe/Vu5sD44NLXseBnTRSwH
9kalYD9yMteI7k56Fyl+kFxPPS/bEDlNu1rYRbhYzi2uQQe4MtTub+8itSdN
z12OxPpo/iaHaaiLCLb+trCPwPO0xp7on9Nd5JG155uP4ZhvTkZ+7FzqIu3r
dmbkhdFIwQHp5wX03Xg+C+8d+Y792iG14Nkt3eR4aogdJ3pB3CZrz65uosww
uxDyDe+HlFeT4t5ucm2uWCI4GPPn0ciphwe7iWlPgNWXL9TvqUoZIo50E9sK
2/DAQNwfp4a4W093E+dUhcFPn2jkrcIeVUnNbvL29fxV/w84XxMGzm9h3WR6
Olj05TPMNzf3Hm5I6CZLHffNnz+lEX+LU0qrs7vJutLLoZ5P8Lx656Grbl03
4Qxa5njyiEak3aYHdyx1kwvKqgzO9zG+n2z6e4auh6gfFzzteBfj7Zkgmy1T
DzEQ+Of4wB7zsbfR+WreHnJ3VSTNwQbz0VtXwz/CPcRt0lXE3ppGGt9/eigk
3UNetWqY3bHE88DHjLdap3rIh0LhYBtzrD+BLdEeF3tISNyabuubNPL163xx
knoPiQtoZbcypZHjoVt7+/V7iI4dXWiAMZ7Hww8uMt/qIfvvHHA1MsB8HH2R
hdj1kDkbFW2hazTCGG92wNK5h8Dt+5Kzmtg/JD2R++jZQ15YBzGlqeL+yQSH
3wE9hNdyKv/sRaz/rd+J2RTO14j/raMgnr86C7V8F3qIkqGi1Zl9NDIzPXPE
cHUv2XndToGRh0aez21W8d7YS+L18v+8Z8d6tiTvPrmnl/Rd1TNJZMD64djs
vXZfL4nWekIerMX+86/xp11CveS+ZtTOU/9mCW21W4qCZC/Zqr5UVf1rlsBj
5gJ9mV7SpcoT9o42S17SB9Y4nOgl4SoKbtemZgn/hqzREIVeckrZV2p8CP++
5OCtr4q95KKk/OnivlmS4/FlIlCllzDNK6ppdM2S52e3W37S7CUVRuI67C2z
RIPu6ZT/tV7yrIHVsL12ljz5d2Xe+3YveeQT5tSfOksGf478c/TrJbeZK5No
T2ZJXJL2/1q473gq3/+B40aEyh4RyaasjDJ7i0qEjxHJin4huySlj1mSBioN
KkIUklEZWUWUcQqZWTkD5zjrFkmivtf9efz+fP5xzrne13Vf57/7lXQhZwq0
EisbXifMQ+yZT1znC6aAzr7TGh0zD+LzL3nOlE1BQI9370roPFgx4jYEvZsC
n3Q2nevwPBSQxKRcqVNgv1FMSUxxHsLzU7KcmVMgEPtTY3DLPJj4/pJ2/D4F
HfQx3fsS8/BlYlL20OoU/CvskD0uMA+cX0sU9woTYQC7cHfvTwx8e0Bby4gI
yVUDaRt6MdBMf1mx3ZwI2bRvBOVuDJbtVHaqWxKhQoG+Yc8HDDK6BAyU7Igw
fovz2qlGDJrbB42lfYlgEKmdMliMwbXkgw2S/kSwLTVuZz3BwM2qwUw8mAi+
pH3r+B5jwHqXB0JRRLjh7HnR5C4Gco0h+3lSiUDRS41/nISBuPTKSngaEUo2
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
vVYB
            "]]},
          Annotation[#, "Charting`Private`Tag$22916#2"]& ], 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag$22916#3"]& ], 
         TagBox[
          {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt3Hk8lN/3APAWog0ptJMoRCGVFCfRorKGRCGVJGSLFlsqtJBoUdmiZMsS
suZaI9n33czYt5kx2T+q35nv6/dXr/fL0+M+97n3nHO9Zs42i5t6V5csWrTo
JseiRex/d4PgyL9/DDKTN6d9aikTbs5t95ubZ5C1vMsfsp2SJrfj9xSDyF5a
n8W2vISmxcAog1hxHhA5jT6w5mF7ZQuDtGo6M9m+/evF7R/1DDIZ8UDsDDrn
UYRgQRWD8LGCjNg+PJ+jl1bMIBqvUwvYdk8vZybmM8jVoYJJtvPtmgNishnk
vlKthCb6n0SfdGQ6g4Q967nA9pHeiYq3yQyS3U0PZPt+2D+r4HgGGTWW36aF
Ljq3msv/E4OYRd9pY1u9UkLN6z2DnFDgPqWD1sgwy7X0ZRBBQ/FdZ9F6vlUJ
e80Y5Ntbs3EjdLBqh4aMMYNI0WI+nUc3/jc0uMOAQcKl6BeN0Yb2HGIbTzOI
T65btQna5Pyh0EUHGMSw622yKTp0rYbSvByDVIhTr5mhu6sMW39LM4iKnYSI
Odr8qOO6QVEG2fHvW+Al9IcFz6+ULQzy9sTfkxZo2jd/nfb1DLI68Njiy+jt
Du/pDWtxPlqfZbN9ZVfcsyoeBpkSaXS4gv7U/02qbDmDrFzsdOAqeiCipLyA
g0G2PG7xskRLGNdb5vyjkz1rDldcQ19fR+FIn6eTo28j115H2/0RdH83QCfP
suUP2qFdax7aXsunE+F5w4e30c9GXVoms+jkvZ398B10FNd1Ve80OhHsfax1
D10JmgJhsXSyqjJvvQdaNEXge30QncyFiX55gFas5Npp7k8nt/gP8z9Caw7N
BY770gnTx8DVh71eRLqvcLvTycBNP9XH6IDDtdWvXOnEou9DzBN0tFGR4nZH
Oukyyl35DJ3lnB6VYkMnRlWN9v7o6sCYVSrX6KRBld4UgO5LDHH5dYlOvPKp
KYHoufInFKMLdELpvfwhCC22+Ga6ky6dfNht5f0afdfhwIW4Q3QiWmKvHo7e
oVeesI6PTsQY98u/sNerXY5A1Ao6ebiOIzsZrfsk0XMPJ530H/SJS0W7FQWe
PTU/Tj49fPIkA10vf/4/z75xsmNj8Jnv7PW9duTUaNY4UTBn+lax11PjypHC
S+NE682h5b/Z6/dKRn7ChXGSv+nZwSn07knT4FfnxsnuyM7rM2i/tV8PX9cc
J6vj3Cv+QyvrGT3nOzhOKnPIUw4OJsTUfFQw4xsno0J5J4TQtyuUPRfyx8ju
7iYVVbS48eDZgewxEnT3RLcaun44UKI2fYzMCGa7H0dLL++ri44fI0Q7NO80
mnriidjp12NEp9BCyRB9qrT551vbMeIQlFVlg95ScHPdgc1jJLR6hV8kupJ/
n7OS0BjZXuSUFo2+e3W+QZl/jMRndHbHoJtXPApW5x4jmaFJ+76gAw3e8etN
jpI6a73ebPTS0RI+28pRUvOGxWxEf1V+Ym9fNkqO/bIdakWbB2rXOhWNkty/
Qz2d6Lx97c/vZo2SmKs91X1oFy8Gj9/HUeKxtzJxEj0ssHF1tNsoka75ZLWO
kwkhVj02Ma6jJGrJNvP16OO5HyvjHEeJ0P7Qc5vRUeZ7nqVYjZKlYUHHxdAX
EtRX5uuPknZrTzEF9Iq/y28Uao8SnfD5TYrobJ2aipJTo+RH3a21h9GC0+ef
/DoySlIVbZaoo2uO3FzeJj1KpD67bjBAewQrXO/cOUoS04uXGaOlB+bKe0RH
yZ4i3klTtN/Th34D60fJ3q7P1Vboo81vuSY5Rony2tYHbuiMGyWcvF0jRMdT
kR6NVhSxk4tpGSHcPDbH49A5jUIXletHSEFoRHgSukD5RvqNshEim7NMOxtd
wct/uTx1hPBONSZXoylpZgX3fUaIe32W7n/s51uYvzu5Z4TcvWogfXkZE/xT
PsY8lRoh8bv/xV1H813VqhcVHyHtM7E77dEC1R8kdTeOkINPFkTd0SKRJ1u/
cIyQuaToDW/Q+9Rf77vWNkxWmHdx1qDNn8kx27yHiUzP1RkNLlwf6UE+Ve7D
hEdEcbsu+lXn782Ft4cJw3yFthG6QvqbRqzdMPlKS4qxRO+tUop2MR4migMz
Bg/Qy3jUDdfKD5OPj3DJoROfG+adoQ6RSXMreQ1uJvzIzNQ70jlE4uh60bpo
as/64b0tQ8TUTXmdMVpQtkNgU9UQ+fmGf9oa7VlrdnM4a4iEVedlP0Prrbku
6hM4RLZuvWzUgp4NuudHYIicvneex205EwY3F44cVxoinHcu7PdFN8cs06xW
GCLExcw0CJ2W82JNl+QQUXC8mhSLtqN9fje/dohsue6g1YTulWtM3Dc0SMit
nVKHV+B+zN3A+502SKKjtJxOoQuOmTmodw0Sv5pbeUbo8PMj+87WDxIdyRKt
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
KvVcUEPTSlqqC2ktJPnU+ccXivB9zoYeW+XfQjRET3elYLzJCL/10sC7hUif
cbf1Rose0+oNd20hvC7Jf86i/3vxz0vOooU0/Vy7dQbjVdIuizzDAy3E3KHT
VBm9zmzn3g/UZuJaYEv5ifGupzRVZP/+ZqKWtY2HC+Ol29k5dUXpZlLFKwO9
GF/XU49cVxJtJkbXFO0JWmehJlWFp5nYCGrXu6IL5OlHTww0kVfObq+HsnG9
RkhdNXrdRIZkW7ZWYLw+LOP42PhZE3H0o2nHoFtzsr9c8G4iCz3jXt5ovuaT
0+Z2TWTNc45eJfT9Vdd8rx9vIkrjcp8TMnG/3ImOuzvdSPZe5Sj7gvng77LR
KrexRjITmcEbhH73Up7lQWskOZ2WRi7o+uRCpQfVjURV/+ewClptoOfX05hG
oqUWsKo2gwViZzfTQw0bifW29XoszDf90q/kybcG4rNS9c6JNBZIeXyiDyU0
kIqEFwu70XY1GfH8HxoIzxmapyB61qFZ1PJpA3n97IFPP+avFZlCa1ebN5BP
q38EP0DLqr77bby8gZTynk4iqSy4ZxCRPm1ST8Q5w56fwvxXEJNsL6JbT3KV
O5bsZ+fDWSJ96ng90XHZ4LINHfCO8jFMtp64Db66MJuM89mz7ZU6Zz2p/xkg
GYP+cf3jraCkOuIZ4FW8GL3GI27/7sV1ZPmQ66uaLyzw+SZRzjdTSx6IT3wi
6Hn65/O/x2rJgoX1t2Q0zSzGLau1ljC6LrQ8R39VjS46mlJLmhtUN+ig9TjD
tM6Z1ZIosjKsFvP3zg3bqhbdqyHmWh98BxLwfT0RZpZa1hD717albejZ+S1r
n+rVEK/ug0ur0OWdG88LSNWQSLt6jzS0VeS6fsm2atITsNTFCx2/k/uP3oFq
Ylpz9cpGtPR+hvSn35Ukyq9V3xjrB8vdnp7ZXZVkWqYnQgsdsYO3vqqskpxu
6B85iuYX2uM6/b6STG357bULPTNjV3hCvZKcTFv9ZSGOBUXZdIORl7/w+Y5y
RqCNlOkee/ZXkBLq6P4RrFceqI/XZt8uI1KlHlIvPuP1J8e0FS6XkYWzSmU+
6EWao9VJmmWkhjZ12Q3tZjBcGS1aRpwW2YZdQ7tY9pf7V/4g3w+Z8Kmgrfy6
Ci6J/CDaXw9Mj8Rg/VNZlbK8vIRY2D97rI0W0E8KPC9URHjq4mX3fML53vE0
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
AZTODAH2fP5/fxsYmZ75X3+b/wNZRVD0
            "]]},
          Annotation[#, "Charting`Private`Tag$22916#4"]& ]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0.95},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"h(x,t)   [SW - red, N1 - green, N2 - blue, N3 - purple]\"", 
        TraditionalForm],
      PlotRange->{{-1, 1}, {0.95, 1.25}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {
         {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
          1.6], GeometricTransformationBox[InsetBox[
            StyleBox["\[FilledDiamond]",
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[1.6], 
               GrayLevel[0]]}], {0., 0.}, Automatic, Offset[
            7]], CompressedData["
1:eJxTTMoPSmVmYGDQAGJGIGYCYmMweL/fNG6XJw/TcftZM0Hg7f57p4Tmpood
t2cAgzf7wdLax+3TwODVfh2X9gMTHY7bnz0DAi/2P/8jcrwx/Lg9xLzn+xPO
TFvTVQAz7+n+j00dV7Z0w8x7sl8y4vhH56Uw8x7tP71/Wvi67TDzHuxn5pD3
2vIEJn9vv774x7kzvh6Amn97/+xnsstfeOyCmndjf1izwfbqnbuh+q/sV+r4
XMB0eS/U/ov7F/y5a53lcwAqf2b/zfXWdysfHYSaf2z/lJsKk3vmHIaad2C/
S+urZ4/yj0Lt27x/m56pk30wzD8z9xdnTHxbY38SxrefppyicF7vNEy9/d7D
by9skDgLM8+e++rZo/e/nYPZZ+9uOcO3IfECzD32HIw/hbQsLsLca/9s0qq3
aj8uwvxjnzJR7R7jvEsw/9r3RSX+inO+BAsP+7oCu9I1Qcdg4WWvOm3K7vMf
j8LC037v01fH1X4ehYW3/dl11dpCwsdg8WH/ivmkdbvRMVh82Qvp+z/vApoH
jU/7GV29lbKFx2DxbS9acP7z8l6Yfa/sDfhnflJcATPvjf36ytD0rQdg5r21
3zLx9bIp12HmvbcHBnar7dtj9gBZdjrM
           "]]}, {
          {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
           1.6]}, {}}, {
          {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
           1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
pwtLU7B8o/WHAPb//38EtJHz/t//I/4P+qC5tw==
            "]]},
          Annotation[#, "Charting`Private`Tag$23550#1"]& ], 
         TagBox[
          {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
Hen/qWS5HAv0/BwdJbBX6d3POa/Egh4zI+EV2Mp1exIVNFgg8lfSZak/effF
7ofrsCCzbVb0F7buSWYwXZcFh99RCGPYJ3ufXEg3YoGvdc6qAWz/0XFtBXsW
UHONqxD2stxa1fBzLLgVqXHlC/Yjn5cb6RdYIO0gsy4fO23+GF/6NRaYCjOv
pWF/F3vTIR/Jgs+uoXIR2DYdgfVhD1hgvv9iUzA25ZlFKS2OBaOrTvj7Yk/J
LaalvWTBZrSBeHGpHpldictSWVCSsCzoHPaKD9n3XTJYYOU5onIG+6lX+O3q
LBZw9YkdFtibdtl5y+ezIHpdcYgJ9rsZDbewIhYo/kjaZoCtVSZoRytlQX09
6dtu7LLQQTP9KhaY5DG6l+bTUaPPh9PqWND8nEtfi92+4qHOsiYWnLwz92MF
9tkWFzWXNha0X+JfWFrPr52WWCVPZkGv7oa1A9gu73a+UKKyIOGWhnIrtvXs
CQU1FgtOlRlpVy2tJy8f6Wj8YEGL3jXzt9j8Q8J2B/mG4euhr1FXsF+48afb
bR+G/CNXZ5fWt9qbc9rxQcPQLuAhK49dVLeuIvHOMMwMP89eg/1eZt/RF5HD
sPFb/X7BpedDCH5nUuOG4cIDJTvOciKc+TcVnPtmGGbFqYlF2BN3uXXfm4Zh
8zpbCVNsapeYeWvbMBjORaboYXcqq5Pau4fhUv9ndQ1sQoPnGIkyDAVJq82k
sLPXPbwxwByGntv6ZEHsZI+sf5TRYZh3un55bhkR7oqMirOnhsFIvjV6CNvX
YcV/Y7PD4LF8YW079qUcVXnuwjDEMra/q8U+u3g06+dyNuz2yRYoxT5hflH7
txAbqk/e9izAPpwaWT4rygaz7ebt77G1f7498k+SDb1C8ntTsdc9ZdjyybJh
ourr8jjsveGbpW/Is0FA5WduJLaNt10HXYWNz++bzgZjPzEnmtVoseGEjV+h
B7aIaJl+2DE25IyqXjDC3jr/e3HSjA11J61XHcA+NqZZ7nyKDYOFd8q1sCO+
Ze457MgGsZA+KTnshYj47Tw32HB19cO6OV68v7jZMnI1gA33/L94T2Lvd12R
OXSbDSkDjE1sbH/9kC0omg2tmXp+XdiJmiWD6rFsGBbxUGjCLpSbfpn8lA2L
1xNbq7HbxTXOiL1gg0xP9S0C9uSCh/TtFDbsPMBVycOWmHjbMf6GDXwT3O+Z
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
            "]]},
          Annotation[#, "Charting`Private`Tag$23550#2"]& ], 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJwt23k4VN//AHDJXqEUKcmSPpKkUrZ4l6LFEhIiCkVaJEpSsksqREmrrRBl
F2M7oiRZhoRhmH3M2EaWLCnf4/f8/prn9dw795x73u9z7vs8z72Krlesz/Hz
8fFlLOXjW/zVAOnBhQUe+vNLtenMv1a4MqscNTvHQ5c+Pn226PyiHZsnpnio
L0DIY9E7Vc1d2UM8VL2UuWTR2ivDe5q6eCh4TbL2aWz/74/869t5aIy0QnDR
5RHJ0jXNPOTy+na7M/beuXLrojoeMvrP4fKiA4sbxt5X81DhUIPeoqu9OmMy
CDyknK8tsugFVaZ6SjEPPb6W8dMJex/jV+OzPB4S0F2TvuiQVwvnE7J5KMCA
++gUdq3dCuGHb/H/FxQVHLEPNqkeCH7BQ36hCXvtsY+UnK5wv8tDcvf8rltj
W99tztl1moc8EvcOmGAn7O89ss2Bh1baX79ujN3xhzOw+QQPlcvmLj2Ibest
sGmdKQ+teLVRYT+240n9l3zaPFSUzn9SH/vs1ncPmsV5aCG/oXE79o3W8Mse
1aNIa2I+aD32gyG/rsmyUUQRH1dah50m7Lk/tGgURasNfFmL3QTma15ljSKq
S9syaWyl/DVV7fGj6CHx7VNJ7Ja4jOWGHqOI/cEiTxCb+T7J77vLKBKRv6Qt
gD3bEE21PzWKLj9LKefH3rTkSrGv1SjaHSf6aeFvKwRc1T71Tn8U1Qf2Ns9i
b7ZuyFktOYo49kEDI9h7vcrXpImNIrOOogvD2FbR74O2C46i/GOckUHs27Vx
x4/OjaCbJlaTA9jtO0/+CWKOIDEt5SV0bI6F6bkVlBHklWcXTsX+e8Gg9Tlp
BLWrPRCmYK+6u11XtWMEaWfURPdhq6Yrppe0jKAXilMryNgGSGrFgW8jaOHl
lkc92Na9gjeIdSPIba3zahL2+elpqlP1CFLKelbfiR0oNXh0qGwEXZ6y1uvA
jt9OLvYvGkFlRstz27CzTFvkhXJHEH/cF8XWxf6GFY4rpI+gJDUd0cbF9icD
nts+HEF1pzd0I+yOjmWDn1xGkGzjwPUc7JCzJdU5p0ZQYE3P6nfYGpPOCU/s
RhDtY3NRBnaUVOFeT/MR9C696FfqYv+t7WMldUeQbmDQ5STsQdqSs3O7RtBL
X5/lidhJV3N0mBojiO/CuZwEbOMlJ1a0bBlBZ8/YH32EPR73j1a6aQQ12Jpy
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
9b4qeK2CvYGxWbipmIVYslpxRexWWK4ZNXkpj4U4ZY+XP8Wev82lrchmoUG7
qagAbLL0+8pjySzEe/IxZD/2y6M7fH7cY6HZlbq+rSxcDy472kgMZ6GPHTt7
irFzvrsqtQSx0LWn6vufY+98cCvgewAL7XDYnBWEXW72uL3hOr6enILEOWyj
FR/U6r1Z6D1F1u8odmPzl9C6iywUeeOUWBi2dUx/T407C12NVOFUsRafF9M7
q11Y6NST0S8z2GckJO9XnGKhw29K03fh/nFaVRlldiy0qyg4xAt7xtIhocic
hUTaVhkwsaWPV01k6bJQyXLt4lY8Hq+lOk0ztFgoeT1fvBgeX5WO0fT07Sx0
X+3bFWNsrRMKNq9VWMjlsOPWCmxru7DihJUstCI8KC0Dx79H5uXyR8tZaCb+
cDAN26W7+GyMMAsxUlc6y+H88j7JXn3vLxMRULpsPHas45Hrd7hMdO7P17hA
nI/Scq7Nt5hMZCn2yKsM+zU5QOUmhYn0ZR3MJrA3v0oI9Othos2qymoaOJ9z
nd7/9P3JRCu1h4U9sffIf9l2lchE88YlrHTsqv6+CK/vTMT600CdxD6Y/Lvv
Yj0Tua41JgTj+dF0WmKP5ycmomp9erQczy8bBdUY90omcrIyuJCE3Uvdx3Yr
ZaKeywSjTXh+Drr4JDp/YKKOjIIJfTz/Rc7+/H38GRN9W5t24iJeT+I2jVpY
PWYik93yGtPYMiyhTItYJvps9VwoDK9Hm9117I5EMFF1dHzpc7y+GZ9/UWp4
lYmK5kNlG/F6HXrJxX/LESZ6SXXrU8X1S3+M88vyA0y058N0yGL9pFfgWGNq
yEStN+9vtsf1V+IPeyZZh4k8TTZ+52GPT50Q8drFRPxSRVfu4nrQYu1x9YVt
TPSCYrJ6I96vZOtZWsapMtEDC0fjQmwhJ/NrispMJKMlxVi+gOMVdDSpcAMT
pcl+D/bArkw9VHlgLRNtWwiVr8Ve+/kgtWMVE53y2eAszkcEogioTgsz0YDd
zz/nsffF7yrTH2egv0rG2vJLiPCyWJPcNMxAdWsUI02xZzq38TkPMFCUyN8O
f+z89aqHg8kMJDVa7PMDe+Nbue7P9Qy0hbApN4qfCAFfZedPfGIgXg7f3xLs
Tq60wkAFA5W8JpsysGM0Vp4XLWCgfeGPuQZLifCvVHDG/AUD2R4TUJnAdujh
l6M8YaD1RlRfBQEifJxfAO84BqJpVdaaY6/a+NdtyX0GyvgvaeUtbK/9c3fj
Ixjo0rprZ7KwG92mc5SDGagioj/XAntz5GRrcQADnVPYVc7B1+9rHJXpusJA
5SfIRDlsnZEh/fMX8PExTfJH3L/HEtzTs2cZSOJ+xIAltpkNI3O9AwOdrdH4
F47vt7KvS/vMQQaSs+W361kcX76fjr8MGejq/ZzL4tjXlNqDQnUZqL7GJtwI
x0vdo+nrGw0G8t6aWZCN4/1yrMaOu5aBPvOZLb+F66eZVdW3AqQYSHbPlFIe
rl9sdlckLxNnIK+Lr3UZuF5YHlAysG0pA63tHHM3xfl2/mXhMvSXji4vex4Y
hJ/nn6vztlvO0FHtvgOPi3B+3lqafcNnhI4u5Tz5tB7nr9czZ6EzHDoSW9N6
1gnnt+t2qSfmDDrKuiMikvwL79+/fFXW76cj11zOPQ08X4463i5UJdGR0a1t
/17h+Wv4S3O/dAcdKR328VmB148dd1mtS1vpaMmaUvZtJr7/IouR/s909Cl3
X6tjH+7vkaW3mxAdpd6KOPCd1AoL/aVi5eV0FHy4sVSvsxXYYoqqT/LpaB/9
eIpsK65XXSdcTV/SEVrjcbWrBu9PZzJ/6Tylo2R6DsukqhVexJwK3hxPR3fy
xk5+JOD5Vv7l1ZIoOjI8EmD0pBDvx1cldZf60lHV7YdSx9/g9SLLzOOtFx29
OtJ+tzYF728Ml/yO96SjQGmZ+R2vcH1z4YKU12k6MshPYUomtsJqvo1pjg50
tCGQZR8c3wrCiT80j5ygo/kjas28mFYY/bTXYpMpHVUyikpa7uLnu90v8koT
OnqZP7PFMLwVfo68vbiwj45uBRq8/hDcCg1hDnPD+nT08ZHcsqMBeD7KStzr
2UNHOTvcvhy43Ar5eXUyDTvoKKXtXZDBmVZ4Y+yfUaJOR4+vjulqH2+F+1dp
dXFK+HoFgblquvh5KJxofWcDjrfV5/Ob1FvB59VR2sW1OF6/xJTlN+L967ei
fybidGS2I+npSkFcvypG6v6dpSHZgsLgGWILyJXqNQxO0pC41azeeF0L3t/y
bLt5NMT3C6aGPrbAb3/7a0UsGhrQbPakvGyBz0S1PM82GirJH7CuP98CZe4U
A7smGsq21FhR49gCOfMJTQe/0tDLsWtfCRYtEK/6l7uxiobCNPn3ftBqgcjq
Av8VZTTkTzz8O+O/FgiwcRf+U0hDl7xj81PWtYBLcOumziwaOp4vp/KYrwVs
ScmGfek09M1G/UbrRDMc3eltz3xNQwaz+t/EBpoB7u/zGXpGQ0WvTNeb9DSD
FlPywfhjGiKXbti8v7QZthjQ3s7G0pByQ+6n4vhmkE8sQHz3aehCNzipejWD
yGHrCfEQGpqZcXksodIMf1OUVkjfpqF9ohPbw/iaYXx2fPOGGzR0Vzb8++/e
JujNSXDYehmPl14Gf398E+RK/Px06CQNbbo16P2erwnSz7/ttbChoYv3by1X
IH+HpE/Xp04co6HCF8uzEkq/Q4iv9JazxjSkV6lBCfD6DjZddnHBO2jo2F8f
8yPkRjiiqZp9V52GElcIcCtLG8Hw3kxdzH801L/hSbhmQiOo6j+bfrkBj5dh
aYXM0Ub487rHmSBKQ6FBf7awS7/B2HS2f40AHq/YB19OJnwDpuWt+K8LVCSa
ssGl2esbkN6Zvm+ZoyLL/Nz5fUe/QQu/XP3PKSpKqoGkYpVvUOc4TCGPUVF2
5pJVkeMNUFZcOcsYoqKjt1YqyaMGSHN32jZOo6JopR1GFvYNcFiD+ketnIr8
UF6teFU9GNzNX7OzhIqkE1B7xr162EkN3q6bT0Uf3Vvphrb1sD5e0e1QBhUN
r+DxX+F9gdEp10a3eCpyPaVxoFXxCzypYiW9vEBFJ2ff18VG1oGz//M72ueo
6LJltuo3izpQ3XXsbPtpKnqQmfmQX6YOfo0sPXrZgYpS/r0Z16fUQnlW2XaR
E1RUciLN7npmLYS5XV6TfoyKfMZ8C5/eqAUzeaU/BkepSNz4xMlQ61roT7hf
7wtUZDIqk2knUguZFvvei+tREd1o1tyI8Qm8RacevdOiojtPeybVqz8Bf5Cz
E2ULFZXuw/vua5/gvws7Jo+upiKNBKX+95QaGNvEJrHEqahxYGnE0/IaIFCe
o2BRKnLfy9oa+qQGnmaLSF/+S0FprMybdqY1QA3OPXCwnYLUvR3UBLwQ+PyW
kQj4SkFnZTf4k5QRCFwK6cmrpKCXtZQvuaRq2GJnc3V9JgVJrTnnctK4Giqb
qvZavaQg6+r/8jT+VIGF0X8idx9RULTH4PzSgirw2Tb3evwWBf0hXEnKlasC
gXS3C6pXKWiX2052WHslJK5t3u3sTkEXl0/tOhlVCaoxe5Y8dqSgvVsNuln7
KqFiaUrTN0sKcpAcOCe7pRIsboomLRhT0I2puAmzlZVAHfVx261PQfE9eiHB
sxUg0GM8l6JCQQ1vYl4OfKuAxGN5XzrXURDjno7a+sIKUP2y9tFySQr650Uv
tXheAeb5Q//5z/WjPbp7fpRcwOdHPjpxrLUfvW3uEw1fhs+fn1OI+NyPagrv
Pi2dKIfyq2eHywn9qPfpDpWh3nKgnNIO2/ymH0m5Ruyzfl+O86Mv/69/Pwr5
rX5DwRyfn2Vye5dXP3rZ2ylgs7scxz//kKdbPyqrCY6/u6EcroqG9XeY96Ox
6I4PoyMEEAgafid2oB+t8L6jr9RJgMTJE9f36fQj1ROq305UE0D1Atrnt60f
HdBrt72XQYByiury90r9yHnjbWZlDAFu713y4fnafuT26c3GKH8CGDwjmd8T
70f86oq5FpcJ8G+qYPSGQD/SKSVOF3kSoMY6OtZ9rg95GwXvl3UnQGieq+aJ
sT6U2bz9/h1XAhxcrt92gN2H+u0pHQxnAnz9MrRKsb0PmV0xPJ9rR4Aopc9F
Eg19KHRupEDKhgBHg17a/KvqQ+URr/74WxKgRcc8sfddH1J9OR9z4AgBOnJy
ZRND+pDAt/KSbj18fyJ3y8Nv9CF9mwsLBtoEsDt32tH3ch/yocgeSd9FgB55
yVeWJ/sQdcqffFmdALRHVxWW7ehDlUraS5fKEyBt9Min2c19aPwD2+z8OgKc
NVVy5cj1ITXdxMRmaQJwBH6kfxHpQ0nHprYkSRAg2yXnYPE/MmrteeP7dxkB
LlaHsdImyUjI3abKVYQAoze0/gumktG120WW25YQIL9jeYNXJxnlCLs9j/9b
Bld3sM47NZGR+9f51/ZzZbAzpkrUrJaM/vy0XXV7oQwmB59k65WRURwzPyJZ
gAAfD3mZbsklo00TYrO1ogTwf2MyLPOGjMqWnLvEFifAH6fpbVOxZESXlz2+
TZYAleWtLYwIMvLb5ltvie/vjkzWlfZbZLRsb7PuNWUC8LfZF+R5kJHWyRCF
im0EEDlYrnUByCgygTty2IgAjSnxP+13k9G6tAMulw4R4MHfC36HtpJRXv6r
jlgzAkiUri/bJENG3c1WFZ22BJBWC9SnjPYiNZHyqLMXCdAdeYLczOxF1dKr
5+96E+AZY1tgZU8vOq7idSXnOgHkXvVXP6vvRbeNlGzHgwjQP/vxdFRlL1pp
dfvbmggCpNjG8t0o7EVvT3fu1Y0mgLLkPiOb172o5Xa0cvBjAsRo0gIuJPSi
KgELsVXPCXj/GFoUHNWLch6s/JWeTADXq8rDiYG9qEBM8cDtLAI0Pfq86YNP
L7J59UeruZAAewrPOdV59KLp7Z2b5atwe+1CiaRTveh5bf7aK18JcE3qiLDQ
oV5EHTg3L0kmQL20dVMprwdN3da7n6RRDpraEwItzB6UJLEmkKtTDs/tHhsw
ST1IP43npXegHK4kdeZKfu5BQV/fWJPtymHtOsdHnkk9SGyVxDqFkHII1Zv/
FvSwB314w1129X45DDu84k8M7UGW2p//fnpSDp9eUHxrL/WgJ6du0tyyy0G9
Mvh9t0sP0uYd/1FcXA6JZEXWqG0PIoVofBFE5cD3t3aDoFkPur1atNT2Wzlc
2HDWdv3+HrQxk5GV+aMcOgwEY3fs6UH1qVdN2yjlYOic8fXQ1h6UKCsvPzhc
DlLJHJ1ra3rQHtEbdeuFK6BS4fL6Zi4JXeeoigfpV4D4Jj/qnXgSmsp4kG78
pgIK1aIu0BndSNtxuoF7rRIoXwoU9uzpRFqnPnjvfYKApf5kJ/r4A1n0Sokd
dPgEK++826OxpA1Fa/4dyN1SB+p7eOpvJ5pQxr2H/8HgZwg7OEIk+H9F7m+p
+Tr0elhjkxt3UqYW1Sn2lnayGqDw9xeJhk3lSENOaEqmqxHe9rIecsNzkULK
1XmP6SZwspIr7nV7jMzC7Q1Zv1uAIHbrZ+31BBi7JK505yYRdtOXyIfY54Fi
utSyJQ/aQHmsYlavlgBxKft2kKPa4Ug6qdnCvhZGBHaJZD3+Acbmq5ZOlXyF
rmQ0u+ZxB8Se7grWLG2CbrMVpR23fsJXiw0rLFe1QdeK89kRVzphRHHNnfbn
P+BM5oVA8qEuuH5tq0usdCe4aU0pxK/sBmkxXqWtYicMjlQ2Ta7uhrLkwrXy
6p3gkxnub7e2G+YbdYnv93dC2LrVRLmN3RCqeBgaL3XClvu0ylT1bohpObtB
sK4TjmzjO+t5qBsyVF+TAq50QdRVg8KZ291wuNplt1FAFzQZK2ZaBXcD97jK
I9GILpBcJ/gyO6wb1IPeH0563gVPa5siTkV3Q+HP8tKSL10wUh8kN/G0G6pD
u56Mre+GgqDrS64VdUMXWdLavaEbdH+d+X59sBuO3j/Xfa29G6S29E5kj3RD
pW65cxi5G0bOnJCjjnVDSqLbxRT8m0o8cvnodDect/wY3rOWBKFJCyW1/CSY
q3MstfAkgZjgWWdzWRJc8sk3cPIlwYt47yJ5ORL0Kwh+vhhIgq0KgSJj8iSo
DcwlRj0igbl+YmH8JhLc114yWEsgwaOrDULd20kgl5Mhpy3WA7L96nmuJiSI
OfknzXh1D2Rf1BXQOkICPhHLLTbyPaA/a3xS0IwEPh/f5Lmq9kBTpHVupwUJ
mGdnd1/d2QNOq08vzbIiga2URWXQ3h4YTb1of9OGBA2f0oxiTHrg18dc5GBL
Aj3v6YaXlj3goQmuyvYk+CBvdizHoQf63rUKDJ8kgUJzyk/C2R44rnwms9iR
BPG3phwbvHqg8eXYkUAnEvh1vz7PCu2Bj7ErY8VdSGAY/ytkY04PxF4/Lrvj
PAny95mIaJT0gCCPUTGLx0mJ9zxmL+qBW+evOddeJIGQ2cEXJ3/g9h2fpB+/
QoJWwafFCX96YN/+rm1+fiQwKh7SSxPshY/lHkRDfxLeb+77lC/RC+paMz7C
ASRIQtzmZuVekP1PtiwJj/OZm3sHhM164ddyR6OKcBKonW34OWrbC00qUoey
I0kwYWHz+adLL2QYfjd9FkXC8aYWVl7qhRC7MMuoaBJEbrqUmn6jFxy99U/c
eEACS4mZ2OjQXthzb+KkewwJZOfC7lx92Av5Gaz+u7EkoDMlLtsn9UJ/KaXM
M44E71tfOEJ6Lyz7Roo3xXH2K//v6ObcXtDt+XFpWzwJ4G2RzgpCL3gMNZtI
JJCgPeD7mt6WXqhbUTvX/pgEsyp/Wv3meiHAOtvVIQnni+TdaidBMmS5vdm7
9xkJHvxZ9eGgJBl+XnstLf8cx6dNLXrVZjLseBrfSHtBApPbDgdzrcjA6Q3Y
6ZlMAkkP9s4np8ggPXJtuWkKCUhWPoq3Pchw8J8XWz0V5+t/0f+OBJIhRcHt
+VgaCfaskh7RjCJD8w6na+3pJFiYT+2VSSDDHyM7i+I3OP7thDJWFhnXIab8
/hkkOFVlnNlURIYIP2PyyUwSqGS1PSmqJkPhXfion0WC0Xin8OffyEBN0o3b
8I4EZYFcn5AOMiw5tEnhIj4eev66y3kKGcL9n/yRxP83Pb7E8tggGUSyhbo+
vsXzR1V22wa+PpBcwX3Ij/uTJfV2vcCyPkgwdPDMwv2/+k9TbGhNH8h4fz9o
ge9PoOPwQNnWPpD/8eHPs1c4/kH+qTZ2fbDtmY/nDjyek54CcfqufVDQyDjY
lUiCKpu4O0qX+2D3vI1C4BMcb7Usx7HQPth7WrurAcfL72fXmge5fWCqMn/w
zEMS7KtxE/Al9EGr7WUFIZwfojm88ZOf+8A6qv9PDs6fl8HCxP96+sBhqKZw
+i4J3C8mVIuz+qBPbmfMK5x/mrYbP0zx+sDFIt3zQAReP/blvCDP9QEraLUx
N4wEdVu1o+sE++F8QYRCbCgJnLfbpP+S6Icq9xsc0xASzOy8WrlxXT9sMenk
6uB8j98T89N8Uz/kp01eZuD5oq6XM3pLox+0F1aNP/QmQb1Bg3C2Tj9UO+7w
07mA58d+lkK3UT8Ylx2bo7uR4PHhjce17Prh+NUH/Dp2uL/nhOXeZvXDvRNB
yg/w+sTnuWn3j8J+kCx8lbkHr1/PL+23WFLVD0/FK7fSZEjQ4nsr2KmtH95+
ndm1ZxkJtEN5zDVz/VCj63OQ+qsb2iOW/zsgQIFDiXEN0UPdcOneFhkfcQq0
jOea7Wbh9TXO7UiLEgXIOUM20d3doPc42HVenQJuImIkLbwudzx9dUtNmwKD
Z1WdKN+7wetF+WP7/RS4+smEdu9LN4gkd32INKXAzIZz57RQN6SlTdYXn6BA
UEAYt7+sG/ZmrKTST1PAMzS55mheN3S+05iVvECBKnVnskxKN3h/MF0F1yiw
qktuhhnXDWIF57devkMB95BeqcKQbnhTHHHwRRQFKrY+3x7k0w2kCuQ3/ZIC
rsEyHrI23ZDdnQnnRykg8GO5cWhPFxiTP9snzlDALvD7mWPfu2CMN6bjuoQK
2f9F35ar7ILoiRXWccuocPy2cPHHV11QPXcofHgjFd6q8CsPnemC+7c745aq
UGG2tcawzKoL7P+dfbVOjQoWAUEOEUZdML4k9ONhLSpMt8w/2ripC1CYZN1p
XSqY3qz4MLy6Cx4IJrf6GVIhRTngG0GwCzaLVnLeHKbCYf9pPpuBThj/qnEh
zZwKxbWXXC93d0J1ZOpQsjUVdG8NPDJp6IRo49WXX9lRYevj37fD8zvBVuDu
6PNTVJD/IHi+NqkTlOpmryS5UEGyfvVxvpBOGA259OuJOxX4KcqGhp6dELFg
NRnnTYVhSaPV5bqdwJwaWLidRIXw7vJL73B9kV/sEBLwigo3fn2zG3D7Cbd9
m/n906jgKUYyUjH7Cat/FQr6vsf3u3d6barcTzgwHLjMs4YKcim7viRVdUAa
XUrmBAf33+P9hqiFH+CVGplkPUKFzOAKkfqBH6B3ZlbWcpwKz541Tiwl/oD2
vn4503kqhGRGFPhl/IAlpHdK+yVp8E67yT3zJK5rWkFjmw4NftudbBOpaQf1
mMI8NQMaLPzJ/tfxvh1mzFR2qBrRQCRlfmvqs3aIbRTTUjajgTwnOVLXtx2q
v/zUlT1DAxN/tv6Fze0QHX64QvocDY7J6XjukWoH2wMVe1dfoIF9zb1Efr52
GK1JAYlrNLggsu3Xc1IbbKi8aCwYRYOEJN+M77h+Wy07N+f1kAYdBVv8pm+0
wXK/qPzueBpIfacYK7u14TyTdjdKooEV88maYxZtML/97fr3r2iwVuIi6ciB
Nph8sKttTToNpvYvMwjSb4Mh7qfIoCx8vWs5KcW72qAnvf+XdRENHvUMeWzc
1AbtfJczK8to4LXiwXcbuTb45vTn1OZqGpjvU98evboNymTWNsw20EA049Lv
SYE2SLxv9TqlnwahV0fCG1lEiOFQjosxaXD6zUPOQh8RIoy9RK9xaWDYtc1s
dycRri1EXzs0SYM/e72kUuqJYO37+eioKB18RXip1zOJcJRozWcvQQcr/VjB
nGQi7N9GK/m0mg6aXts9qU+JoDnwV+HJRjoM/7iiaRpFBNWDDzr/baLDNyHJ
x8HBRNiYuu7BeTU6ZOnmT5f4E0H6X9b+9u10uHvJ0nHImwjijtrT+rvpcC55
rFrBkwhCZV/ev9Wjg1F7nJKtCxH+rrZxldhHB0Ka4jqTU0SYvEqXuWlMB92t
80XyDkQYbvFuph/Fx4s6zaftiMDcuhBqZomP7y0YaD1BhN6ohzofT9Ch/PP9
kKzjRGg0yk6/dwb7576Sk8eIUJusc3LiHB30nNcf22lOBMJ8vbjTRTpUsKc4
YqZEyPrIuKnphz2dLVdpQoS7ahssu+7ToVJ2Tbi8IRHu3M0R3P+IDnvTeBum
9Yngx9StyE7Ex9UaS1t1ieD+2nbznVRs/aCh4N1EOLgqbn5TKR2qnLjWDHUi
7L0iXxhTSQdDdt1whRoRdjW995j5RIdqr9eRj1WJoBT5rf17Ex1Q0PFy401E
WMewi9rdTgcQ0bCRVyLCyn1sg+QufDxOZPT3RiKIvLo2IdKHj8sy7rZuIALf
HP87HzodBq0u1P5dT4QzDNJE0AAdArLNoy5j1zTlGz4cpsOypTss+tYRITjZ
uSPzNx22FU+TKmWJsHCwfIEsxgBv6Yhft2SI8C/2qu2hXQyY7klWmFtFBOeb
h1NtdBgQtSuM7Yld7bpx2MWAAWsfuL8nrcTjs7s55PYhBugZbNMhSOJ49qh+
KHBkQGBy+TF/cSKc+rwwXX2GAeIzr9ZwVhCh8kOnUdM5BiRbhvTaYd8ODu9m
X2HApyWHPbSXE4Hs6ag8eY0BVg5bt2Uuw+N3fKfXkgAG0AvFJ6SxX+4VJYgH
McB32XhZpBgR5lWoS+XCGSBw9ued36K4PYlSiy33GPDuLMqtwa6cefhsTwwD
3mveCEjFlqOfZR5IYEDevIZJKPbt7/rbrZIYUNjAXumG/cf7qUPkewagmS/7
2CJEmKuwKBjrYADJPvz1sDARHN6qzP8lMYC8ae+FZuzymHmTZRQGUMYmdudi
33TJJqtwGcCOcmu+gj0jJCTi+JcBE2VG8+NCRLAfI1uf52fC7/C5rz+wy0hF
r64LM2HWsjChGNv/vcuuuJVM4OMqbvXD7n6ic+eVNBOWlpB+22LrBEl8y17P
BKGQR7Xa2Enn2VJlCkwQNT8SsxZ72qrK+YsKE5bLLnGYFSRCKCmvz3ArE9q5
mskcbHGXtFNlmkxwD5Op4GE/5zzu3bGHCXNy/zp/Y2/2vuuQo8+EmI/M8b/Y
hdM3SZv2M0HJ8ru4IL6+QdAl+9cmTCjlFqgtx7aJsbJ9ZMUEilyQ6zps6pqD
P8XsmOD78dwdReyLr/bYhJ9igrCl2XNV7ND3661veDBhe5hs+x7s/EaWuVMg
E4K5RfuPY++17m7qDGXC6rDnTg7YX0mNppZRTMiSC7npgt3PyTtyIIEJxGMW
BVewlwsHGG95xwTFjxyFB9ieB8QNpjqYIBtfzKzHnmzkq/TqYYK+YbNxK3aw
9YQeh8IEp0FWRtfi+Ll06/QOMiHVSMaTg10flKb1iY8FahM3R0Rx/KyFnxTp
CbHALDneYhV2X8zdncXLWOBlmpO3Dnvy1SXNTGkWFKaTr27FVqrco/5QnQX6
NvDbDDv3wJYcoZ0scOKztzuBrft9vVqwNguC3nuXOWFb9vCp+hqxoE4gLcAL
m+wykTF8iAWs/PJeP2wPLkvF3ZwFwk4/9gZh35lpVD5pzwLTEoGFWGyx4Kq0
difcH5cNZ5KwnwjnK5q5sSBuxZ5PKdgKsWkpX87j/hEslN5hv5d+shG8WNBx
ziOsAFvn9d3XZb4sUDco1yjB/qwSsGHnTdz+4IUdi7b8cOllzh0WvEpar7Xo
Xq3T61XCWXDCpGnPot1nd0tE3GMB0d1bd9FjVcuXsmJw/+6u3rtogUPlg2+e
sWB/w6n9i9Y4uaZ8Ux5u7+iI6aLLNgx/CC9mQcaFRxaLNqLXpjIJLFC8v9tq
0XYXve+9+cwCmaZA20UHB36339TDAn4LcZdFixmlmYVTWHDbq9Bt0U+Ebu5j
MlkwHWPrvujs2M2qb3gsGGl9fXHRWjZ/1wtMseD8mJHXoqvXdkicnWMBXXLA
e9E/UkOmlQXZ0G213W/Rzu72Q2FibDju88N/0Ry17RSGBBua42/cWrQPT/DH
gTVsOBm7SroYe76IXJ++jg0NdWdvZGNH+heVL1Vgg/bMx+7FeKw0iM51U2FD
hrqo3lPszfXaicqabAh78mE+DDs/Wjw6bDcbxr8tOAVg6x1jBTL02ODyzwp5
Yx/rjj+XbswGQ4/fIYv54z84oqXsyIZZHRDWxubP+6wadoYN5y8/Or8N+6Hv
CznGOTZ0pTK+KWOnzR8WSPdmQ7FY1ANJ7O/ib34oRbLhCpm4chDnv+2PgK+h
99nQL6nsS12cz0+tKuhxbDA3vt7RuTifFBbS0l6wQS1X9mkd9h3Wz0T+VDY8
o1+cIWCLZr+Pds1gg4hM9cl87MdeYXdqc9hww1SyIgNbfpeDj1IBG++3XOVe
YWdNa7qHfmSDTXFxYAL2zkphB3oFG5SHDz+JwK4M7jc3+sQGMNYKuo59yLhk
f1o9Gxxfb/Q8h+1tJ7lSicyGRv5mSRVs16ztz1VobBh2t5SQxj4xa6G8hc0G
8e8/Vghj6714uFtzjA3WCT1iXLy+CVLEHAwFBqBHmSPwYXE9dBdMd1AfAO7B
pbNa2J+vz2kl3B4A3scLu80W36eol61ODBkAkVhFW0PsdzK6h55HDoCiR7ef
JnYM4cbJ1LgBsJYxKVuNffLvZGDemwEouaGo37eUCKPhvPrvTQNwW6d7nxc2
7ae4ZWvbADyWjHU5g92xWYPU3jkAHzjGodbYhIZLQyTqAFCSiur2YL+XfXCt
jzUA094XmKrYry/k/KUODoDkEUXB9djhywclOJMDYDQbY7LAj+sVJ9FnQ7MD
4Nhm7PEL2zNXVYn3bwB8383fXXyf5NTCoZzxpRxon9YIJWFbWHpo/RbhgKGp
TyQRe39qZNXsCg7kvC6J/oqtNf7W5O8qDsiMz8RUY8s+ZtoLbOAALyno6Xts
nbCN0teUOLBUiklKw7b1cfjB+I8Dax8elnuGHW9JNK/byYH9IStTI7CXr6g0
Cj3MgQTP9GxnbLX53wu/zDmQxRAescE+PLSjyuU4B9dTl7abYkd8y9Te78wB
ttXuYm3sfxEJ6nzXOKCj97VKElvuegv3yk0OmBdv5RPG1j8rmkm5wwEXjTij
v0vwfDEKUkT3OBCtdPIrFztxR3m/RiwHkl9WiVKxixWmXrx+zIFiaSWzTux2
Cc2T4s850BAXGdOE/evfBek7yRzoExsi1mJLjr79MfKGAx+SjJeWY2v0UeOc
sjmQyng8UYxt1rTeojmPA080mIw87AsVtssMSjhw7+aujmxs5g0jvvlGDq4r
vJ8kYvN7BFZdJHLAYgxFPMJWsC0L6P3JASN9Cb8H2E5aGlPlVA5sbftgG4rd
OSY7ePM3B/7MD8p4YU9SbDK5fzgwdkhPxBNbqjX27MklXGDG35txW7K4ngtS
dJZzoUlVlXQS+5vnrx/Tilx4ZXPuuTE2x179kcd/XHiUXBy9D1vosIdFlzoX
IgaX3tLHNtrc1/BRmwuXg9Mcd2CfWbM2crMBF1y+/zJVxw4SOH4g0YgLttL7
9/6H/XriIZ/QYS5MHRY6rrT4/g+9oeq6ORdUYpXebMTuaVt6i2XNhRM/Dafk
Ft+XqjHUOWGP21vvaLIOe3dycaGWGxfYmQmc1di5jimZE/5cyKgR2CaGrdWl
PCd0hwuk8qocYewK60yzdWFcWF7ipyaI3XAk99e+h1y4+o7zHx82Q7tSPyaV
CwbxTUq/+XA8iiAmNYML3g8iUiewxzTqqMU5XEiPNFT4hf1PpTGit4QLorfy
Nwxjr13d3arayIWfbo/X0rFfxzoq7W3lgrCz+VMKtsoyyrVjHVzQsxeS7sPe
yc+W9evnQoqZv1Q3NiHQ89I9Bhd+mOyI/7n4/tjscPVLDheE9g9K/sCuv+a9
Mn+EC9fya8lEbPOxCbe6cS4Ytq2QbMXuuHjjY+c0bm/c/kAztsPAnMjgPBfa
Vr3x+459vn9JrqTwIJy10ev7ih3aJDHjtH4Qorvcs2uwRQ4nHL2qMAg2MwV9
1dixddKvwlUGYYPsX8kq7JflG4xytg9CvkPCDQJ2adbWBzMHBqGzDx0sxB4O
P6SQcGkQlJhrKenYdgZBhxuqBsHgMWVtFHaB82UlvfkhoEmK66zHdi0Z25Cy
ZBiOuviekMVevfyarJDwMBQXdPvIYPsRAiTbVw5DpHX6BylsvdVR/zz/Gwb1
xzrKy7Frv6X1PLMehhGNerm5hVbo0OqOn80aho8G/VtrsCPuO8aczh0GZcvN
uZXYe+j9974UDUOsq5cmATsplhX8qHoYzt/9p1WI7TQ47rWlYxhk2+QN32Cz
k1eYnlwYhltnT1tGYc+IHVhKODECSe2sEGvsVaPij2sdRiBHU9j7GPbWtp5N
TadHoCpG1dkM2/mpjwnFcwQYRy/qmWDXKafdE7wzAtvrxsZ1sWP2LpG0zhiB
+qI/borYKl5Ibuj3CAh7KtJ//2sFQ6v7Hyb/jMDShyt8J7HttewM//GNwr/8
2aXj2NFzo6dXLhuFqZk2lRHssUj5dO2No8CICvVkYFcmB24JPzQK1VmMsdbF
78/a9PdsSBqF8emh9GxsMf1lnypfjYL6+OD6LOxPb3pMT6WPgscwN+Ettqb/
TZcXuaNApg6EpWCLbyx9IPtlFL5+Y7glYtdHRcoQGkeB/zO9N2Hx+7rxE2n2
xFEwqKYdf4Q9/GWy9GnvKBQWUg48wP52aSdjzfgovHrRqxyKHdy5xKtkehTv
Y3peBGHr7Gubsfk7ClJxJKlAbN67lLBJfh5YRHffD8DOkPIWfyzCg6jwrqX+
2M6B8GyXOA9kUrWa/bDXDIhv+iHFg8lHUpsW3WTZn+sjy4O20PGA69jh5R90
V23kwQfftrZri98Hbgr8XLCJB9Fn81UXPfHQ7JiVGg88TsQG+WK7ugydjdvN
AwVt820+i98DimyJEzfjQcJcQ9QV7JmrM+tyrXjgPZRJ8cLO6/361tyOB2bk
yD2Lls9zr3jgygOh6oPMS9jzJ96wxW7y4GZIDVzALka+V7Pv8OCET3KiJ/bF
LQfmj4TzYKfbnZHz2D3ztJX3YnkwdHDvCw/sR+4FL1Wf8KBh9/pxd+zDxOD/
Gp7z4O3mucOL5tOzLPRI4UGoDCn5HHZp+kYD4QweOIuU/T6L7bWC9zUjhwf6
s4nmi958o9rapIAHj6bPMd2w+6gP+1gfeSDr05qz6MdHnc5HVPIgbVjHd9Fm
xeoTm2p5oOaRprfopfLzgZ+/8qCQtox/0T6/nics/cGDus7+OFdsNccL8und
PDC1Omy/aNpn3XdG/Tz48b1g46Itk7qrQ7g8YNaE57pgi/BnHVHk8eCS/uj1
RaOLNzpqJnE8S+wMFu330+T0mTke3Nb8JLDo//+eFARz1P7ve9L/ASVS1Yk=

            "]]},
          Annotation[#, "Charting`Private`Tag$23550#3"]& ], 
         TagBox[
          {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
            "]]},
          Annotation[#, "Charting`Private`Tag$23550#4"]& ]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"\\!\\(\\*SubscriptBox[\\(u\\), \\(m\\)]\\)(x,t)   [SW - red, N1 - \
green, N2 - blue, N3 - purple]\"", TraditionalForm],
      PlotRange->{{-1, 1}, {-0.05, 0.35}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]},
    {
     GraphicsBox[{{{}, {
         {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
          1.6], GeometricTransformationBox[InsetBox[
            StyleBox["\[FilledDiamond]",
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[1.6], 
               GrayLevel[0]]}], {0., 0.}, Automatic, Offset[
            7]], CompressedData["
1:eJxTTMoPSmVmYGDQAGJGIGYCYmMweL+f//K+nfurluyfNRME3u4XW9qSELp3
yX4GMHizP8/HP+IR49L9aWDwar+jm0OrssfS/WfPgMCL/StvMq89MGHpfoh5
z/e/OpVeKXdnKdS8p/t7FrHbsWkvg5r3ZP+b7NislrplUPMe7T+eNDvE5Noy
qHkP9h8M4xRrN14Olb+3n/sdu41Bwwqo+bf3v/X4Ojd+ygqoeTf2ez+LuBfK
vwKq/8r+SarFOu9XLYfaf3H/EfuclxdDlkPlz+w/ai5iF80OM//Y/jOzD2+9
dRjmvgP7tzA5h22vWga1b/P+5KsKZ97GLYOaN3P/JMd3Sj6BcL79jWSlpTdt
4Ort2/pkQx5Zwc2z3/rr1SoHXZh/j9mzzRWweiEE8+8Ze/UFnRsevoSF10X7
ma4a25qWwcL3iv2dz38yF1sthfnX/rfSQt3nQUtg4WFvdIbz1pMPC2HhZT+R
K5nbkW8RLDztPy64WZrvuggW3vbmy9R1PjYsgsWHvfyC30VpuxfB4st+Vq3c
YpvPi2Dxaf/D4nLLW/XFsPi2f3n9mv//yMWw9GAva73iSGnPYlh6sXdzPrY4
5NBiWHqyD9u1+1zbn8VQ897bHxN/+9HJasl+AHc7RyQ=
           "]]}, {
          {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
           1.6]}, {}}, {
          {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
           1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJxF1H0sFHAYB/DjMjp5XTTlyOu8zVCdRcYUc3LGjdHEOS01L6lbujOb0LWu
prGwHam1nZNLu0slO47juJ0ak87LcTruuMudzpEUZlNten7P9t13n7++/z0e
eSXkq+YYDIb0N/86ONrZsL9vEmMOrmTHi7Wzi/zmXajv5hZymB8pT7eKHO7A
nBudQY5Z2vjUJEAmPxjrOEVBpo8zi6/1r4EnJ60Ng1QjGD9QcjTc9Tu4q3DY
wu6rAZxbE7o+W60Hbz8pZ4mjV8AcW5ULW60DtySG0uQPteDqIirDn7gMLse+
otOMGjC1ctx7ul0NbuzTslsKFsE9C35HXnuqwF72MbFpz5XgtwGsAs2SArwg
7TxJIEyDtUGNYeIPcrBDBY8QbDYBDiKYgribo+B7F4yfhQwZ2CmNX3fpmATt
/ZLajXj3gLlK7WM9kw/OTnV9r7zSABbiyqckpfXR/31GY+ZWlSkAe6337kRI
hGAiZ3YsOVMCjiM5Yre6ZOBaykxlSPcoWJaMt0lxnAAbPZwqvjTLwaW3A6m1
ztPgmXl7cv6IApxbdu6bZZISPBQY/mjIQgX2PSxaaU1YBONFhXEWLDUYs2vO
o2k04N+pfTlSn2Ww8jTlhA9TC76ZYe/gOa8DuzQsZx7Cr4D5WS9ebjL04Iyo
uwkjfQZwZ06xZ8TeKngbdx4rTDeCyRORBDx7DYyLtB4UPUMebJ27eJmDHMIo
oz7lI9u6d9e4SJE/FoUtOf1AjrHyr7NNMqH9W9vH+anIAqWMS8pAdhPk99bk
Ie+lt+pwZcjdHPcoyzbkGzYmWVsHsi+9nxzfidyQmH39vgiZttFcj5UjB2QV
uHEUyOrhs7xYFXIKW9FfpUe2Mm8nepiQxYX0yYGfyHem4im5u8gH/wv8B+0M
Suw=
            "]]},
          Annotation[#, "Charting`Private`Tag$23833#1"]& ], 
         TagBox[
          {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
feJdaAkTGWbVfVfH1qXXvmKUMhGl4O/xQ9gWVz0fvq5josgq72ld7KDAT5Y7
e5lIud9axxR7jW76mdAh3J/hp08tsRN4buswGLg/461sW+ycx7vkXk8zUeei
7pNL2Gqmy9u45plIhzOQ6YZdJdYh5LzERNl85IMe2F9f3f8lw81CAaJ76b7Y
9i6W4yFrWIgpcUnjDjZbft/QsBALGe56GXkP23ua++uxzSwk1zc4Foz9p7i/
PmMrC2XX3aYEYYf7FZetlmKhPfmbwu9ir9eOzHeSxdf/KzgfgL2r/kCijDIL
5VxhTt3CLowUjAxRZyF506CKm9iHzjEDhw/h69rbIm9gn+uOu5Shz0J5wsay
17H9xibVZGxY6B2pwsYFe1VBnVzIBRZSTLPY44wdfeO5+PAlFsp/+P3nRez0
Pye5MjyxbeXi7LA/Cb7+Kh3OQkWrnjauxNP8q39D8CMWUplQSjTBpv5nXE6P
xde/fXQywp6T+pee/pyFCFn//p7Gvsv8lrjqFQupxiU3n8Lmz8mLdHyDr99R
Tz6B/dQj5G5tLgupXWq7rI8tsd/aW7qIhUoMr6ofw876pewSTMLXNXlWH8VW
reC1ppez0Kbm3WOHsSuCBs/q1rBQ4MJWy5X5cUKfeDS9noVYOwXrlbDb+aPU
VzXj8TDmVJPDtm113OP4hYUogXOvdmB7Wgivl+5nocjO3sBN2I5Z+5JlaSz0
kdVguzJ/zRYNZfawWIj/V8lhvpV4P49WV55hoQjRx4u/8frgHlpjfYRrBIVb
Hrs5jJ3swp1hrTCCQntz3QnYdTeX1OIDRtCr4TtFp7FJ9VuqEu+PIHvhsi49
7GzRgyeSw0eQuPbCsjZ2TOktq1exIygx0cdAGdtqeS6w4PUIij51bXgT9lTo
dP2n5hF0u8B+80o+2vKUYcm1nY1cvmwn31r5+/gQSREfaTaaeNz92gvb3Nv6
6/BuNvIyjI+7ih1n1Hb2vSobBXzi83BYyacCFbrBJ9ko7sOPnSew/4bFK3D4
sFFV6cc4EWzGLV2OP01sZG3660IVzt+rLgdWXm1jI56q1qhSbClzin/fNzYq
2v2GUoJtp6Y0X0ZlI/7fpsK52J0zW8Zu/2QjyisCrOT/j26zX3/tGEWbpq9J
eGHn26S9/eE3ioxqb2zaia3WJbPEc3cUXXihliSJXW7y9szWkFHk5Te/bRt2
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
mHjCJg==
            "]]},
          Annotation[#, "Charting`Private`Tag$23833#2"]& ], 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
JgdX/f/3gdHO/CP/uw/8f7vEvfA=
            "]]},
          Annotation[#, "Charting`Private`Tag$23833#3"]& ], 
         TagBox[
          {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
zXKIrvzahfP/L+D//18BsbrR+X//r+B/vMkyvA==
            "]]},
          Annotation[#, "Charting`Private`Tag$23833#4"]& ]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, -0.03},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"s(x,t)   [SW - red, N1 - green, N2 - blue, N3 - purple]\"", 
        TraditionalForm],
      PlotRange->{{-1, 1}, {-0.06, -0.03}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{{}, {
         {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
          1.6], GeometricTransformationBox[InsetBox[
            StyleBox["\[FilledDiamond]",
             StripOnInput->False,
             GraphicsBoxOptions->{DefaultBaseStyle->Directive[
               PointSize[0.012833333333333334`], 
               AbsoluteThickness[1.6], 
               GrayLevel[0]]}], {0., 0.}, Automatic, Offset[
            10]], CompressedData["
1:eJxTTMoPSmVmYGDQAGJGIGYCYmMweL/f/NAiJT/1yv2zZoLA2/1Cek8E73hU
7mcAgzf7n3z5WnO2qHJ/Ghi82v8sagtD7urK/WfPgMCL/YFLfluy/qzcDzHv
+X7Hz5blu+OqoOY93W9UGl528EEV1Lwn+5tNzy1TbqiGmvdo/92zwbJFxjVQ
8x7sv/iCLymdqxYqf2//zpySc/6FNVDzb+//2LBJM7yiHGrejf3iyQmyx/lL
ofqv7PcuZdQ3zimB2n9x/wdTluOpd0qg8mf2a1zOKDJkK4Oaf2z/74iD+c49
MPMO7P+/Yal7sC3MP5v33+Hj7Q68DvPPzP2N0eWfQ9prYHz71s3Rp1Ms6mDq
7Zccf5/7a3M9zDx7M8W1hi9aGmD22XM1xjw6wdwIc4+9w/739/dYNMLcax/G
P6Pd52cDzD/2S1ZxLnrH3ADzr/1kyXztvWbVsPCw/3nL2JvpSgksvOyjN2kd
8nWDhccDe6tXL3ZI3SyFhbd9NPfmC+cyy2DxYZ+x3k7u17syWHzZL90//VBz
WjksPu3z3S10Ky6Ww+LbPtN62btTehWw9GB/ueWtenJNBSy92AdITMk02VkB
S0/2D77O3Gz3tAJq3nt7qdxQoZvslfsBUQs9ww==
           "]]}, {
          {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
           1.6]}, {}}, {
          {GrayLevel[0], PointSize[0.012833333333333334`], AbsoluteThickness[
           1.6]}, {}}}, {{}, {}}}, {{{}, {}, 
         TagBox[
          {RGBColor[1, 0, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJxF1H0sFHAYB/DjMjp5XTTlyOu8zVCdRcYUc3LGjdHEOS01L6lbujOb0LWu
prGwHam1nZNLu0slO47juJ0ak87LcTruuMudzpEUZlNten7P9t13n7++/z0e
eSXkq+YYDIb0N/86ONrZsL9vEmMOrmTHi7Wzi/zmXajv5hZymB8pT7eKHO7A
nBudQY5Z2vjUJEAmPxjrOEVBpo8zi6/1r4EnJ60Ng1QjGD9QcjTc9Tu4q3DY
wu6rAZxbE7o+W60Hbz8pZ4mjV8AcW5ULW60DtySG0uQPteDqIirDn7gMLse+
otOMGjC1ctx7ul0NbuzTslsKFsE9C35HXnuqwF72MbFpz5XgtwGsAs2SArwg
7TxJIEyDtUGNYeIPcrBDBY8QbDYBDiKYgribo+B7F4yfhQwZ2CmNX3fpmATt
/ZLajXj3gLlK7WM9kw/OTnV9r7zSABbiyqckpfXR/31GY+ZWlSkAe6337kRI
hGAiZ3YsOVMCjiM5Yre6ZOBaykxlSPcoWJaMt0lxnAAbPZwqvjTLwaW3A6m1
ztPgmXl7cv6IApxbdu6bZZISPBQY/mjIQgX2PSxaaU1YBONFhXEWLDUYs2vO
o2k04N+pfTlSn2Ww8jTlhA9TC76ZYe/gOa8DuzQsZx7Cr4D5WS9ebjL04Iyo
uwkjfQZwZ06xZ8TeKngbdx4rTDeCyRORBDx7DYyLtB4UPUMebJ27eJmDHMIo
oz7lI9u6d9e4SJE/FoUtOf1AjrHyr7NNMqH9W9vH+anIAqWMS8pAdhPk99bk
Ie+lt+pwZcjdHPcoyzbkGzYmWVsHsi+9nxzfidyQmH39vgiZttFcj5UjB2QV
uHEUyOrhs7xYFXIKW9FfpUe2Mm8nepiQxYX0yYGfyHem4im5u8gH/wv8B+0M
Suw=
            "]]},
          Annotation[#, "Charting`Private`Tag$24290#1"]& ], 
         TagBox[
          {RGBColor[0, 1, 0], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1:eJxF1H0sFHAYB/DjMjp5XTTlyOu8zVCdRcYUc3LGjdHEOS01L6lbujOb0LWu
prGwHam1nZNLu0slO47juJ0ak87LcTruuMudzpEUZlNten7P9t13n7++/z0e
eSXkq+YYDIb0N/86ONrZsL9vEmMOrmTHi7Wzi/zmXajv5hZymB8pT7eKHO7A
nBudQY5Z2vjUJEAmPxjrOEVBpo8zi6/1r4EnJ60Ng1QjGD9QcjTc9Tu4q3DY
wu6rAZxbE7o+W60Hbz8pZ4mjV8AcW5ULW60DtySG0uQPteDqIirDn7gMLse+
otOMGjC1ctx7ul0NbuzTslsKFsE9C35HXnuqwF72MbFpz5XgtwGsAs2SArwg
7TxJIEyDtUGNYeIPcrBDBY8QbDYBDiKYgribo+B7F4yfhQwZ2CmNX3fpmATt
/ZLajXj3gLlK7WM9kw/OTnV9r7zSABbiyqckpfXR/31GY+ZWlSkAe6337kRI
hGAiZ3YsOVMCjiM5Yre6ZOBaykxlSPcoWJaMt0lxnAAbPZwqvjTLwaW3A6m1
ztPgmXl7cv6IApxbdu6bZZISPBQY/mjIQgX2PSxaaU1YBONFhXEWLDUYs2vO
o2k04N+pfTlSn2Ww8jTlhA9TC76ZYe/gOa8DuzQsZx7Cr4D5WS9ebjL04Iyo
uwkjfQZwZ06xZ8TeKngbdx4rTDeCyRORBDx7DYyLtB4UPUMebJ27eJmDHMIo
oz7lI9u6d9e4SJE/FoUtOf1AjrHyr7NNMqH9W9vH+anIAqWMS8pAdhPk99bk
Ie+lt+pwZcjdHPcoyzbkGzYmWVsHsi+9nxzfidyQmH39vgiZttFcj5UjB2QV
uHEUyOrhs7xYFXIKW9FfpUe2Mm8nepiQxYX0yYGfyHem4im5u8gH/wv8B+0M
Suw=
            "]]},
          Annotation[#, "Charting`Private`Tag$24290#2"]& ], 
         TagBox[
          {RGBColor[0, 0, 1], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
HzKzeas=
            "]]},
          Annotation[#, "Charting`Private`Tag$24290#3"]& ], 
         TagBox[
          {RGBColor[0.5, 0, 0.5], AbsoluteThickness[1.6], Opacity[1.], 
           LineBox[CompressedData["
1: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
+iJIfvprrzu+rPz//3cH8TiTiQNJK8r/B71uEYY=
            "]]},
          Annotation[#, "Charting`Private`Tag$24290#4"]& ]}, {}}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{None, None}, {None, None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->400,
      Method->{
       "OptimizePlotMarkers" -> True, 
        "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            (Identity[#]& )[
             Part[#, 1]], 
            (Identity[#]& )[
             Part[#, 2]]}& )}},
      PlotLabel->FormBox[
       "\"\[Kappa](x,t)   [SW - red, N1 - green, N2 - blue, N3 - purple]\"", 
        TraditionalForm],
      PlotRange->{{-1, 1}, {-0.015, 0.}},
      PlotRangeClipping->True,
      PlotRangePadding->{{0, 0}, {0, 0}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.788098368469534*^9},
 CellLabel->
  "Out[102]=",ExpressionUUID->"1ef02bc3-0100-49be-b497-8de5ba0cf999"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Testing", "Section",
 CellChangeTimes->{{3.791904644394514*^9, 
  3.791904648009741*^9}},ExpressionUUID->"2c7aab6d-3e42-4ab4-8590-\
0efc8a98ef74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"kinematic", " ", "viscosity"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"R", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"slip", " ", "length"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Chi]", "=", "0.1"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x1", "=", 
     RowBox[{"-", "1.0"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"x2", "=", "1.0"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xOffset", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"h0", "[", "x_", "]"}], ":=", "1"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"h0", "[", "x_", "]"}], "=", 
     RowBox[{"1", "+", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"3", 
         RowBox[{"Cos", "[", 
          RowBox[{"\[Pi]", " ", 
           RowBox[{"(", 
            RowBox[{"x", "+", "xOffset"}], ")"}]}], "]"}]}], "-", "4"}], 
       "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"u0", "[", "x_", "]"}], "=", "0.25"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"s0", "[", "x_", "]"}], "=", 
     RowBox[{"-", "0.25"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Kappa]0", "[", "x_", "]"}], "=", "0.0"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Gamma]0", "[", "x_", "]"}], "=", "0.0"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"nx", "=", "10"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tEnd", "=", "0.2"}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"modeltag", "=", "\"\<N = 1\>\""}], ";"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{
     RowBox[{"MaxSpeed", "[", 
      RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "=", 
          RowBox[{
           SuperscriptBox["h", 
            RowBox[{"-", "1"}]], "hu"}]}], ",", 
         RowBox[{"s", "=", 
          RowBox[{"3", 
           SuperscriptBox["h", 
            RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"Abs", "[", "u", "]"}], "+", 
        SqrtBox[
         RowBox[{"h", "+", 
          SuperscriptBox["s", "2"]}]]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Flux", "[", 
      RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "=", 
          RowBox[{
           SuperscriptBox["h", 
            RowBox[{"-", "1"}]], "hu"}]}], ",", 
         RowBox[{"s", "=", 
          RowBox[{"3", 
           SuperscriptBox["h", 
            RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"h", " ", "u"}], ",", 
         RowBox[{
          RowBox[{"h", " ", 
           SuperscriptBox["u", "2"]}], "+", 
          RowBox[{
           FractionBox["1", "3"], "h", " ", 
           SuperscriptBox["s", "2"]}], "+", 
          RowBox[{
           FractionBox["1", "2"], 
           SuperscriptBox["h", "2"]}]}], ",", 
         RowBox[{
          FractionBox["2", "3"], "h", " ", "s", " ", "u"}]}], "}"}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"P", "[", 
      RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "=", 
          RowBox[{
           SuperscriptBox["h", 
            RowBox[{"-", "1"}]], "hu"}]}], ",", 
         RowBox[{"s", "=", 
          RowBox[{"3", 
           SuperscriptBox["h", 
            RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
       RowBox[{
        FractionBox["R", "\[Chi]"], 
        RowBox[{"{", 
         RowBox[{"0", ",", 
          RowBox[{"u", "+", "s"}], ",", 
          RowBox[{"u", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"4", 
               FractionBox["\[Chi]", "h"]}]}], ")"}], "s"}]}]}], "}"}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"A0", "[", 
      RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"u", "=", 
          RowBox[{
           SuperscriptBox["h", 
            RowBox[{"-", "1"}]], "hu"}]}], ",", 
         RowBox[{"s", "=", 
          RowBox[{"3", 
           SuperscriptBox["h", 
            RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", 
            RowBox[{
             FractionBox["1", "3"], "u"}]}], "}"}]}], "}"}], ".", 
        RowBox[{"Diag", "[", 
         RowBox[{"{", 
          RowBox[{"1", ",", "1", ",", "3"}], "}"}], "]"}]}]}], "]"}]}], ";"}],
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"init", "[", "x_", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"h0", "[", "x", "]"}], ",", 
       RowBox[{
        RowBox[{"h0", "[", "x", "]"}], 
        RowBox[{"u0", "[", "x", "]"}]}], ",", 
       RowBox[{
        FractionBox["1", "3"], 
        RowBox[{"h0", "[", "x", "]"}], 
        RowBox[{"s0", "[", "x", "]"}]}]}], "}"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.7919046613859262`*^9, 3.791904687032042*^9}, {
  3.791904740221686*^9, 3.7919047560284224`*^9}, {3.791904818201626*^9, 
  3.79190483443261*^9}, {3.7919050310066853`*^9, 3.791905036118339*^9}, {
  3.7919086475498743`*^9, 3.791908653163167*^9}, {3.7919089126672773`*^9, 
  3.791908916274671*^9}},
 CellLabel->
  "In[122]:=",ExpressionUUID->"ed5ed749-1005-4959-9ba8-f387cb5c044e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dx", "=", 
    FractionBox[
     RowBox[{"x2", "-", "x1"}], "nx"]}], ";", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xs", "[", "i_", "]"}], "=", 
    RowBox[{"x1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "-", "0.5"}], ")"}], "dx"}]}]}], ";", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"pts", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"xs", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nx"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uraw", "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"init", "[", 
       RowBox[{"xs", "[", "i", "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nx"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"U", " ", "=", " ", "Uraw"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cMax", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", 
   RowBox[{"0.1", "dx"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"step", "=", "0"}], ";"}]}], "Input",
 CellChangeTimes->{{3.791905078804078*^9, 3.79190508197141*^9}, {
  3.791910916326865*^9, 3.7919109238930807`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"c2bbc435-6f54-48b3-8522-a51b6a14d2df"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Residuum", "[", "Uraw", "]"}]], "Input",
 CellChangeTimes->{{3.7919050969959507`*^9, 3.791905116049596*^9}, {
  3.791905377027896*^9, 3.791905383411826*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"116b4ad6-e05c-4712-91b2-7b94de4ddd76"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.025878609625909904`", ",", 
     RowBox[{"-", "0.17828165665440904`"}], ",", 
     RowBox[{"-", "0.5370650419840906`"}], ",", "0.38811210795996837`", ",", 
     "0.23735348618936697`", ",", "0.044356046631952306`", ",", 
     "0.006383458868659264`", ",", "0.0016099006129433047`", ",", 
     "0.0016501482337356876`", ",", "0.010002940515963787`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.45181873934713124`"}], ",", 
     RowBox[{"-", "1.4463528793973879`"}], ",", 
     RowBox[{"-", "0.13426626049602208`"}], ",", "1.4988104922237777`", ",", 
     "0.5176267633009496`", ",", "0.08196671894055485`", ",", 
     "0.011280074797923034`", ",", "0.0004024751532361037`", ",", 
     RowBox[{"-", "0.009271673022324678`"}], ",", 
     RowBox[{"-", "0.06837697215357541`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.0010637207053349612`", ",", "0.02170680629753492`", ",", 
     "0.044755420165340856`", ",", 
     RowBox[{"-", "0.03919267723966473`"}], ",", 
     RowBox[{"-", "0.022999728689941518`"}], ",", 
     RowBox[{"-", "0.004321245794475757`"}], ",", 
     RowBox[{"-", "0.000628152206231837`"}], ",", 
     RowBox[{"-", "0.00013415838441187267`"}], ",", 
     RowBox[{"-", "0.000041315052301087174`"}], ",", 
     RowBox[{"-", "0.00020866980118394024`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.7919053842002783`*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"6f394ed7-88be-4f7f-bb62-d066488b1350"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Urecons", " ", "=", " ", 
   RowBox[{"Recon", "[", 
    RowBox[{"Uraw", ",", " ", "\"\<Periodic\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uright", "=", 
   RowBox[{"Urecons", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{";;", 
      RowBox[{"-", "2"}]}], ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Uleft", "=", 
   RowBox[{"Urecons", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"2", ";;"}], ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dU", "=", 
   RowBox[{
    RowBox[{"Uright", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "-", 
    RowBox[{"Uleft", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", 
      RowBox[{";;", 
       RowBox[{"-", "2"}]}]}], "\[RightDoubleBracket]"}]}]}], ";"}]}], "Input",\

 CellChangeTimes->{{3.7919054252423973`*^9, 3.791905460615798*^9}, {
  3.7919056751279793`*^9, 3.7919057069732103`*^9}},
 CellLabel->"In[76]:=",ExpressionUUID->"b465aa18-26ea-41b7-a70f-e5e84a01ce52"],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.791905118665711*^9, 3.7919051377131*^9}, {
  3.791905180672619*^9, 3.791905185486071*^9}, {3.7919052962663193`*^9, 
  3.791905359326866*^9}},ExpressionUUID->"f061c9d6-6501-477a-834f-\
94de148bdd0b"],

Cell[BoxData[
 GraphicsBox[{{}, {
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., -0.08719037164546287}, {2., -0.1006193797806795}, {
      3., -0.11398995343095353`}, {4., -0.1006193797806795}, {
      5., -0.08719037164546287}, {6., -0.08393732048464843}, {
      7., -0.08346810108313386}, {8., -0.08340932349712954}, {
      9., -0.08346810108313386}, {10., -0.08393732048464843}}]}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., -0.08171039961191733},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {-0.11398995343095353`, -0.08340932349712954}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.79190513835518*^9, 3.791905185913417*^9, {3.7919052982032433`*^9, 
   3.79190534367759*^9}},
 CellLabel->"Out[68]=",ExpressionUUID->"3fb4154d-2e54-4024-9171-e32e3f8c2f2f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Recon", "[", 
   RowBox[{"list_", ",", "opt_"}], "]"}], ":=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"q", ",", "\[IndentingNewLine]", 
      RowBox[{"Map", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Function", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"um", ",", "u", ",", "up"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", "u"}], "}"}]}], "]"}], "@@", "#"}], "&"}], ",",
         "\[IndentingNewLine]", 
        RowBox[{"Partition", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ArrayPad", "[", 
           RowBox[{"q", ",", "2", ",", "opt"}], "]"}], ",", "3", ",", "1"}], 
         "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
     "]"}], ",", "\[IndentingNewLine]", "list"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7919057372662783`*^9, 3.791905786215888*^9}, {
  3.7919059809177103`*^9, 3.7919059864848127`*^9}, {3.791908387856805*^9, 
  3.791908420326803*^9}, {3.791908826354254*^9, 
  3.791908827353642*^9}},ExpressionUUID->"3ca0c36b-7ca3-433f-a6a9-\
e29d20431e9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Partition"}]], "Input",
 CellChangeTimes->{{3.791905806871467*^9, 3.791905812661461*^9}, {
  3.791908348220338*^9, 3.79190834957057*^9}, {3.7919084356159477`*^9, 
  3.791908439997571*^9}},
 CellLabel->"In[85]:=",ExpressionUUID->"b17a2979-5d2e-4661-98fb-fe2c693311a3"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Partition",
              ButtonNote->"paclet:ref/Partition"],
             "\"paclet:ref/Partition\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) partitions \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\
\\\"]\\) into nonoverlapping sublists of length \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
generates sublists with offset \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\
\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) partitions a nested list into blocks of size \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis].\\n\\!\\(\\*RowBox[{\\\
\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"d\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) uses offset \\!\\(\\*SubscriptBox[StyleBox[\\\"d\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) at level \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) in \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies \
that the first element of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) \
should appear at position \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"L\\\", \\\"TI\\\"]]\\) in the first sublist, and \
the last element of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) should \
appear at or after position \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"R\\\", \\\"TI\\\"]]\\) in the last sublist. If \
additional elements are needed, Partition fills them in by treating \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) as cyclic. \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) pads if necessary by \
repeating the element \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) pads if \
necessary by cyclically repeating the elements \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"L\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"]\\\"}]\\) uses no padding, and so can \
yield sublists of different lengths. \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"nlist\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dlist\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"klist\\\", \\\
\"TI\\\"], StyleBox[\\\"L\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"klist\\\", \\\"TI\\\"], StyleBox[\\\"R\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"padlist\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) specifies alignments and padding in a nested \
list. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/Partition", 
                    "paclet:ref/Partition", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/Partition.\
html"], None}, "http://reference.wolfram.com/language/ref/Partition.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`Partition\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{26., {8., 18.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{26., {8., 18.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/Partition",
              ButtonNote->"paclet:ref/Partition"],
             "\"paclet:ref/Partition\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"]}], \\\"]\\\"}]\\) partitions \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\
\\\"]\\) into nonoverlapping sublists of length \\!\\(\\*StyleBox[\\\"n\\\", \
\\\"TI\\\"]\\). \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) \
generates sublists with offset \\!\\(\\*StyleBox[\\\"d\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\
\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) partitions a nested list into blocks of size \
\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \\\
\"TR\\\"]]\\)\[Times]\\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]\\)\[Times]\[Ellipsis].\\n\\!\\(\\*RowBox[{\\\
\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\
\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"n\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}], \\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"d\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"d\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\
\"}]}], \\\"]\\\"}]\\) uses offset \\!\\(\\*SubscriptBox[StyleBox[\\\"d\\\", \
\\\"TI\\\"], StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) at level \
\\!\\(\\*StyleBox[\\\"i\\\", \\\"TI\\\"]\\) in \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) specifies \
that the first element of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) \
should appear at position \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"L\\\", \\\"TI\\\"]]\\) in the first sublist, and \
the last element of \\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) should \
appear at or after position \\!\\(\\*SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"R\\\", \\\"TI\\\"]]\\) in the last sublist. If \
additional elements are needed, Partition fills them in by treating \
\\!\\(\\*StyleBox[\\\"list\\\", \\\"TI\\\"]\\) as cyclic. \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
StyleBox[\\\"x\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) pads if necessary by \
repeating the element \\!\\(\\*StyleBox[\\\"x\\\", \\\"TI\\\"]\\). \
\\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", RowBox[{StyleBox[\\\"list\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], StyleBox[\\\"L\\\", \
\\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], \
StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"x\\\", \
\\\"TI\\\"], StyleBox[\\\"2\\\", \\\"TR\\\"]], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}]}], \\\"]\\\"}]\\) pads if \
necessary by cyclically repeating the elements \
\\!\\(\\*SubscriptBox[StyleBox[\\\"x\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\). \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \\\
\"TI\\\"], \\\",\\\", StyleBox[\\\"d\\\", \\\"TI\\\"], \\\",\\\", \
RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"k\\\", \\\"TI\\\"], \
StyleBox[\\\"L\\\", \\\"TI\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"k\\\", \
\\\"TI\\\"], StyleBox[\\\"R\\\", \\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", \
RowBox[{\\\"{\\\", \\\"}\\\"}]}], \\\"]\\\"}]\\) uses no padding, and so can \
yield sublists of different lengths. \\n\\!\\(\\*RowBox[{\\\"Partition\\\", \
\\\"[\\\", RowBox[{StyleBox[\\\"list\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\
\"nlist\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"dlist\\\", \\\"TI\\\"], \
\\\",\\\", RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"klist\\\", \\\
\"TI\\\"], StyleBox[\\\"L\\\", \\\"TI\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"klist\\\", \\\"TI\\\"], StyleBox[\\\"R\\\", \
\\\"TI\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"padlist\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) specifies alignments and padding in a nested \
list. \"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{20., {4., 16.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{20., {4., 16.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"Partition\", \"[\", RowBox[{StyleBox[\"list\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"]}], \"]\"}]\) partitions \
\!\(\*StyleBox[\"list\", \"TI\"]\) into nonoverlapping sublists of length \
\!\(\*StyleBox[\"n\", \"TI\"]\). \n\!\(\*RowBox[{\"Partition\", \"[\", \
RowBox[{StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"], \",\", \
StyleBox[\"d\", \"TI\"]}], \"]\"}]\) generates sublists with offset \
\!\(\*StyleBox[\"d\", \"TI\"]\). \n\!\(\*RowBox[{\"Partition\", \"[\", \
RowBox[{StyleBox[\"list\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) partitions a nested \
list into blocks of size \!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]\)\[Times]\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"2\", \"TR\"]]\)\[Times]\[Ellipsis].\n\!\(\*RowBox[{\"Partition\", \
\"[\", RowBox[{StyleBox[\"list\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) uses offset \
\!\(\*SubscriptBox[StyleBox[\"d\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) at \
level \!\(\*StyleBox[\"i\", \"TI\"]\) in \!\(\*StyleBox[\"list\", \"TI\"]\). \
\n\!\(\*RowBox[{\"Partition\", \"[\", RowBox[{StyleBox[\"list\", \"TI\"], \",\
\", StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"d\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"L\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"R\", \
\"TI\"]]}], \"}\"}]}], \"]\"}]\) specifies that the first element of \
\!\(\*StyleBox[\"list\", \"TI\"]\) should appear at position \
\!\(\*SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"L\", \"TI\"]]\) in the \
first sublist, and the last element of \!\(\*StyleBox[\"list\", \"TI\"]\) \
should appear at or after position \!\(\*SubscriptBox[StyleBox[\"k\", \
\"TI\"], StyleBox[\"R\", \"TI\"]]\) in the last sublist. If additional \
elements are needed, Partition fills them in by treating \
\!\(\*StyleBox[\"list\", \"TI\"]\) as cyclic. \n\!\(\*RowBox[{\"Partition\", \
\"[\", RowBox[{StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"], \
\",\", StyleBox[\"d\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"L\", \"TI\"]], \
\",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"R\", \"TI\"]]}], \
\"}\"}], \",\", StyleBox[\"x\", \"TI\"]}], \"]\"}]\) pads if necessary by \
repeating the element \!\(\*StyleBox[\"x\", \"TI\"]\). \n\
\!\(\*RowBox[{\"Partition\", \"[\", RowBox[{StyleBox[\"list\", \"TI\"], \
\",\", StyleBox[\"n\", \"TI\"], \",\", StyleBox[\"d\", \"TI\"], \",\", \
RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"L\", \
\"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \"TI\"], StyleBox[\"R\", \
\"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"1\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"x\", \"TI\"], StyleBox[\"2\", \"TR\"]], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}]}], \"]\"}]\) pads if necessary \
by cyclically repeating the elements \!\(\*SubscriptBox[StyleBox[\"x\", \
\"TI\"], StyleBox[\"i\", \"TI\"]]\). \n\!\(\*RowBox[{\"Partition\", \"[\", \
RowBox[{StyleBox[\"list\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"], \",\", \
StyleBox[\"d\", \"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\
\"k\", \"TI\"], StyleBox[\"L\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"k\", \
\"TI\"], StyleBox[\"R\", \"TI\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
\"}\"}]}], \"]\"}]\) uses no padding, and so can yield sublists of different \
lengths. \n\!\(\*RowBox[{\"Partition\", \"[\", RowBox[{StyleBox[\"list\", \
\"TI\"], \",\", StyleBox[\"nlist\", \"TI\"], \",\", StyleBox[\"dlist\", \
\"TI\"], \",\", RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"klist\", \
\"TI\"], StyleBox[\"L\", \"TI\"]], \",\", SubscriptBox[StyleBox[\"klist\", \
\"TI\"], StyleBox[\"R\", \"TI\"]]}], \"}\"}], \",\", StyleBox[\"padlist\", \
\"TI\"]}], \"]\"}]\) specifies alignments and padding in a nested list. ", 
    "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/Partition", "Web" -> 
      "http://reference.wolfram.com/language/ref/Partition.html"], 
    "OwnValues" -> None, "UpValues" -> None, "DownValues" -> None, 
    "SubValues" -> None, "DefaultValues" -> None, "NValues" -> None, 
    "FormatValues" -> None, "Options" -> None, "Attributes" -> {Protected}, 
    "FullName" -> "System`Partition"], False]]], "Output",
 CellChangeTimes->{3.791905813197186*^9, 3.791908350190757*^9, 
  3.791908440404273*^9},
 CellLabel->"Out[85]=",ExpressionUUID->"ead5774a-5166-4f59-8059-0d3cd20286e3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"test", " ", "=", 
  RowBox[{"Partition", "[", "\[IndentingNewLine]", 
   RowBox[{"Uraw", ",", "3", ",", "1"}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.791908481059964*^9, 3.7919084970745487`*^9}},
 CellLabel->"In[87]:=",ExpressionUUID->"c8fa1885-69e8-4a0f-b102-188025bbba24"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ArrayPad", "[", 
  RowBox[{
   RowBox[{"Uraw", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", "2", ",", "\"\<Periodic\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"test", " ", "=", 
  RowBox[{"Partition", "[", 
   RowBox[{
    RowBox[{"ArrayPad", "[", 
     RowBox[{
      RowBox[{"Uraw", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", "2", ",", "\"\<Periodic\>\""}], 
     "]"}], ",", "3", ",", "1"}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.791908500053073*^9, 3.791908527577519*^9}, {
  3.791908575615179*^9, 3.791908602637101*^9}, {3.791908744415235*^9, 
  3.791908765700708*^9}, {3.791908875480425*^9, 3.791908903925508*^9}, {
  3.7919089356211243`*^9, 3.7919089364133043`*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"7fbade60-dc9b-4f19-b5b6-8f1ffe7325e5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0016172129976064`", ",", "1.0072478458157812`", ",", 
   "1.0462844597455545`", ",", "1.2074325573681541`", ",", 
   "1.3678794411714423`", ",", "1.2074325573681541`", ",", 
   "1.0462844597455545`", ",", "1.0072478458157812`", ",", 
   "1.0016172129976064`", ",", "1.0009118819655545`", ",", 
   "1.0016172129976064`", ",", "1.0072478458157812`", ",", 
   "1.0462844597455545`", ",", "1.2074325573681541`"}], "}"}]], "Output",
 CellChangeTimes->{{3.791908485781683*^9, 3.791908514601387*^9}, {
   3.791908578011162*^9, 3.791908603510757*^9}, 3.791908692481011*^9, {
   3.7919087464115057`*^9, 3.7919087660006638`*^9}, {3.791908878174151*^9, 
   3.7919089367705812`*^9}},
 CellLabel->
  "Out[143]=",ExpressionUUID->"7f87ad4a-1159-4256-b307-2c1f2eabb5bb"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1.0016172129976064`", ",", "1.0072478458157812`", ",", 
     "1.0462844597455545`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0072478458157812`", ",", "1.0462844597455545`", ",", 
     "1.2074325573681541`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0462844597455545`", ",", "1.2074325573681541`", ",", 
     "1.3678794411714423`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.2074325573681541`", ",", "1.3678794411714423`", ",", 
     "1.2074325573681541`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.3678794411714423`", ",", "1.2074325573681541`", ",", 
     "1.0462844597455545`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.2074325573681541`", ",", "1.0462844597455545`", ",", 
     "1.0072478458157812`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0462844597455545`", ",", "1.0072478458157812`", ",", 
     "1.0016172129976064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0072478458157812`", ",", "1.0016172129976064`", ",", 
     "1.0009118819655545`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0016172129976064`", ",", "1.0009118819655545`", ",", 
     "1.0016172129976064`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0009118819655545`", ",", "1.0016172129976064`", ",", 
     "1.0072478458157812`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0016172129976064`", ",", "1.0072478458157812`", ",", 
     "1.0462844597455545`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1.0072478458157812`", ",", "1.0462844597455545`", ",", 
     "1.2074325573681541`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.791908485781683*^9, 3.791908514601387*^9}, {
   3.791908578011162*^9, 3.791908603510757*^9}, 3.791908692481011*^9, {
   3.7919087464115057`*^9, 3.7919087660006638`*^9}, {3.791908878174151*^9, 
   3.79190893677383*^9}},
 CellLabel->
  "Out[144]=",ExpressionUUID->"bc83a093-0bf1-40d7-ae50-085621ac1797"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Uraw", "[", 
  RowBox[{"[", "1", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.7919085863832417`*^9, 3.7919086200761433`*^9}, {
  3.791908942173839*^9, 3.7919089436674137`*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"7503f8b9-5153-41ac-b84d-e5caaaf54cb9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.0462844597455545`", ",", "1.2074325573681541`", ",", 
   "1.3678794411714423`", ",", "1.2074325573681541`", ",", 
   "1.0462844597455545`", ",", "1.0072478458157812`", ",", 
   "1.0016172129976064`", ",", "1.0009118819655545`", ",", 
   "1.0016172129976064`", ",", "1.0072478458157812`"}], "}"}]], "Output",
 CellChangeTimes->{{3.791908587888589*^9, 3.79190862033811*^9}, 
   3.791908944048518*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"9fa88fdf-33b0-4d31-99fb-fb354ec1c06f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ArrayPad"}]], "Input",
 CellChangeTimes->{{3.791908546570451*^9, 3.7919085493436747`*^9}},
 CellLabel->"In[89]:=",ExpressionUUID->"933ae403-0b40-477c-9464-2994639c998d"],

Cell[BoxData[
 InterpretationBox[
  StyleBox[
   FrameBox[
    DynamicModuleBox[{System`InformationDump`open$$ = False, 
     System`InformationDump`mouseOver$$ = False}, 
     PaneSelectorBox[{True->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False,
             BaseStyle -> None],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"]], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"]]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ArrayPad",
              ButtonNote->"paclet:ref/ArrayPad"],
             "\"paclet:ref/ArrayPad\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ArrayPad\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives an array with \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) 0s of padding on every side. \
\\n\\!\\(\\*RowBox[{\\\"ArrayPad\\\", \\\"[\\\", RowBox[{StyleBox[\\\"array\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"padding\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses the specified \
padding.\\n\\!\\(\\*RowBox[{\\\"ArrayPad\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) pads with \\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) \
elements at the beginning and \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
elements at the end. \\n\\!\\(\\*RowBox[{\\\"ArrayPad\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) pads with \
\\!\\(\\*SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\), \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) elements at level \\!\\(\\*StyleBox[\\\"i\
\\\", \\\"TI\\\"]\\) in \\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\). \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          PaneBox[GridBox[{
             {
              
              DynamicModuleBox[{System`InformationDump`open$$ = {
               False, False, False, False, False, False, False, False, False, 
                False, False, False}}, 
               StyleBox[GridBox[{
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Documentation\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Documentation\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Documentation", "Tooltip"]& ], 
                   
                   TemplateBox[{
                    TemplateBox[{
                    "\"Local \[RightGuillemet]\"", "paclet:ref/ArrayPad", 
                    "paclet:ref/ArrayPad", "Link", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"],"\"  \"",StyleBox[
                    "\"|\"", "InformationRowLabel", StripOnInput -> False],
                    "\"  \"",TemplateBox[{"\"Web \[RightGuillemet]\"", {
                    URL[
                    "http://reference.wolfram.com/language/ref/ArrayPad.html"]\
, None}, "http://reference.wolfram.com/language/ref/ArrayPad.html", 
                    "Hyperlink", {
                    RGBColor[0.9686274509803922, 0.4666666666666667, 0.]}, 
                    BaseStyle -> {
                    RGBColor[0.0784313725490196, 0.1568627450980392, 0.6]}}, 
                    "HyperlinkTemplate"]},
                    "RowDefault"]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Options\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Options\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Options", "Tooltip"]& ], 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"InterpolationOrder", "\[Rule]", "1"}], ",", 
                    RowBox[{"Padding", "\[Rule]", "0"}]}], "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Attributes\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"Attributes\"",
                    TooltipStyle->"TextStyling"],
                    Annotation[#, "Attributes", "Tooltip"]& ], 
                   RowBox[{"{", "Protected", "}"}]},
                  {
                   TagBox[
                    TooltipBox[
                    StyleBox["\<\" Full Name\"\>", "InformationRowLabel",
                    StripOnInput->False],
                    "\"FullName\"",
                    TooltipStyle->"TextStyling"],
                    
                    Annotation[#, "FullName", 
                    "Tooltip"]& ], "\<\"System`ArrayPad\"\>"}
                 },
                 AutoDelete->False,
                 GridBoxAlignment->{"Columns" -> {Right, Left}},
                 GridBoxDividers->None,
                 GridBoxItemSize->{"Columns" -> {Automatic, Automatic}},
                 GridBoxSpacings->{"Columns" -> {
                    Offset[0.27999999999999997`], {
                    Offset[0.5599999999999999]}, 
                    Offset[0.27999999999999997`]}, "Rows" -> {
                    Offset[0.2], {
                    Offset[0.8]}, 
                    Offset[0.2]}}], "DialogStyle",
                StripOnInput->False],
               DynamicModuleValues:>{}]}
            },
            DefaultBaseStyle->"Column",
            GridBoxAlignment->{"Columns" -> {{Left}}},
            GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], {
                 Offset[0.5599999999999999]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[3.6]}, 
                Offset[0.2]}}],
           FrameMargins->6], ""},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpener"]], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "UpPointerOpenerHot"]]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, False],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"], False->
      TagBox[GridBox[{
         {
          ItemBox[
           PaneBox[
            StyleBox["\<\" Symbol\"\>", "InformationTitleText",
             StripOnInput->False],
            FrameMargins->{{4, 0}, {-1, 1}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], 
          ItemBox[
           PaneBox[
            TooltipBox[
             ButtonBox[
              PaneSelectorBox[{False->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIcon"],
                ImageSizeCache->{26., {8., 18.}}], True->
               
               DynamicBox[FEPrivate`FrontEndResource[
                "FEBitmaps", "InformationHelpIconHot"],
                ImageSizeCache->{26., {8., 18.}}]}, Dynamic[
                CurrentValue["MouseOver"]]],
              Appearance->None,
              BaseStyle->"Link",
              ButtonData->"paclet:ref/ArrayPad",
              ButtonNote->"paclet:ref/ArrayPad"],
             "\"paclet:ref/ArrayPad\""],
            FrameMargins->{{0, 4}, {0, 2}}],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           PaneBox[
            
            StyleBox["\<\"\\!\\(\\*RowBox[{\\\"ArrayPad\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \
\\\"TI\\\"]}], \\\"]\\\"}]\\) gives an array with \
\\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) 0s of padding on every side. \
\\n\\!\\(\\*RowBox[{\\\"ArrayPad\\\", \\\"[\\\", RowBox[{StyleBox[\\\"array\\\
\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", \
StyleBox[\\\"padding\\\", \\\"TI\\\"]}], \\\"]\\\"}]\\) uses the specified \
padding.\\n\\!\\(\\*RowBox[{\\\"ArrayPad\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{StyleBox[\\\"m\\\", \\\"TI\\\"], \\\",\\\", StyleBox[\\\"n\\\", \
\\\"TI\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\[Ellipsis]\\\", \\\"TR\\\
\"]}], \\\"]\\\"}]\\) pads with \\!\\(\\*StyleBox[\\\"m\\\", \\\"TI\\\"]\\) \
elements at the beginning and \\!\\(\\*StyleBox[\\\"n\\\", \\\"TI\\\"]\\) \
elements at the end. \\n\\!\\(\\*RowBox[{\\\"ArrayPad\\\", \\\"[\\\", \
RowBox[{StyleBox[\\\"array\\\", \\\"TI\\\"], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{RowBox[{\\\"{\\\", RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \
\\\"TI\\\"], StyleBox[\\\"1\\\", \\\"TR\\\"]], \\\",\\\", \
SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], StyleBox[\\\"1\\\", \
\\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", RowBox[{\\\"{\\\", \
RowBox[{SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], StyleBox[\\\"2\\\", \
\\\"TR\\\"]], \\\",\\\", SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"2\\\", \\\"TR\\\"]]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"}\\\"}], \\\",\\\", StyleBox[\\\"\
\[Ellipsis]\\\", \\\"TR\\\"]}], \\\"]\\\"}]\\) pads with \
\\!\\(\\*SubscriptBox[StyleBox[\\\"m\\\", \\\"TI\\\"], StyleBox[\\\"i\\\", \\\
\"TI\\\"]]\\), \\!\\(\\*SubscriptBox[StyleBox[\\\"n\\\", \\\"TI\\\"], \
StyleBox[\\\"i\\\", \\\"TI\\\"]]\\) elements at level \\!\\(\\*StyleBox[\\\"i\
\\\", \\\"TI\\\"]\\) in \\!\\(\\*StyleBox[\\\"array\\\", \\\"TI\\\"]\\). \
\"\>", "InformationUsageText",
             StripOnInput->False,
             LineSpacing->{1.5, 1.5, 3.}],
            FrameMargins->{{10, 10}, {8, 10}}],
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False], 
          ItemBox["\<\"\"\>",
           BaseStyle->"InformationUsageSubtitleBackground",
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            ButtonBox[
             PaneSelectorBox[{False->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpener"],
               ImageSizeCache->{20., {4., 16.}}], True->
              
              DynamicBox[FEPrivate`FrontEndResource[
               "FEBitmaps", "DownPointerOpenerHot"],
               ImageSizeCache->{20., {4., 16.}}]}, Dynamic[
              System`InformationDump`mouseOver$$]],
             Alignment->Left,
             Appearance->{"Default" -> None},
             
             ButtonFunction:>FEPrivate`Set[
              System`InformationDump`open$$, True],
             Evaluator->Automatic,
             FrameMargins->{{9, 0}, {0, 0}},
             ImageMargins->0,
             ImageSize->Full,
             Method->"Preemptive"],
            
            EventHandlerTag[{
             "MouseEntered" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, True], 
              "MouseExited" :> 
              FEPrivate`Set[System`InformationDump`mouseOver$$, False], 
              Method -> "Preemptive", PassEventsDown -> Automatic, 
              PassEventsUp -> True}]],
           BaseStyle->"InformationTitleBackground",
           StripOnInput->False], "\[SpanFromLeft]"}
        },
        AutoDelete->False,
        FrameStyle->Directive[
          GrayLevel[0.8], 
          Thickness[Tiny]],
        GridBoxAlignment->{"Columns" -> {Left, Right}, "Rows" -> {{Center}}},
        GridBoxDividers->{
         "Columns" -> {{None}}, "Rows" -> {False, {True}, False}},
        GridBoxItemSize->{
         "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
       "Grid"]}, Dynamic[System`InformationDump`open$$],
      BaselinePosition->Baseline,
      FrameMargins->0,
      ImageSize->Automatic],
     DynamicModuleValues:>{}],
    BaseStyle->"InformationGridFrame",
    StripOnInput->False], "InformationGridPlain",
   StripOnInput->False],
  InformationData[
   Association[
   "ObjectType" -> "Symbol", "Usage" -> 
    "\!\(\*RowBox[{\"ArrayPad\", \"[\", RowBox[{StyleBox[\"array\", \"TI\"], \
\",\", StyleBox[\"m\", \"TI\"]}], \"]\"}]\) gives an array with \
\!\(\*StyleBox[\"m\", \"TI\"]\) 0s of padding on every side. \n\!\(\*RowBox[{\
\"ArrayPad\", \"[\", RowBox[{StyleBox[\"array\", \"TI\"], \",\", StyleBox[\"m\
\", \"TI\"], \",\", StyleBox[\"padding\", \"TI\"]}], \"]\"}]\) uses the \
specified padding.\n\!\(\*RowBox[{\"ArrayPad\", \"[\", \
RowBox[{StyleBox[\"array\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{StyleBox[\"m\", \"TI\"], \",\", StyleBox[\"n\", \"TI\"]}], \"}\"}], \
\",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) pads with \
\!\(\*StyleBox[\"m\", \"TI\"]\) elements at the beginning and \!\(\*StyleBox[\
\"n\", \"TI\"]\) elements at the end. \n\!\(\*RowBox[{\"ArrayPad\", \"[\", \
RowBox[{StyleBox[\"array\", \"TI\"], \",\", RowBox[{\"{\", \
RowBox[{RowBox[{\"{\", RowBox[{SubscriptBox[StyleBox[\"m\", \"TI\"], \
StyleBox[\"1\", \"TR\"]], \",\", SubscriptBox[StyleBox[\"n\", \"TI\"], \
StyleBox[\"1\", \"TR\"]]}], \"}\"}], \",\", RowBox[{\"{\", \
RowBox[{SubscriptBox[StyleBox[\"m\", \"TI\"], StyleBox[\"2\", \"TR\"]], \
\",\", SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"2\", \"TR\"]]}], \
\"}\"}], \",\", StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"}\"}], \",\", \
StyleBox[\"\[Ellipsis]\", \"TR\"]}], \"]\"}]\) pads with \
\!\(\*SubscriptBox[StyleBox[\"m\", \"TI\"], StyleBox[\"i\", \"TI\"]]\), \
\!\(\*SubscriptBox[StyleBox[\"n\", \"TI\"], StyleBox[\"i\", \"TI\"]]\) \
elements at level \!\(\*StyleBox[\"i\", \"TI\"]\) in \
\!\(\*StyleBox[\"array\", \"TI\"]\). ", "Documentation" -> 
    Association[
     "Local" -> "paclet:ref/ArrayPad", "Web" -> 
      "http://reference.wolfram.com/language/ref/ArrayPad.html"], "OwnValues" -> 
    None, "UpValues" -> None, "DownValues" -> None, "SubValues" -> None, 
    "DefaultValues" -> None, "NValues" -> None, "FormatValues" -> None, 
    "Options" -> {InterpolationOrder -> 1, Padding -> 0}, 
    "Attributes" -> {Protected}, "FullName" -> "System`ArrayPad"], 
   False]]], "Output",
 CellChangeTimes->{3.791908549677114*^9},
 CellLabel->"Out[89]=",ExpressionUUID->"a11705a5-5b6a-4250-9818-4218642200e7"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Uraw"], "Input",
 CellChangeTimes->{{3.791908669416997*^9, 3.7919086706894693`*^9}},
 CellLabel->
  "In[115]:=",ExpressionUUID->"495cd868-d973-4146-9343-1bfc0ba03136"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0.25`", ",", "0.25`", ",", "0.25`", ",", "0.25`", ",", "0.25`", ",", 
     "0.25`", ",", "0.25`", ",", "0.25`", ",", "0.25`", ",", "0.25`"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "0.08333333333333333`"}], ",", 
     RowBox[{"-", "0.08333333333333333`"}], ",", 
     RowBox[{"-", "0.08333333333333333`"}], ",", 
     RowBox[{"-", "0.08333333333333333`"}], ",", 
     RowBox[{"-", "0.08333333333333333`"}], ",", 
     RowBox[{"-", "0.08333333333333333`"}], ",", 
     RowBox[{"-", "0.08333333333333333`"}], ",", 
     RowBox[{"-", "0.08333333333333333`"}], ",", 
     RowBox[{"-", "0.08333333333333333`"}], ",", 
     RowBox[{"-", "0.08333333333333333`"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.791908671141644*^9},
 CellLabel->
  "Out[115]=",ExpressionUUID->"dce53621-aba6-46c3-ac14-89c7c02ee45e"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "dx"], 
   RowBox[{"Transpose", "[", 
    RowBox[{"MapThread", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#1", ".", "#2"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"A0", "@@", "U"}], ",", 
        RowBox[{"Transpose", "[", "dU", "]"}]}], "}"}]}], "]"}], "]"}]}], "-", 
  RowBox[{"Transpose", "[", 
   RowBox[{"P", "@@", "Uraw"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.791910862928567*^9, 
  3.791910863464005*^9}},ExpressionUUID->"fe302cb8-3290-44b8-8c70-\
f0439a3e3436"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"P", "@@", "Uraw"}]], "Input",
 CellChangeTimes->{{3.791910879041649*^9, 3.791910908493494*^9}, {
  3.791910944005076*^9, 3.791910945267683*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"1fb15b02-c363-49e5-a0e5-897eeb5265f3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.`", ",", "0.`", ",", "0.`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.7919108794318047`*^9, 3.791910908874365*^9}, 
   3.7919109482629232`*^9},
 CellLabel->
  "Out[156]=",ExpressionUUID->"455eccf0-e275-43bb-9213-06ee71ba816f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"A0", "@@", "U"}]], "Input",
 CellChangeTimes->{{3.791910955151559*^9, 3.791910958146954*^9}},
 CellLabel->
  "In[157]:=",ExpressionUUID->"179fd2bc-f342-49f2-a6f4-d38102f56d9c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.25`"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0", ",", "0.25`"}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.79191095869366*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"ee75342c-4424-44c4-b5b6-001adb12b261"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Test 2", "Section",
 CellChangeTimes->{{3.792155052159651*^9, 
  3.7921550593353767`*^9}},ExpressionUUID->"3a16bac4-88c0-4c04-bb19-\
242e90e174be"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"R", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Chi]", "=", "0.1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"x1", "=", 
   RowBox[{"-", "1.0"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"x2", "=", "1.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xOffset", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"h0", "[", "x_", "]"}], ":=", 
   RowBox[{"1", "+", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"3", 
       RowBox[{"Cos", "[", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{"(", 
          RowBox[{"x", "+", "xOffset"}], ")"}]}], "]"}]}], "-", "4"}], 
     "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"u0", "[", "x_", "]"}], ":=", "0.25"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"s0", "[", "x_", "]"}], ":=", 
   RowBox[{"-", "0.25"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Kappa]0", "[", "x_", "]"}], ":=", "0.0"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"\[Gamma]0", "[", "x_", "]"}], ":=", "0.0"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nx", "=", "10"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tEnd", "=", "0.2"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modeltag", "=", "\"\<N = 1\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"MaxSpeed", "[", 
    RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", 
        RowBox[{
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hu"}]}], ",", 
       RowBox[{"s", "=", 
        RowBox[{
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Abs", "[", "u", "]"}], "+", 
      SqrtBox[
       RowBox[{"h", "+", 
        SuperscriptBox["s", "2"]}]]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Flux", "[", 
    RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", 
        RowBox[{
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hu"}]}], ",", 
       RowBox[{"s", "=", 
        RowBox[{
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"h", " ", "u"}], ",", 
       RowBox[{
        RowBox[{"h", " ", 
         SuperscriptBox["u", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "3"], "h", " ", 
         SuperscriptBox["s", "2"]}], "+", 
        RowBox[{
         FractionBox["1", "2"], 
         SuperscriptBox["h", "2"]}]}], ",", 
       RowBox[{"2", "h", " ", "s", " ", "u"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"P", "[", 
    RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"u", "=", 
        RowBox[{
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hu"}]}], ",", 
       RowBox[{"s", "=", 
        RowBox[{
         SuperscriptBox["h", 
          RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
     RowBox[{
      FractionBox["R", "\[Chi]"], 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        RowBox[{"u", "+", "s"}], ",", 
        RowBox[{"3", "*", 
         RowBox[{"(", 
          RowBox[{"u", "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"4", 
               FractionBox["\[Chi]", "h"]}]}], ")"}], "s"}]}], ")"}]}]}], 
       "}"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"A0", "[", 
     RowBox[{"h_", ",", "hu_", ",", "hs_"}], "]"}], "=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"u", "=", 
         RowBox[{
          SuperscriptBox["h", 
           RowBox[{"-", "1"}]], "hu"}]}], ",", 
        RowBox[{"s", "=", 
         RowBox[{
          SuperscriptBox["h", 
           RowBox[{"-", "1"}]], "hs"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "u"}], "}"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"init", "[", "x_", "]"}], "=", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"h0", "[", "x", "]"}], ",", 
      RowBox[{
       RowBox[{"h0", "[", "x", "]"}], 
       RowBox[{"u0", "[", "x", "]"}]}], ",", 
      RowBox[{
       RowBox[{"h0", "[", "x", "]"}], 
       RowBox[{"s0", "[", "x", "]"}]}]}], "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dx", "=", 
   FractionBox[
    RowBox[{"x2", "-", "x1"}], "nx"]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"xs", "[", "i_", "]"}], ":=", 
    RowBox[{"x1", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"i", "-", "0.5"}], ")"}], "dx"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pts", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"xs", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "nx"}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Uraw", "=", 
    RowBox[{"Transpose", "[", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"init", "[", 
        RowBox[{"xs", "[", "i", "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", "nx"}], "}"}]}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cMax", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dt", "=", 
   RowBox[{"0.1", "dx"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"time", "=", "0.0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"step", "=", "0"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", "Uraw", "]"}]}], "Input",
 CellChangeTimes->{{3.7921580749360857`*^9, 3.792158094949732*^9}, {
  3.792158128772479*^9, 3.792158232487378*^9}, {3.7921587044792757`*^9, 
  3.7921587073744907`*^9}, {3.792163203637759*^9, 3.7921632037888927`*^9}, {
  3.7921633631503353`*^9, 3.7921633655326967`*^9}},
 CellLabel->
  "In[556]:=",ExpressionUUID->"b1ef4448-b20f-4b9b-a21e-045bdf3b37c3"],

Cell[BoxData[
 GraphicsBox[{{}, {{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., 1.0462844597455545`}, {2., 1.2074325573681541`}, {3., 
       1.3678794411714423`}, {4., 1.2074325573681541`}, {5., 
       1.0462844597455545`}, {6., 1.0072478458157812`}, {7., 
       1.0016172129976064`}, {8., 1.0009118819655545`}, {9., 
       1.0016172129976064`}, {10., 1.0072478458157812`}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., 0.2615711149363886}, {2., 0.30185813934203853`}, {3., 
       0.3419698602928606}, {4., 0.30185813934203853`}, {5., 
       0.2615711149363886}, {6., 0.2518119614539453}, {7., 
       0.2504043032494016}, {8., 0.2502279704913886}, {9., 
       0.2504043032494016}, {10., 0.2518119614539453}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., -0.2615711149363886}, {2., -0.30185813934203853`}, {
       3., -0.3419698602928606}, {4., -0.30185813934203853`}, {
       5., -0.2615711149363886}, {6., -0.2518119614539453}, {
       7., -0.2504043032494016}, {8., -0.2502279704913886}, {
       9., -0.2504043032494016}, {10., -0.2518119614539453}}]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {-0.3419698602928606, 1.3678794411714423`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.792158131892715*^9, 3.792158247417646*^9, 
  3.792163204481155*^9, 3.7921633746531773`*^9},
 CellLabel->
  "Out[582]=",ExpressionUUID->"a8fcfcdf-eef8-4258-8c5e-2815f9c62ab3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.792158108638623*^9, 
  3.792158126597492*^9}},ExpressionUUID->"e5e9e692-17ab-4640-8068-\
c146c6f934fe"],

Cell[BoxData[
 GraphicsBox[{{}, {{
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., 1.0462844597455545`}, {2., 1.2074325573681541`}, {3., 
       1.3678794411714423`}, {4., 1.2074325573681541`}, {5., 
       1.0462844597455545`}, {6., 1.0072478458157812`}, {7., 
       1.0016172129976064`}, {8., 1.0009118819655545`}, {9., 
       1.0016172129976064`}, {10., 1.0072478458157812`}}]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., 0.2615711149363886}, {2., 0.30185813934203853`}, {3., 
       0.3419698602928606}, {4., 0.30185813934203853`}, {5., 
       0.2615711149363886}, {6., 0.2518119614539453}, {7., 
       0.2504043032494016}, {8., 0.2502279704913886}, {9., 
       0.2504043032494016}, {10., 0.2518119614539453}}]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{1., -0.08719037164546287}, {2., -0.1006193797806795}, {
       3., -0.11398995343095353`}, {4., -0.1006193797806795}, {
       5., -0.08719037164546287}, {6., -0.08393732048464843}, {
       7., -0.08346810108313386}, {8., -0.08340932349712954}, {
       9., -0.08346810108313386}, {10., -0.08393732048464843}}]}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}}, {
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], PointSize[
      0.012833333333333334`], AbsoluteThickness[
      1.6]}, {}, {}, {}, {}, {}, {}, {}}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 10.}, {-0.11398995343095353`, 1.3678794411714423`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.792158110996022*^9, 3.792158119512429*^9}},
 CellLabel->
  "Out[477]=",ExpressionUUID->"e95837db-b772-4533-8f00-b2915f739a55"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.5", "z"}], ")"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", " ", "-", " ", 
      RowBox[{"2", " ", "z"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.7921584098626842`*^9, 3.792158422484277*^9}, {
  3.792158497593914*^9, 
  3.792158512896694*^9}},ExpressionUUID->"0ff3a60a-6bcb-4e58-af97-\
6548f374e938"],

Cell[BoxData[
 RowBox[{"-", "0.08333333333333331`"}]], "Output",
 CellChangeTimes->{
  3.792158423598179*^9, {3.7921585028355722`*^9, 3.792158506797999*^9}},
 CellLabel->
  "Out[528]=",ExpressionUUID->"bc7d846e-de7c-408a-8d53-60286c52a9e6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"0.5", "z"}], "-", "0.25"}]], "Input",
 CellChangeTimes->{{3.792158522048864*^9, 
  3.792158529606606*^9}},ExpressionUUID->"b3c63fc3-408d-40d9-9feb-\
649bb8fcb171"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{2560, 1395},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>2. Inherited,
FrontEndVersion->"12.0 for Mac OS X x86 (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 120, 0, 136, "Chapter",ExpressionUUID->"59327d0c-b1ed-4a16-9269-e4443a1cc6cf"],
Cell[CellGroupData[{
Cell[725, 26, 94, 0, 134, "Section",ExpressionUUID->"c3466952-05b4-4b4b-9329-2564e1bcbcbd"],
Cell[CellGroupData[{
Cell[844, 30, 82, 0, 107, "Subsection",ExpressionUUID->"a53052cf-1a4e-4d1b-ad3c-fd0162ec9e68"],
Cell[929, 32, 2228, 63, 543, "Input",ExpressionUUID->"3fe79328-6e2b-4802-add5-91024bd8b154",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[3194, 100, 106, 0, 107, "Subsection",ExpressionUUID->"e57827b6-85e5-4ade-9b1f-512c18bd6c96"],
Cell[3303, 102, 3066, 91, 330, "Input",ExpressionUUID->"f2bb8d8b-6b90-403d-ab47-9980b70df463",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[6406, 198, 103, 0, 107, "Subsection",ExpressionUUID->"d3ac6bee-608a-4501-8d0c-79f8e656022d"],
Cell[6512, 200, 3291, 89, 648, "Input",ExpressionUUID->"4b299195-8fc6-4c09-9eeb-5b6988468bf2",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[9840, 294, 114, 0, 107, "Subsection",ExpressionUUID->"f25edc49-a3d9-487b-99ca-9d80abeaa315"],
Cell[9957, 296, 3447, 83, 1301, "Input",ExpressionUUID->"ee8db1e9-c8e5-44fe-8811-1077118d360f",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[13441, 384, 109, 0, 107, "Subsection",ExpressionUUID->"1e28f0b0-67d3-438f-bae3-b234d623815d"],
Cell[13553, 386, 6774, 163, 681, "Input",ExpressionUUID->"f1588e6f-408e-4c75-8dfa-9b39f62c6a25",
 InitializationCell->True]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20376, 555, 115, 0, 134, "Section",ExpressionUUID->"b4b134eb-d5df-4059-ad9e-8160a284a3b6"],
Cell[CellGroupData[{
Cell[20516, 559, 90, 0, 89, "Subsubsection",ExpressionUUID->"01499126-11fe-48a5-9c50-aeb7de367670"],
Cell[20609, 561, 47286, 1166, 4602, "Input",ExpressionUUID->"ad7edc7f-fd8b-4ee6-8649-f75432eed46d",
 InitializationCell->True]
}, Closed]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67944, 1733, 582, 14, 135, "Section",ExpressionUUID->"00e923e2-f530-41e5-9549-1ec97ce763e2"],
Cell[68529, 1749, 1861, 55, 656, "Input",ExpressionUUID->"591d189b-daed-420e-93fe-51b59c626878"],
Cell[CellGroupData[{
Cell[70415, 1808, 98, 0, 107, "Subsection",ExpressionUUID->"1f6a37de-e6c9-4ea6-88f9-dba954f886b1"],
Cell[CellGroupData[{
Cell[70538, 1812, 1022, 27, 369, "Input",ExpressionUUID->"c9302dde-8bc8-47e0-adfa-795b4b26706f"],
Cell[71563, 1841, 626, 13, 102, "Output",ExpressionUUID->"04273240-f86e-4fde-ab92-28f5903def57"],
Cell[72192, 1856, 683, 14, 592, "Output",ExpressionUUID->"e113b62c-b5e8-49f8-97e5-67ca5821d38f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[72924, 1876, 84, 0, 107, "Subsection",ExpressionUUID->"0accf16b-6e58-41bc-9f66-dcf526bdd084"],
Cell[73011, 1878, 3440, 116, 378, "Input",ExpressionUUID->"9d4b3477-654b-4261-b3e7-3efbc206ffb4"],
Cell[76454, 1996, 2172, 64, 320, "Input",ExpressionUUID->"5fbbf178-6658-4c4b-87a4-35d260eac0b3"],
Cell[78629, 2062, 170, 3, 123, "Input",ExpressionUUID->"d2f45f60-b4e5-435e-9307-05f8073e84a2"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[78848, 2071, 522, 13, 135, "Section",ExpressionUUID->"63f1dedc-7399-4e70-9550-40188429900c"],
Cell[CellGroupData[{
Cell[79395, 2088, 10409, 269, 921, "Input",ExpressionUUID->"6c5dce44-066c-4b82-bd55-a969f1c6c59e"],
Cell[89807, 2359, 284566, 4767, 1086, "Output",ExpressionUUID->"1ef02bc3-0100-49be-b497-8de5ba0cf999"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[374422, 7132, 152, 3, 102, "Section",ExpressionUUID->"2c7aab6d-3e42-4ab4-8590-0efc8a98ef74"],
Cell[374577, 7137, 6281, 192, 1252, "Input",ExpressionUUID->"ed5ed749-1005-4959-9ba8-f387cb5c044e"],
Cell[380861, 7331, 1535, 46, 543, "Input",ExpressionUUID->"c2bbc435-6f54-48b3-8522-a51b6a14d2df"],
Cell[CellGroupData[{
Cell[382421, 7381, 260, 4, 59, "Input",ExpressionUUID->"116b4ad6-e05c-4712-91b2-7b94de4ddd76"],
Cell[382684, 7387, 1522, 31, 150, "Output",ExpressionUUID->"6f394ed7-88be-4f7f-bb62-d066488b1350"]
}, Open  ]],
Cell[384221, 7421, 1175, 32, 183, "Input",ExpressionUUID->"b465aa18-26ea-41b7-a70f-e5e84a01ce52"],
Cell[CellGroupData[{
Cell[385421, 7457, 247, 4, 59, "Input",ExpressionUUID->"f061c9d6-6501-477a-834f-94de148bdd0b"],
Cell[385671, 7463, 1912, 46, 449, "Output",ExpressionUUID->"3fb4154d-2e54-4024-9171-e32e3f8c2f2f"]
}, Open  ]],
Cell[387598, 7512, 1202, 29, 347, "Input",ExpressionUUID->"3ca0c36b-7ca3-433f-a6a9-e29d20431e9d"],
Cell[CellGroupData[{
Cell[388825, 7545, 296, 5, 59, "Input",ExpressionUUID->"b17a2979-5d2e-4661-98fb-fe2c693311a3"],
Cell[389124, 7552, 27572, 506, 597, "Output",ExpressionUUID->"ead5774a-5166-4f59-8059-0d3cd20286e3"]
}, Open  ]],
Cell[416711, 8061, 327, 6, 142, "Input",ExpressionUUID->"c8fa1885-69e8-4a0f-b102-188025bbba24"],
Cell[CellGroupData[{
Cell[417063, 8071, 802, 19, 101, "Input",ExpressionUUID->"7fbade60-dc9b-4f19-b5b6-8f1ffe7325e5"],
Cell[417868, 8092, 799, 15, 67, "Output",ExpressionUUID->"7f87ad4a-1159-4256-b307-2c1f2eabb5bb"],
Cell[418670, 8109, 1985, 56, 150, "Output",ExpressionUUID->"bc83a093-0bf1-40d7-ae50-085621ac1797"]
}, Open  ]],
Cell[CellGroupData[{
Cell[420692, 8170, 284, 6, 59, "Input",ExpressionUUID->"7503f8b9-5153-41ac-b84d-e5caaaf54cb9"],
Cell[420979, 8178, 526, 11, 67, "Output",ExpressionUUID->"9fa88fdf-33b0-4d31-99fb-fb354ec1c06f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[421542, 8194, 198, 3, 59, "Input",ExpressionUUID->"933ae403-0b40-477c-9464-2994639c998d"],
Cell[421743, 8199, 17680, 376, 321, "Output",ExpressionUUID->"a11705a5-5b6a-4250-9818-4218642200e7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[439460, 8580, 181, 3, 59, "Input",ExpressionUUID->"495cd868-d973-4146-9343-1bfc0ba03136"],
Cell[439644, 8585, 1061, 26, 109, "Output",ExpressionUUID->"dce53621-aba6-46c3-ac14-89c7c02ee45e"]
}, Open  ]],
Cell[440720, 8614, 562, 17, 89, "Input",ExpressionUUID->"fe302cb8-3290-44b8-8c70-f0439a3e3436"],
Cell[CellGroupData[{
Cell[441307, 8635, 251, 5, 59, "Input",ExpressionUUID->"1fb15b02-c363-49e5-a0e5-897eeb5265f3"],
Cell[441561, 8642, 982, 26, 67, "Output",ExpressionUUID->"455eccf0-e275-43bb-9213-06ee71ba816f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[442580, 8673, 200, 4, 59, "Input",ExpressionUUID->"179fd2bc-f342-49f2-a6f4-d38102f56d9c"],
Cell[442783, 8679, 2800, 86, 150, "Output",ExpressionUUID->"ee75342c-4424-44c4-b5b6-001adb12b261"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[445632, 8771, 153, 3, 102, "Section",ExpressionUUID->"3a16bac4-88c0-4c04-bb19-242e90e174be"],
Cell[CellGroupData[{
Cell[445810, 8778, 6858, 223, 1658, "Input",ExpressionUUID->"b1ef4448-b20f-4b9b-a21e-045bdf3b37c3"],
Cell[452671, 9003, 3272, 70, 490, "Output",ExpressionUUID->"a8fcfcdf-eef8-4258-8c5e-2815f9c62ab3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[455980, 9078, 152, 3, 59, "Input",ExpressionUUID->"e5e9e692-17ab-4640-8068-c146c6f934fe"],
Cell[456135, 9083, 3232, 69, 490, "Output",ExpressionUUID->"e95837db-b772-4533-8f00-b2915f739a55"]
}, Open  ]],
Cell[CellGroupData[{
Cell[459404, 9157, 481, 14, 59, "Input",ExpressionUUID->"0ff3a60a-6bcb-4e58-af97-6548f374e938"],
Cell[459888, 9173, 240, 5, 89, "Output",ExpressionUUID->"bc7d846e-de7c-408a-8d53-60286c52a9e6"]
}, Open  ]],
Cell[460143, 9181, 198, 5, 59, "Input",ExpressionUUID->"b3c63fc3-408d-40d9-9feb-649bb8fcb171"]
}, Open  ]]
}, Open  ]]
}
]
*)

